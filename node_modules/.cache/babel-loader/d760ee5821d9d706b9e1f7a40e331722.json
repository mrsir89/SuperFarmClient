{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\SuperFarmClient\\\\SuperFarmClient\\\\src\\\\component\\\\board\\\\QnABoard.js\";\nimport React from 'react';\nimport { Actions } from '../../actions/index';\nimport { ActionTypes } from '../../contants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport NewWindow from 'react-new-window'; // const qnaboardList = (productNum,size,page) => dispatch => {\n//   return dispatch(Actions.getQnABoard())\n//     .then(response => {\n//       if (response.type === ActionTypes.QNABOARD_SUCCESS) {\n//         console.log(' QnABoard Reading 성공')\n//       } else {\n//         return Promise.reject(response);\n//       }\n//     });\n// };\n// 추가 라이브러리 npm i react-new-window --save <--- 윈도우 새창 띄우기숌\n// const writeQnABoard = (qnaContent) => dispatch => {\n//   return dispatch(Actions.writeQnABoard())\n//     .then(response => {\n//       if (response.type === ActionTypes.QNABOARD_SUCCESS) {\n//         console.log('QnA READ SUCCESS')\n//         return dispatch(Actions.getQnABoard())\n//       } else {\n//         return Promise.reject(response);\n//       }\n//     });\n// };\n// const writeQnABoard=()={\n//   return (\n//   )\n// }\n\nclass QnABoard extends React.Component {\n  constructor(props) {\n    super(props);\n    const qnaBoard = this.props.qnaBoard;\n    this.state = {\n      qnaBoardList: qnaBoard // this.handleClick=this.handleClick.bind(this);\n\n    };\n    console.log('여기 실행 되나?', this.state);\n  } //   handleClick(e){\n  //     const {Clickitem}=this.state;\n  //     this.setState({\n  //       Clickitem:{\n  //         ...Clickitem,\n  //         isExpanded : !this.setState.isExpanded\n  //       }\n  //     })\n  //   }\n\n\n  componentWillMount() {\n    const loadqnaboardList = this.props.loadqnaboardList;\n    console.log(this.state, ' <<<<< willMount');\n    let productNum = 5;\n    let size = 10;\n    let page = 1;\n    console.log(loadqnaboardList, ' qnaboardList 실행');\n    loadqnaboardList(productNum, size, page);\n  }\n\n  _onClickPopUp() {\n    window.open('qnaboardWrite', 'window_name', 'width=430,height=500,location=no,status=no,scrollbars=yes');\n  }\n\n  render() {\n    console.log(this.props, '<----- props');\n    const qnaBoard = this.props.qnaBoard;\n    const list = qnaBoard.data;\n    const items = list.items;\n    console.log(list.items, ' <------- ');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\uB2F5\\uBCC0\\uC0C1\\uD0DC\"), React.createElement(\"div\", {\n      className: \"col-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\uC81C\\uBAA9\"), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"\\uC791\\uC131\\uC790\"), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\uC791\\uC131\\uC77C\")), items.map(item => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, item.questionBoardStatus), React.createElement(\"div\", {\n      className: \"col-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"details\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"summary\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, item.questionBoardContent), item.questionAnswer.map(answer => React.createElement(\"div\", {\n      className: \"row\",\n      hidden: item.isExpanded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, answer.answerWriter), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, answer.answerContent))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, item.userId), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, item.questionBoardRegdate)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      value: \"\\uC791\\uC131\",\n      onClick: this._onClickPopUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  const product = state.product;\n  const qnaBoard = product.qnaBoard;\n  const data = qnaBoard.data;\n  console.log(qnaBoard, '<--------- qnaBoad');\n  console.log(product, ' <--------- product');\n  console.log(data, '<------------ data');\n  return {\n    qnaBoard\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loadqnaboardList: (productNum, size, page) => dispatch(Actions.loadqnaboardList(productNum, size, page)) //writeQnABoard: (qnaContent) => dispatch(writeQnABoard(qnaContent))\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(QnABoard));","map":{"version":3,"sources":["D:\\development\\SuperFarmClient\\SuperFarmClient\\src\\component\\board\\QnABoard.js"],"names":["React","Actions","ActionTypes","connect","withRouter","NewWindow","QnABoard","Component","constructor","props","qnaBoard","state","qnaBoardList","console","log","componentWillMount","loadqnaboardList","productNum","size","page","_onClickPopUp","window","open","render","list","data","items","map","item","questionBoardStatus","questionBoardContent","questionAnswer","answer","isExpanded","answerWriter","answerContent","userId","questionBoardRegdate","mapStateToProps","product","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAGA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,UAETC,QAFS,GAEI,KAAKD,KAFT,CAETC,QAFS;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAEF,QADH,CAGb;;AAHa,KAAb;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKH,KAA9B;AACD,GAVoC,CAYrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAI,EAAAA,kBAAkB,GAAG;AAAA,UACXC,gBADW,GACU,KAAKP,KADf,CACXO,gBADW;AAEnBH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB,EAAwB,kBAAxB;AACA,QAAIM,UAAU,GAAG,CAAjB;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,IAAI,GAAG,CAAX;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,gBAAZ,EAA8B,kBAA9B;AACAA,IAAAA,gBAAgB,CAACC,UAAD,EAAaC,IAAb,EAAmBC,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,aAAa,GAAG;AAEdC,IAAAA,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA6B,aAA7B,EAA4C,2DAA5C;AAED;;AAEDC,EAAAA,MAAM,GAAG;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB,EAAwB,cAAxB;AADO,UAECC,QAFD,GAEc,KAAKD,KAFnB,CAECC,QAFD;AAGP,UAAMc,IAAI,GAAGd,QAAQ,CAACe,IAAtB;AAHO,UAICC,KAJD,GAIWF,IAJX,CAICE,KAJD;AAKPb,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAI,CAACE,KAAjB,EAAwB,YAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,EAIE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CADF,EAOGA,KAAK,CAACC,GAAN,CAAWC,IAAD,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBA,IAAI,CAACC,mBAA3B,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUD,IAAI,CAACE,oBAAf,CADF,EAEGF,IAAI,CAACG,cAAL,CAAoBJ,GAApB,CAAyBK,MAAD,IACvB;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,MAAM,EAAEJ,IAAI,CAACK,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBD,MAAM,CAACE,YAA/B,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBF,MAAM,CAACG,aAAhC,CAFF,CADD,CAFH,CADF,CAFF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAgBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBP,IAAI,CAACQ,MAA7B,CAhBF,EAiBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBR,IAAI,CAACS,oBAA7B,CAjBF,CADF,CADD,CAPH,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,cAA3B;AAAgC,MAAA,OAAO,EAAE,KAAKjB,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA9BF,CADF;AAoCD;;AAhFoC;;AAmFvC,MAAMkB,eAAe,GAAE3B,KAAD,IAAU;AAC9BE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAD8B,QAEtB4B,OAFsB,GAEV5B,KAFU,CAEtB4B,OAFsB;AAAA,QAGtB7B,QAHsB,GAGT6B,OAHS,CAGtB7B,QAHsB;AAAA,QAItBe,IAJsB,GAIbf,QAJa,CAItBe,IAJsB;AAK9BZ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsB,oBAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYyB,OAAZ,EAAqB,qBAArB;AACA1B,EAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ,EAAkB,oBAAlB;AACA,SAAO;AACLf,IAAAA;AADK,GAAP;AAID,CAZD;;AAeA,MAAM8B,kBAAkB,GAAIC,QAAD,KAAe;AACxCzB,EAAAA,gBAAgB,EAAE,CAACC,UAAD,EAAaC,IAAb,EAAmBC,IAAnB,KAA4BsB,QAAQ,CAACxC,OAAO,CAACe,gBAAR,CAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,IAA3C,CAAD,CADd,CAExC;;AAFwC,CAAf,CAA3B;;AAMA,eAAef,UAAU,CAACD,OAAO,CAACmC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClC,QAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Actions } from '../../actions/index';\r\nimport { ActionTypes } from '../../contants';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport NewWindow from 'react-new-window'\r\n\r\n// const qnaboardList = (productNum,size,page) => dispatch => {\r\n//   return dispatch(Actions.getQnABoard())\r\n//     .then(response => {\r\n//       if (response.type === ActionTypes.QNABOARD_SUCCESS) {\r\n//         console.log(' QnABoard Reading 성공')\r\n//       } else {\r\n//         return Promise.reject(response);\r\n//       }\r\n//     });\r\n// };\r\n\r\n// 추가 라이브러리 npm i react-new-window --save <--- 윈도우 새창 띄우기숌\r\n\r\n// const writeQnABoard = (qnaContent) => dispatch => {\r\n//   return dispatch(Actions.writeQnABoard())\r\n//     .then(response => {\r\n//       if (response.type === ActionTypes.QNABOARD_SUCCESS) {\r\n//         console.log('QnA READ SUCCESS')\r\n//         return dispatch(Actions.getQnABoard())\r\n//       } else {\r\n//         return Promise.reject(response);\r\n//       }\r\n//     });\r\n// };\r\n\r\n// const writeQnABoard=()={\r\n//   return (\r\n\r\n//   )\r\n// }\r\n\r\n\r\nclass QnABoard extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const { qnaBoard } = this.props;\r\n    this.state = {\r\n      qnaBoardList: qnaBoard\r\n    }\r\n    // this.handleClick=this.handleClick.bind(this);\r\n    console.log('여기 실행 되나?', this.state)\r\n  }\r\n\r\n  //   handleClick(e){\r\n  //     const {Clickitem}=this.state;\r\n  //     this.setState({\r\n  //       Clickitem:{\r\n  //         ...Clickitem,\r\n  //         isExpanded : !this.setState.isExpanded\r\n  //       }\r\n  //     })\r\n  //   }\r\n  \r\n  componentWillMount() {\r\n    const { loadqnaboardList } = this.props;\r\n    console.log(this.state, ' <<<<< willMount')\r\n    let productNum = 5\r\n    let size = 10\r\n    let page = 1\r\n    console.log(loadqnaboardList, ' qnaboardList 실행')\r\n    loadqnaboardList(productNum, size, page);\r\n  }\r\n\r\n  _onClickPopUp() {\r\n\r\n    window.open('qnaboardWrite', 'window_name', 'width=430,height=500,location=no,status=no,scrollbars=yes');\r\n\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props, '<----- props')\r\n    const { qnaBoard } = this.props;\r\n    const list = qnaBoard.data;\r\n    const { items } = list;\r\n    console.log(list.items, ' <------- ')\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">답변상태</div>\r\n          <div className=\"col-7\">제목</div>\r\n          <div className=\"col-1\">작성자</div>\r\n          <div className=\"col-2\">작성일</div>\r\n        </div>\r\n        {items.map((item) => (\r\n          <div>\r\n            <div className=\"row\">\r\n              <div className=\"col\">{item.questionBoardStatus}</div>\r\n              <div className=\"col-7\">\r\n                <details>\r\n                  <summary>{item.questionBoardContent}</summary>\r\n                  {item.questionAnswer.map((answer) => (\r\n                    <div className=\"row\" hidden={item.isExpanded}>\r\n                      <div className=\"col-2\">{answer.answerWriter}</div>\r\n                      <div className=\"col-10\">{answer.answerContent}</div>\r\n                    </div>\r\n                  ))}\r\n                </details>\r\n              </div>\r\n              <div>\r\n\r\n              </div>\r\n              <div className=\"col-1\">{item.userId}</div>\r\n              <div className=\"col-2\">{item.questionBoardRegdate}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div>\r\n          <input type=\"button\" value=\"작성\" onClick={this._onClickPopUp}></input>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=> {\r\n  console.log(state)\r\n  const { product } = state;\r\n  const { qnaBoard } = product;\r\n  const { data } = qnaBoard;\r\n  console.log(qnaBoard, '<--------- qnaBoad')\r\n  console.log(product, ' <--------- product')\r\n  console.log(data, '<------------ data')\r\n  return {\r\n    qnaBoard\r\n  };\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadqnaboardList: (productNum, size, page) => dispatch(Actions.loadqnaboardList(productNum, size, page)),\r\n  //writeQnABoard: (qnaContent) => dispatch(writeQnABoard(qnaContent))\r\n});\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(QnABoard));"]},"metadata":{},"sourceType":"module"}