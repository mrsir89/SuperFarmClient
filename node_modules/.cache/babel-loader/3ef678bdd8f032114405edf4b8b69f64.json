{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\SuperFarmClient\\\\SuperFarmClient\\\\src\\\\component\\\\board\\\\UserEdit.js\";\nimport React from 'react';\nimport { Actions } from '../../actions/index';\nimport { ActionTypes } from '../../contants';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nconst reLoginAsync = (customerId, password) => dispatch => {\n  console.log('loginAsynce 시작 ', customerId, password);\n  return dispatch(Actions.login(customerId, password)).then(response => {\n    if (response.type === ActionTypes.LOGIN_SUCCESS) {\n      return dispatch(Actions.getUserMe());\n    } else {\n      console.log('로그인 실패 ', response);\n      return Promise.reject(response);\n    }\n  }).then(response => {\n    if (response.type === ActionTypes.GET_USERME_SUCCESS) {\n      return React.createElement(Redirect, {\n        to: \"/useredit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    } else {\n      return Promise.reject(response);\n    }\n  });\n};\n\nclass reLogin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerId: '',\n      password: ''\n    };\n    this._onchange = this._onchange.bind(this);\n  }\n\n  _onchange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  onSubmit(event) {\n    event.preventDefault(); // const loginInfo ={...this.state}\n    // console.log(loginInfo,'testLogin onSubmin')\n\n    const login = this.props.login;\n    let customerId = this.state.customerId;\n    let password = this.state.password;\n    console.log('customerId : ', customerId);\n    console.log('password  : ', password);\n    login(customerId, password);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"reLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"LoginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\uC544\\uC774\\uB514\\uBE44\\uBC88 \\uD655\\uC778\"), React.createElement(\"form\", {\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"customerId\",\n      value: this.state.userId,\n      onChange: this._onchange,\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this._onchange,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"\\uC544\\uC774\\uB514\\uBE44\\uBC88 \\uD655\\uC778\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/findPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Forgot Password?\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  relogin: (customerId, password) => dispatch(reLoginAsync(customerId, password))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(reLogin));","map":{"version":3,"sources":["D:\\Project\\SuperFarmClient\\SuperFarmClient\\src\\component\\board\\UserEdit.js"],"names":["React","Actions","ActionTypes","connect","withRouter","Redirect","reLoginAsync","customerId","password","dispatch","console","log","login","then","response","type","LOGIN_SUCCESS","getUserMe","Promise","reject","GET_USERME_SUCCESS","reLogin","Component","constructor","props","state","_onchange","bind","event","target","value","name","setState","onSubmit","preventDefault","render","e","userId","mapDispatchToProps","relogin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Actions } from '../../actions/index';\r\nimport { ActionTypes } from '../../contants';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\n\r\nconst reLoginAsync = (customerId, password) => (dispatch) => {\r\n    console.log('loginAsynce 시작 ', customerId, password)\r\n    return dispatch(Actions.login(customerId, password))\r\n      .then(response => {\r\n        if (response.type === ActionTypes.LOGIN_SUCCESS) {\r\n          return dispatch(Actions.getUserMe())\r\n        } else {\r\n          console.log('로그인 실패 ', response)\r\n          return Promise.reject(response);\r\n        }\r\n      }).then(response => {\r\n        if (response.type === ActionTypes.GET_USERME_SUCCESS) {\r\n          return <Redirect to=\"/useredit\" />\r\n        } else {\r\n          return Promise.reject(response);\r\n        }\r\n      });\r\n  }\r\n\r\nclass reLogin extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        customerId: '',\r\n        password: ''\r\n      }\r\n      this._onchange = this._onchange.bind(this);\r\n    }\r\n  \r\n    _onchange(event) {\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n      console.log(this.state)\r\n    }\r\n  \r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n      // const loginInfo ={...this.state}\r\n      // console.log(loginInfo,'testLogin onSubmin')\r\n      const { login } = this.props\r\n      let customerId = this.state.customerId\r\n      let password = this.state.password\r\n      console.log('customerId : ', customerId)\r\n      console.log('password  : ', password)\r\n      login(customerId, password);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"reLogin\">\r\n          <div className=\"LoginForm\">\r\n            <div className=\"top\">\r\n              아이디비번 확인\r\n            </div>\r\n            <form onSubmit={e => this.onSubmit(e)}>\r\n              <input type=\"text\" name=\"customerId\" value={this.state.userId} onChange={this._onchange} placeholder=\"Username\" />\r\n              <input type=\"password\" name=\"password\" value={this.state.password} onChange={this._onchange} placeholder=\"Password\" />\r\n              <input type=\"submit\" name=\"submit\" value=\"아이디비번 확인\" />\r\n            </form>\r\n            <div className=\"bottom\">\r\n              <a href=\"/findPassword\">Forgot Password?</a> \r\n                </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    relogin: (customerId, password) => dispatch(reLoginAsync(customerId, password))\r\n  });\r\n  \r\n  \r\nexport default withRouter(connect(null, mapDispatchToProps)(reLogin));"]},"metadata":{},"sourceType":"module"}