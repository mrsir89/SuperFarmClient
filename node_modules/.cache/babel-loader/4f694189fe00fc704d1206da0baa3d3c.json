{"ast":null,"code":"var _jsxFileName = \"C:\\\\superfarmclient\\\\SuperFarmClientTest4\\\\SuperFarmClient\\\\src\\\\component\\\\login\\\\Login.js\";\nimport React from 'react';\nimport { Actions } from '../../actions/index';\nimport { ActionTypes } from '../../contants';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport preheader from '../../containers/PreHeader';\n\nconst onChangeRoute = ({\n  props\n}) => {\n  console.log(props, \"tesdfsefefsaef\");\n  let path = '/';\n  props.history.push(path);\n};\n\nconst loginAsync = (customerId, password, history) => dispatch => {\n  console.log('loginAsynce 시작 ', customerId, password);\n  alert('환영합니다');\n  history.push('/');\n  return dispatch(Actions.login(customerId, password)).then(response => {\n    if (response === undefined || response === null) {\n      alert(' 아이디 또는 비밀 번호가 잘못 되었습니다.');\n      return history.push(\"/login\");\n    } else {\n      if (response.type === ActionTypes.LOGIN_SUCCESS) {\n        return dispatch(Actions.getUserMe());\n      } else {\n        return alert('아이디 또는 비밀 번호가 잘못 되었습니다.');\n      }\n    }\n  }).then(response => {\n    if (response === undefined || response === null) {\n      alert(' 유저 정보를 가져 오는데 실패 하였습니다. ');\n      return Actions.logout;\n    } else {\n      if (response.type === ActionTypes.GET_USERME_SUCCESS) {\n        let userNum = response.payload.data.userNum;\n        return dispatch(Actions.getCartByUser(userNum));\n      } else {\n        return alert(' cart 에서 회원 정보를 가져 오는데 실패 하였습니다. \\n\\n다시 시도해 주세요');\n      }\n    }\n  }).then(response => {\n    if (response.type === ActionTypes.GET_CART_SUCCESS) {\n      alert(\"\".concat(customerId, \" \\uB2D8 \\uC811\\uC18D\\uC744 \\uD658\\uC601 \\uD569\\uB2C8\\uB2E4.\"));\n      return history.push(\"/\");\n    } else {\n      alert('회원 정보를 가져 오는데 실패 하였습니다. \\n\\n다시 시도해 주세요');\n      return dispatch(Actions.logout());\n    }\n  }).catch(error => {\n    return console.log(' login Error', error);\n  });\n};\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerId: '',\n      password: ''\n    };\n    this._onchange = this._onchange.bind(this);\n    this.routeChange = this.routeChange.bind(this);\n  } // Change endpoint after Login (with some error)\n\n\n  routeChange() {\n    let path = '/';\n    this.props.history.push(path);\n  }\n\n  _onchange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  onSubmit(event) {\n    event.preventDefault(); // const loginInfo ={...this.state}\n    // console.log(loginInfo,'testLogin onSubmin')\n\n    const login = this.props.login;\n    let customerId = this.state.customerId;\n    let password = this.state.password;\n    console.log('customerId : ', customerId);\n    console.log('password  : ', password);\n    const history = this.props.history;\n    login(customerId, password, history);\n  } // .then(response=>{\n  //   if(response.type===ActionTypes.LOGIN_SUCCESS){\n  //     this.routeChange();\n  //   }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"LoginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(\"form\", {\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"customerId\",\n      value: this.state.userId,\n      onChange: this._onchange,\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this._onchange,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Log In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/page-forgotton-password.html\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Forgot Password?\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  login: (customerId, password, history) => dispatch(loginAsync(customerId, password, history))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));","map":{"version":3,"sources":["C:\\superfarmclient\\SuperFarmClientTest4\\SuperFarmClient\\src\\component\\login\\Login.js"],"names":["React","Actions","ActionTypes","connect","withRouter","Redirect","preheader","onChangeRoute","props","console","log","path","history","push","loginAsync","customerId","password","dispatch","alert","login","then","response","undefined","type","LOGIN_SUCCESS","getUserMe","logout","GET_USERME_SUCCESS","userNum","payload","data","getCartByUser","GET_CART_SUCCESS","catch","error","Login","Component","constructor","state","_onchange","bind","routeChange","event","target","value","name","setState","onSubmit","preventDefault","render","e","userId","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Actions } from '../../actions/index';\r\nimport { ActionTypes } from '../../contants';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport preheader from '../../containers/PreHeader'\r\n\r\nconst onChangeRoute = ({ props }) => {\r\n  console.log(props, \"tesdfsefefsaef\");\r\n  let path = '/';\r\n  props.history.push(path);\r\n}\r\n\r\nconst loginAsync = (customerId, password, history) => (dispatch) => {\r\n  console.log('loginAsynce 시작 ', customerId, password)\r\n  alert('환영합니다');\r\n  history.push('/');\r\n  return dispatch(Actions.login(customerId, password))\r\n    .then(response => {\r\n      \r\n      if (response === undefined || response === null) {\r\n        alert(' 아이디 또는 비밀 번호가 잘못 되었습니다.')\r\n      \r\n        return history.push(\"/login\")\r\n      \r\n      } else {\r\n        if (response.type === ActionTypes.LOGIN_SUCCESS) {\r\n      \r\n          return dispatch(Actions.getUserMe())\r\n      \r\n        } else {\r\n      \r\n          return alert('아이디 또는 비밀 번호가 잘못 되었습니다.');\r\n      \r\n        }\r\n      }\r\n    }).then(response => {\r\n     \r\n      if (response === undefined || response === null) {\r\n        alert(' 유저 정보를 가져 오는데 실패 하였습니다. ')\r\n        \r\n        return Actions.logout\r\n      \r\n      } else {\r\n        if (response.type === ActionTypes.GET_USERME_SUCCESS){\r\n        let userNum = response.payload.data.userNum;\r\n        \r\n        return dispatch(Actions.getCartByUser(userNum));\r\n        \r\n      }else{\r\n          return alert(' cart 에서 회원 정보를 가져 오는데 실패 하였습니다. \\n\\n다시 시도해 주세요')\r\n        }\r\n      }\r\n    }).then(response => {\r\n      \r\n      if (response.type === ActionTypes.GET_CART_SUCCESS) {\r\n        alert(`${customerId} 님 접속을 환영 합니다.`)\r\n        return history.push(\"/\")\r\n      \r\n      } else {\r\n        alert('회원 정보를 가져 오는데 실패 하였습니다. \\n\\n다시 시도해 주세요');\r\n        return dispatch(Actions.logout())\r\n      \r\n      }\r\n    }).catch(error => {\r\n      return console.log(' login Error', error)\r\n    });\r\n}\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      customerId: '',\r\n      password: ''\r\n    }\r\n    this._onchange = this._onchange.bind(this);\r\n\r\n    this.routeChange = this.routeChange.bind(this);\r\n  }\r\n\r\n\r\n\r\n  // Change endpoint after Login (with some error)\r\n  routeChange() {\r\n    let path = '/';\r\n    this.props.history.push(path);\r\n  }\r\n\r\n\r\n\r\n  _onchange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    console.log(this.state)\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    // const loginInfo ={...this.state}\r\n    // console.log(loginInfo,'testLogin onSubmin')\r\n    const { login } = this.props\r\n    let customerId = this.state.customerId\r\n    let password = this.state.password\r\n    console.log('customerId : ', customerId)\r\n    console.log('password  : ', password)\r\n    const { history } = this.props\r\n    login(customerId, password, history);\r\n  }\r\n\r\n  // .then(response=>{\r\n  //   if(response.type===ActionTypes.LOGIN_SUCCESS){\r\n  //     this.routeChange();\r\n  //   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <div className=\"LoginForm\">\r\n          <div className=\"top\">\r\n            Log in\r\n          </div>\r\n          <form onSubmit={e => this.onSubmit(e)}>\r\n            <input type=\"text\" name=\"customerId\" value={this.state.userId} onChange={this._onchange} placeholder=\"Username\" />\r\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this._onchange} placeholder=\"Password\" />\r\n            <input type=\"submit\" name=\"submit\" value=\"Log In\" />\r\n            {/* <button onClick={this.routeChange}>Log In</button> */}\r\n          </form>\r\n          <div className=\"bottom\">\r\n            <a href=\"/page-forgotton-password.html\">Forgot Password?</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (customerId, password, history) => dispatch(loginAsync(customerId, password, history))\r\n});\r\n\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Login));"]},"metadata":{},"sourceType":"module"}