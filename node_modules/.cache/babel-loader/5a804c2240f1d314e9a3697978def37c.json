{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncBailHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onResult,\n    resultReturns,\n    onDone,\n    rethrowIfPossible\n  }) {\n    return this.callTapsSeries({\n      onError: (i, err) => onError(err),\n      onResult: (i, result, next) => \"if(\".concat(result, \" !== undefined) {\\n\").concat(onResult(result), \";\\n} else {\\n\").concat(next(), \"}\\n\"),\n      resultReturns,\n      onDone,\n      rethrowIfPossible\n    });\n  }\n\n}\n\nconst factory = new SyncBailHookCodeFactory();\n\nclass SyncBailHook extends Hook {\n  tapAsync() {\n    throw new Error(\"tapAsync is not supported on a SyncBailHook\");\n  }\n\n  tapPromise() {\n    throw new Error(\"tapPromise is not supported on a SyncBailHook\");\n  }\n\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nmodule.exports = SyncBailHook;","map":null,"metadata":{},"sourceType":"script"}