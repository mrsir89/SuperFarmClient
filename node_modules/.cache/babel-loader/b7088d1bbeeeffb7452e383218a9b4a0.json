{"ast":null,"code":"import _objectSpread from \"D:\\\\development\\\\SuperFarmClient\\\\SuperFarmClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ActionTypes } from '../contants'; // ProductList에서 보여주는 상품들 (items)와 Cart에서 보여주는 장바구니에 추가된 상품들(cart) \n\nconst initialStateProduct = {\n  items: [],\n  cart: []\n}; // 추후 authentication reducer와 같은 방식(axios middleware)으로 바꿀 예정\n\nconst productReducer = (state = initialStateProduct, action) => {\n  const items = state.items,\n        cart = state.cart,\n        qnaBoard = state.qnaBoard;\n  const payload = action.payload;\n\n  switch (action.type) {\n    case ActionTypes.LOAD_PRODUCTLIST_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n\n        if (data !== undefined && data !== null) {\n          return _objectSpread({}, state, {\n            items: data\n          });\n        }\n      }\n\n      return state;\n\n    case ActionTypes.ADD_CART:\n      const item = action.item;\n      return _objectSpread({}, state, {\n        cart: [...cart, item]\n      });\n\n    case ActionTypes.LOAD_QNABOARDLIST_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log(data, 'ActionTypes.LOAD_QNABOARDLIST_SUCCESS');\n        return {\n          qnaBoard: {\n            data\n          }\n        };\n      } else return state;\n\n    case ActionTypes.WIRTE_QNABOARD_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log(data, 'ActionTypes.WRITE_QNABOARD_SUCCESS');\n        return {\n          qnaBoard: {\n            data\n          }\n        };\n      } else return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;","map":{"version":3,"sources":["D:\\development\\SuperFarmClient\\SuperFarmClient\\src\\reducers\\product.reducer.js"],"names":["ActionTypes","initialStateProduct","items","cart","productReducer","state","action","qnaBoard","payload","type","LOAD_PRODUCTLIST_SUCCESS","undefined","data","ADD_CART","item","LOAD_QNABOARDLIST_SUCCESS","console","log","WIRTE_QNABOARD_SUCCESS"],"mappings":";AAAA,SAASA,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAA5B,C,CAMA;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGJ,mBAAT,EAA8BK,MAA9B,KAAyC;AAAA,QACpDJ,KADoD,GAC1BG,KAD0B,CACpDH,KADoD;AAAA,QAC7CC,IAD6C,GAC1BE,KAD0B,CAC7CF,IAD6C;AAAA,QACvCI,QADuC,GAC1BF,KAD0B,CACvCE,QADuC;AAAA,QAEpDC,OAFoD,GAExCF,MAFwC,CAEpDE,OAFoD;;AAI5D,UAAQF,MAAM,CAACG,IAAf;AACI,SAAKT,WAAW,CAACU,wBAAjB;AAEI,UAAIF,OAAO,KAAKG,SAAZ,IAAyBH,OAAO,KAAK,IAAzC,EAA+C;AAAA,cACnCI,IADmC,GAC1BJ,OAD0B,CACnCI,IADmC;;AAE3C,YAAIA,IAAI,KAAKD,SAAT,IAAsBC,IAAI,KAAK,IAAnC,EAAyC;AACrC,mCACOP,KADP;AAEIH,YAAAA,KAAK,EAAEU;AAFX;AAIH;AACJ;;AACD,aAAOP,KAAP;;AAGJ,SAAKL,WAAW,CAACa,QAAjB;AAAA,YACYC,IADZ,GACqBR,MADrB,CACYQ,IADZ;AAEI,+BACOT,KADP;AAEIF,QAAAA,IAAI,EAAE,CACF,GAAGA,IADD,EAEFW,IAFE;AAFV;;AAQJ,SAAKd,WAAW,CAACe,yBAAjB;AACI,UAAIP,OAAO,KAAKG,SAAZ,IAAyBH,OAAO,KAAK,IAAzC,EAA+C;AAAA,cAEnCI,IAFmC,GAE1BJ,OAF0B,CAEnCI,IAFmC;AAG3CI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,uCAAlB;AACA,eAAO;AACHL,UAAAA,QAAQ,EAAE;AACNK,YAAAA;AADM;AADP,SAAP;AAKH,OATD,MAWI,OAAOP,KAAP;;AACR,SAAKL,WAAW,CAACkB,sBAAjB;AACI,UAAGV,OAAO,KAAKG,SAAZ,IAAyBH,OAAO,KAAI,IAAvC,EAA4C;AAAA,cAChCI,IADgC,GACvBJ,OADuB,CAChCI,IADgC;AAExCI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,oCAAlB;AACA,eAAM;AACFL,UAAAA,QAAQ,EAAC;AACLK,YAAAA;AADK;AADP,SAAN;AAKH,OARD,MAUI,OAAOP,KAAP;;AACR;AACI,aAAOA,KAAP;AAnDR;AAqDH,CAzDD;;AA2DA,eAAeD,cAAf","sourcesContent":["import { ActionTypes } from '../contants';\r\n\r\n// ProductList에서 보여주는 상품들 (items)와 Cart에서 보여주는 장바구니에 추가된 상품들(cart) \r\nconst initialStateProduct = {\r\n    items: [],\r\n    cart: [],\r\n};\r\n\r\n\r\n// 추후 authentication reducer와 같은 방식(axios middleware)으로 바꿀 예정\r\nconst productReducer = (state = initialStateProduct, action) => {\r\n    const { items, cart, qnaBoard } = state;\r\n    const { payload } = action;\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_PRODUCTLIST_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload;\r\n                if (data !== undefined && data !== null) {\r\n                    return {\r\n                        ...state,\r\n                        items: data\r\n                    };\r\n                }\r\n            }\r\n            return state;\r\n\r\n\r\n        case ActionTypes.ADD_CART:\r\n            const { item } = action\r\n            return {\r\n                ...state,\r\n                cart: [\r\n                    ...cart,\r\n                    item\r\n                ]\r\n            }\r\n\r\n        case ActionTypes.LOAD_QNABOARDLIST_SUCCESS:\r\n            if (payload !== undefined && payload !== null) {\r\n\r\n                const { data } = payload\r\n                console.log(data, 'ActionTypes.LOAD_QNABOARDLIST_SUCCESS')\r\n                return {\r\n                    qnaBoard: {\r\n                        data\r\n                    }\r\n                }\r\n            }\r\n            else\r\n                return state;\r\n        case ActionTypes.WIRTE_QNABOARD_SUCCESS:\r\n            if(payload !== undefined && payload !==null){\r\n                const { data } = payload\r\n                console.log(data, 'ActionTypes.WRITE_QNABOARD_SUCCESS')\r\n                return{\r\n                    qnaBoard:{\r\n                        data\r\n                    }\r\n                }\r\n            }\r\n            else\r\n                return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productReducer;"]},"metadata":{},"sourceType":"module"}