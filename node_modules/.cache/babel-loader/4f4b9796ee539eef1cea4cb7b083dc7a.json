{"ast":null,"code":"import _objectSpread from \"D:\\\\development\\\\SuperFarmClient\\\\SuperFarmClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ActionTypes } from '../contants'; // ProductList에서 보여주는 상품들 (items)와 Cart에서 보여주는 장바구니에 추가된 상품들(cart) \n\nconst initialStateProduct = {\n  items: [],\n  cart: [],\n  qnaboard: []\n}; // 추후 authentication reducer와 같은 방식(axios middleware)으로 바꿀 예정\n\nconst productReducer = (state = initialStateProduct, action) => {\n  const items = state.items,\n        cart = state.cart,\n        qnaboard = state.qnaboard;\n  const payload = action.payload;\n\n  switch (action.type) {\n    case ActionTypes.LOAD_PRODUCTLIST_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n\n        if (data !== undefined && data !== null) {\n          return _objectSpread({}, state, {\n            items: data\n          });\n        }\n      }\n\n      return state;\n\n    case ActionTypes.ADD_CART:\n      const item = action.item;\n      return _objectSpread({}, state, {\n        cart: [...cart, item]\n      });\n\n    case ActionTypes.QNABOARDLIST.SUCCESS:\n      console.log(payload, '<--------------1');\n\n      if (payload !== undefined && payload !== null) {\n        const qnaBoard = payload.qnaBoard;\n        console.log(qnaBoard, '<--------------2');\n        return _objectSpread({}, state, {\n          qnaBoard: [qnaBoard]\n        });\n      } else return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;","map":{"version":3,"sources":["D:\\development\\SuperFarmClient\\SuperFarmClient\\src\\reducers\\product.reducer.js"],"names":["ActionTypes","initialStateProduct","items","cart","qnaboard","productReducer","state","action","payload","type","LOAD_PRODUCTLIST_SUCCESS","undefined","data","ADD_CART","item","QNABOARDLIST","SUCCESS","console","log","qnaBoard"],"mappings":";AAAA,SAASA,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,IAAI,EAAE,EAFkB;AAGxBC,EAAAA,QAAQ,EAAC;AAHe,CAA5B,C,CAOA;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGL,mBAAT,EAA8BM,MAA9B,KAAyC;AAAA,QACpDL,KADoD,GAC1BI,KAD0B,CACpDJ,KADoD;AAAA,QAC7CC,IAD6C,GAC1BG,KAD0B,CAC7CH,IAD6C;AAAA,QACvCC,QADuC,GAC1BE,KAD0B,CACvCF,QADuC;AAAA,QAEpDI,OAFoD,GAExCD,MAFwC,CAEpDC,OAFoD;;AAI5D,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKT,WAAW,CAACU,wBAAjB;AAEI,UAAIF,OAAO,KAAKG,SAAZ,IAAyBH,OAAO,KAAK,IAAzC,EAA+C;AAAA,cACnCI,IADmC,GAC1BJ,OAD0B,CACnCI,IADmC;;AAE3C,YAAIA,IAAI,KAAKD,SAAT,IAAsBC,IAAI,KAAK,IAAnC,EAAyC;AACrC,mCACON,KADP;AAEIJ,YAAAA,KAAK,EAAEU;AAFX;AAIH;AACJ;;AACD,aAAON,KAAP;;AAGJ,SAAKN,WAAW,CAACa,QAAjB;AAAA,YACYC,IADZ,GACqBP,MADrB,CACYO,IADZ;AAEI,+BACOR,KADP;AAEIH,QAAAA,IAAI,EAAE,CACF,GAAGA,IADD,EAEFW,IAFE;AAFV;;AAQJ,SAAKd,WAAW,CAACe,YAAZ,CAAyBC,OAA9B;AACQC,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ,EAAoB,kBAApB;;AACR,UAAIA,OAAO,KAAKG,SAAZ,IAAyBH,OAAO,KAAK,IAAzC,EAA+C;AAAA,cAEnCW,QAFmC,GAEtBX,OAFsB,CAEnCW,QAFmC;AAG3CF,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAAqB,kBAArB;AACA,iCACOb,KADP;AAEIa,UAAAA,QAAQ,EAAC,CACLA,QADK;AAFb;AAMH,OAVD,MAYI,OAAOb,KAAP;;AAEJ;AACI,aAAOA,KAAP;AA1CR;AA4CH,CAhDD;;AAkDA,eAAeD,cAAf","sourcesContent":["import { ActionTypes } from '../contants';\r\n\r\n// ProductList에서 보여주는 상품들 (items)와 Cart에서 보여주는 장바구니에 추가된 상품들(cart) \r\nconst initialStateProduct = {\r\n    items: [],\r\n    cart: [],\r\n    qnaboard:[]\r\n};\r\n\r\n\r\n// 추후 authentication reducer와 같은 방식(axios middleware)으로 바꿀 예정\r\nconst productReducer = (state = initialStateProduct, action) => {\r\n    const { items, cart, qnaboard } = state;\r\n    const { payload } = action;\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_PRODUCTLIST_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload;\r\n                if (data !== undefined && data !== null) {\r\n                    return {\r\n                        ...state,\r\n                        items: data\r\n                    };\r\n                }\r\n            }\r\n            return state;\r\n\r\n\r\n        case ActionTypes.ADD_CART:\r\n            const { item } = action\r\n            return {\r\n                ...state,\r\n                cart: [\r\n                    ...cart,\r\n                    item\r\n                ]\r\n            }\r\n\r\n        case ActionTypes.QNABOARDLIST.SUCCESS:\r\n                console.log(payload,'<--------------1')\r\n        if (payload !== undefined && payload !== null) {\r\n\r\n            const { qnaBoard } = payload\r\n            console.log(qnaBoard,'<--------------2')\r\n            return {\r\n                ...state,\r\n                qnaBoard:[\r\n                    qnaBoard\r\n                ]\r\n            }\r\n        }\r\n        else\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productReducer;"]},"metadata":{},"sourceType":"module"}