{"ast":null,"code":"var _jsxFileName = \"D:\\\\development\\\\SuperFarmClient\\\\SuperFarmClient\\\\src\\\\component\\\\board\\\\QnABoardWrite.js\";\nimport React from 'react';\nimport { Actions } from '../../actions/index';\nimport { ActionTypes } from '../../contants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nclass QnABoardWrite extends React.Component {\n  constructor(props) {\n    super(props);\n    const userDetails = this.props.userDetails;\n    this.state = {\n      userId: userDetails.userId,\n      questionBoardPassword: '',\n      questionBoardTitle: '',\n      questionBoardContent: ''\n    };\n    console.log(props);\n  }\n\n  componentWillMount() {}\n\n  _onClickAction() {\n    // const writeForm ={\n    //     userId = this.state.userId\n    //     questionBoardPassword = this.state.questionBoardPassword;\n    // }\n    window.close();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"board Form\"), React.createElement(\"form\", {\n      onSubmit: this._onClickAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"\\uC81C\\uBAA9\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"reg_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\uC791\\uC131\\uC790\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.userId, \" \"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9\"), React.createElement(\"textarea\", {\n      rows: \"5\",\n      name: \"content\",\n      id: \"content\",\n      placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\uC800\\uC7A5\"), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\uBAA9\\uB85D\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const userDetails = state.auth.userDetails;\n  const qnaBoard = state.product.qnaBoard;\n  const data = qnaBoard.data;\n  console.log(qnaBoard, ' qnaAnswerWrite Board  <--- MapStateToProps');\n  console.log(data, ' <-------- data');\n  console.log(data.boardNum, ' <------- boardNum');\n  console.log(userDetails, ' <----------- userDetails');\n  console.log(userDetails.userId, ' <----------- userId');\n  return {\n    data,\n    userDetails\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(QnABoardWrite));","map":{"version":3,"sources":["D:\\development\\SuperFarmClient\\SuperFarmClient\\src\\component\\board\\QnABoardWrite.js"],"names":["React","Actions","ActionTypes","connect","withRouter","QnABoardWrite","Component","constructor","props","userDetails","state","userId","questionBoardPassword","questionBoardTitle","questionBoardContent","console","log","componentWillMount","_onClickAction","window","close","render","mapStateToProps","auth","qnaBoard","product","data","boardNum","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Actions } from '../../actions/index';\r\nimport { ActionTypes } from '../../contants';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nclass QnABoardWrite extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const { userDetails } = this.props;\r\n        this.state = {\r\n            userId: userDetails.userId,\r\n            questionBoardPassword: '',\r\n            questionBoardTitle: '',\r\n            questionBoardContent: '',\r\n        }\r\n        console.log(props)\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n    _onClickAction() {\r\n\r\n        // const writeForm ={\r\n        //     userId = this.state.userId\r\n        //     questionBoardPassword = this.state.questionBoardPassword;\r\n        // }\r\n        window.close();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div >\r\n                <h2>board Form</h2>\r\n                <form onSubmit={this._onClickAction}>\r\n                    <div >\r\n                        <label for=\"title\">제목</label>\r\n                        <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"제목을 입력해 주세요\" />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"reg_id\">작성자</label>\r\n                        <div>\r\n                            <b>{this.state.userId} </b>\r\n                        </div>\r\n                    </div>\r\n                    <div >\r\n                        <label for=\"content\">내용</label>\r\n                        <textarea  rows=\"5\" name=\"content\" id=\"content\" placeholder=\"내용을 입력해 주세요\" ></textarea>\r\n                    </div>\r\n                </form>\r\n                <div >\r\n                    <button type=\"submit\" >저장</button>\r\n                    <button type=\"button\" >목록</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    const { userDetails } = state.auth;\r\n    const { qnaBoard } = state.product;\r\n    const { data } = qnaBoard;\r\n\r\n\r\n    console.log(qnaBoard, ' qnaAnswerWrite Board  <--- MapStateToProps')\r\n    console.log(data, ' <-------- data')\r\n    console.log(data.boardNum, ' <------- boardNum')\r\n    console.log(userDetails, ' <----------- userDetails')\r\n    console.log(userDetails.userId, ' <----------- userId')\r\n    return {\r\n        data,\r\n        userDetails\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(QnABoardWrite));"]},"metadata":{},"sourceType":"module"}