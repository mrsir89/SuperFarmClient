{"ast":null,"code":"var _jsxFileName = \"C:\\\\superfarmclient\\\\SuperFarmClientTest4\\\\SuperFarmClient\\\\src\\\\component\\\\board\\\\UserEditLogin.js\";\nimport React from 'react';\nimport { Actions } from '../../actions/index';\nimport { ActionTypes } from '../../contants';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport UserEdit from './UserEdit';\nimport './UserEditLogin.css';\n\nconst onChangeRoute = ({\n  props\n}) => {\n  console.log(props, \"tesdfsefefsaef\");\n  let path = '/';\n  props.history.push(path);\n};\n\nconst CheckAsync = (customerId, password, history) => dispatch => {\n  console.log('loginAsynce 시작 ', customerId, password);\n  return dispatch(Actions.login(customerId, password)).then(response => {\n    if (response.type === ActionTypes.LOGIN_SUCCESS) {\n      return dispatch(Actions.getUserMe());\n    } else {\n      console.log('로그인 실패 ', response);\n      return Promise.reject(response);\n    }\n  }).then(response => {\n    if (response.type === ActionTypes.GET_USERME_SUCCESS) {\n      console.log(\"userme 성공 >>>>>>>>>>>>\");\n      history.push(\"/useredit\");\n    } else {\n      return Promise.reject(response);\n    }\n  });\n};\n\nclass userCheck extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerId: '',\n      password: ''\n    };\n    this._onChange = this._onChange.bind(this);\n    this.routeChange = this.routeChange.bind(this);\n  } //constructor\n\n\n  _onChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  } // text안의 내용을 담아 setState\n  // Change endpoint after Login (with some error)\n\n\n  routeChange() {\n    let path = '/';\n    this.props.history.push(path);\n  }\n\n  onSubmit(event) {\n    event.preventDefault(); // const loginInfo ={...this.state}\n    // console.log(loginInfo,'testLogin onSubmin')\n\n    const login = this.props.login;\n    let customerId = this.state.customerId;\n    let password = this.state.password;\n    console.log('customerId : ', customerId);\n    console.log('password  : ', password);\n    const history = this.props.history;\n    login(customerId, password, history);\n  }\n\n  onSubmit1(event) {\n    event.preventDefault();\n    const history = this.props.history;\n    history.push(\"/\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"userCheck\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"userCheckForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"\\uC0AC\\uC6A9\\uC790 \\uD655\\uC778\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uB2D8\\uC758 \\uC815\\uBCF4\\uB97C \\uC548\\uC804\\uD558\\uAC8C \\uBCF4\\uD638\\uD558\\uAE30 \\uC704\\uD574 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uD55C\\uBC88 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694.\")), React.createElement(\"form\", {\n      onSubmit: e => this.onSubmit(e),\n      onSubmit1: e => this.onSubmit1(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"t-box-msg mt_30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"lab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\uC544\\uC774\\uB514\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"customerId\",\n      value: this.state.customerId,\n      onChange: this._onChange,\n      placeholder: \"\\uC544\\uC774\\uB514\\uC785\\uB825\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"lab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this._onChange,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uC785\\uB825\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"btn-foot mt_30\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"\\uD655\\uC778\",\n      value: \"\\uD655\\uC778\",\n      class: \"btn_x110_a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit1\",\n      value: \"\\uCDE8\\uC18C\",\n      class: \"btn_x110_b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  login: (customerId, password, history) => dispatch(CheckAsync(customerId, password, history))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(userCheck));","map":{"version":3,"sources":["C:\\superfarmclient\\SuperFarmClientTest4\\SuperFarmClient\\src\\component\\board\\UserEditLogin.js"],"names":["React","Actions","ActionTypes","connect","withRouter","Redirect","UserEdit","onChangeRoute","props","console","log","path","history","push","CheckAsync","customerId","password","dispatch","login","then","response","type","LOGIN_SUCCESS","getUserMe","Promise","reject","GET_USERME_SUCCESS","userCheck","Component","constructor","state","_onChange","bind","routeChange","event","target","value","name","setState","onSubmit","preventDefault","onSubmit1","render","e","display","justifyContent","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Actions } from '../../actions/index';\r\nimport { ActionTypes } from '../../contants';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport UserEdit from './UserEdit';\r\nimport './UserEditLogin.css';\r\n\r\nconst onChangeRoute = ({ props }) => {\r\n    console.log(props, \"tesdfsefefsaef\");\r\n    let path = '/';\r\n    props.history.push(path);\r\n  }\r\n\r\nconst CheckAsync = (customerId, password, history)=> (dispatch) => {\r\n    console.log('loginAsynce 시작 ', customerId, password)\r\n    return dispatch(Actions.login(customerId, password))\r\n      .then(response => {\r\n        if (response.type === ActionTypes.LOGIN_SUCCESS) {\r\n          return dispatch(Actions.getUserMe());\r\n        } else {\r\n          console.log('로그인 실패 ', response)\r\n          return Promise.reject(response);\r\n        }\r\n      }).then(response => {\r\n        if (response.type === ActionTypes.GET_USERME_SUCCESS) {\r\n          console.log(\"userme 성공 >>>>>>>>>>>>\");\r\n          history.push(\"/useredit\");\r\n        } else {\r\n          return Promise.reject(response);\r\n        }\r\n      });\r\n}\r\n\r\nclass userCheck extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            customerId:'',\r\n            password:''\r\n        }\r\n        this._onChange=this._onChange.bind(this);\r\n        this.routeChange = this.routeChange.bind(this);\r\n    }//constructor\r\n\r\n    _onChange(event){\r\n        const target = event.target;\r\n        const value=target.value;\r\n        const name=target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }// text안의 내용을 담아 setState\r\n\r\n     // Change endpoint after Login (with some error)\r\n    routeChange() {\r\n        let path = '/';\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        // const loginInfo ={...this.state}\r\n        // console.log(loginInfo,'testLogin onSubmin')\r\n        const { login } = this.props\r\n        let customerId = this.state.customerId\r\n        let password = this.state.password\r\n\r\n        console.log('customerId : ', customerId)\r\n        console.log('password  : ', password)\r\n\r\n        const { history } = this.props\r\n\r\n        login(customerId, password, history);\r\n    }\r\n\r\n    onSubmit1(event){\r\n      event.preventDefault();\r\n      const { history } =this.props\r\n      history.push(\"/\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"userCheck\">\r\n                {/* RELOGIN(CheckUser) */}\r\n                <div id=\"userCheckForm\">\r\n                    <h2>사용자 확인</h2>\r\n                    <p>회원님의 정보를 안전하게 보호하기 위해 비밀번호를 다시 한번 확인해주세요.</p>\r\n                </div>\r\n                <form onSubmit={e => this.onSubmit(e)} onSubmit1={e => this.onSubmit1(e)}>\r\n                  <div class=\"t-box-msg mt_30\">\r\n                      <p>\r\n                        <label class=\"lab\">아이디</label>\r\n                        <input type=\"text\" name=\"customerId\" value={this.state.customerId} onChange={this._onChange} placeholder=\"아이디입력\" />\r\n                      </p>\r\n                      <p>\r\n                      <label class=\"lab\">비밀번호</label>\r\n                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this._onChange} placeholder=\"비밀번호입력\" />\r\n                      </p>\r\n                  </div>\r\n                  <div class=\"btn-foot mt_30\" style={{display:'flex',justifyContent:'center'}}>\r\n                   <input type=\"submit\" name=\"확인\" value=\"확인\" class=\"btn_x110_a\"></input>\r\n                   <input type=\"submit\" name=\"submit1\" value=\"취소\" class=\"btn_x110_b\"></input>\r\n                  </div>\r\n                  </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    login: (customerId, password, history) => dispatch(CheckAsync(customerId, password, history))\r\n  });\r\n  \r\n  \r\n  export default withRouter(connect(null, mapDispatchToProps)(userCheck));"]},"metadata":{},"sourceType":"module"}