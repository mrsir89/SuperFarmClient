{"ast":null,"code":"var _jsxFileName = \"C:\\\\SuperFarmClient\\\\src\\\\component\\\\board\\\\ProductDetail.js\";\nimport React from 'react'; //import productDummy from './productDummy'\n// import PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ProductView from './ProductView'; //import { addCart } from '../actions/action';\n\nimport { Actions } from '../../actions';\nimport './ProductDetail.css';\nimport { thisTypeAnnotation } from '@babel/types'; // 제품 상세 페이지\n// 옵션, 가격을 form에 담아서 submit -> 바로구매 or 장바구니\n// 테스트 \n\nclass ProductDetail extends React.Component {\n  constructor(props) {\n    // props 굳이 안써줘도 넘어 옴\n    super(props);\n\n    this.handleSubmit = e => {\n      const productChoice = this.state.productChoice;\n      e.preventDefault();\n      const cartModel = {\n        userNum: productChoice.userNumber,\n        productBoardNum: productChoice.productBoardNum,\n        productBoardTitle: ProductDetail.productBoardTitle,\n        cartProductName: productChoice.cartProductName,\n        cartProductOption1: productChoice.cartProductOption1,\n        cartProductOption2: productChoice.cartProductOption2,\n        cartProductPrice: productChoice.cartProductPrice,\n        cartProductCount: productChoice.cartProductCount,\n        cartProductImg: productChoice.cartProductImg\n      };\n      const addCart = this.props.addCart;\n      console.log(\"장바구니 추가>>>\", cartModel);\n      addCart(cartModel);\n    };\n\n    this._option2Change = event => {\n      let tmpCode = '';\n      tmpCode = event.target.value;\n      const productList = this.state.productList;\n      const choiceProduct = productList.filter(productList => productList.productCode == tmpCode);\n      console.log(choiceProduct, 'ssssssssssssssssssssssss');\n\n      if (choiceProduct.length !== 0) {\n        this.setState({\n          productChoice: choiceProduct[0],\n          tmpOption2: choiceProduct[0].productOption2,\n          totalPrice: choiceProduct[0].productPrice\n        });\n      }\n    };\n\n    this._quantityChange = event => {\n      console.log('수량 변경 전 확인', this.state); // if (this.state.tmpOption1 !== null && this.state.tmpOption2 !== null) {\n\n      console.log(' 금액 확인 ', this.state);\n      let quantity = 0;\n      let price = 0;\n      quantity = event.target.value;\n      price = this.state.productChoice.productPrice;\n      console.log(event.target.value, ' 수량 확인');\n      var calcPrice = quantity * price;\n      this.setState({\n        quantity: quantity,\n        totalPrice: calcPrice\n      }); // }else{\n      //    alert('옵션을 먼저 선택하세요')\n      // }\n    };\n\n    const userNum = this.props.userDetails.userNum;\n    const productBoardDetail = this.props.productBoardDetail;\n    const _productList = productBoardDetail.productList;\n    this.state = {\n      ProductDetail: productBoardDetail,\n      productList: _productList,\n      productInfo: '',\n      userNumber: userNum,\n      quantity: 1,\n      tmpOption1: null,\n      tmpOption2: null,\n      productChoice: '',\n      stock: '',\n      totalPrice: 0\n    }; // this._renderProduct = this._renderProduct.bind(this);\n\n    this._option1Change = this._option1Change.bind(this);\n    this._option2Change = this._option2Change.bind(this);\n  }\n\n  _option1Check(productList) {\n    var optionList = [];\n    this.setState({\n      tmpOption2: null\n    });\n\n    if (productList !== undefined && productList !== null) {\n      optionList = productList.map(productList => {\n        return productList;\n      });\n    }\n\n    console.log(optionList, 'ssssssss');\n    return optionList;\n  }\n\n  _option1Change(event) {\n    console.log('여기는 ', event.target.value);\n    this.setState({\n      tmpOption1: event.target.value\n    });\n  }\n\n  _option2Check(productList) {\n    console.log('option1Check', this.state.tmpOption1);\n    var optionList = [];\n    console.log('option1Check ----------', productList);\n\n    if (productList !== undefined && productList !== null) {\n      optionList = productList.filter(productList => this.state.tmpOption1 === productList.productOption1);\n      return optionList;\n    }\n\n    return optionList;\n  } // 옵션2 선택시 변경\n\n\n  _loadProductDetail() {\n    const productBoardNum = this.props.match.params.id;\n    console.log(productBoardNum, ' productBoardNum!!');\n    const loadProductDetails = this.props.loadProductDetails;\n    loadProductDetails(productBoardNum);\n  } // _renderProduct = () => {\n  //    const productId = this.props.match.params.id;\n  //    const products = this.props.productBoard;\n  //    console.log(\"products\", products)\n  //    var newProducts = [];\n  //    if (products !== undefined && products !== null) {\n  //       newProducts = products.filter((item) => (item.productBoardNum == productId));\n  //       console.log(\"newProduct[0] >>>>\", newProducts[0])\n  //       this.setState({\n  //          productInfo: newProducts[0],\n  //          productBoardNum: newProducts[0].productBoardNum,\n  //          cartProductName: newProducts[0].productList[0].productName,\n  //          cartProductPrice: newProducts[0].productList[0].productPrice,\n  //          cartProductCount: 1,   // 추후 변경 예정\n  //          cartProductImg: newProducts[0].productBoardThumbnail,\n  //          cartProductOption1: newProducts[0].productList[0].productOption1,\n  //          cartProductOption2: newProducts[0].productList[0].productOption2\n  //       });\n  //    }\n  //    return newProducts[0];\n  // }\n\n\n  componentWillMount() {\n    console.log(this.productBoard, ' will mount');\n\n    this._loadProductDetail(); //this._renderProduct();\n\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate');\n    return JSON.stringify(nextState) != JSON.stringify(this.state);\n  } // TODO : userDetails가 없을 경우 에러 처리해줘야함 \n\n\n  render() {\n    console.log('r e n d e r 시작', this.props);\n    console.log(' render state 확인!!!!!!!', this.state);\n    const productInfo = this.state.ProductDetail;\n    const productList = this.state.productList;\n    console.log('시작 이다!!!!!', productList);\n    return React.createElement(\"div\", {\n      className: \"product-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prod-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prd-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-main-image\",\n      style: {\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../../images/rice.jpg\",\n      alt: \"Cool green dress with red bell\",\n      className: \"img-responsive\",\n      \"data-bigimgsrc\": \"../../images/rice.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: \"../../images/rice.jpg\",\n      className: \"zoomImg\",\n      style: {\n        position: 'absolute',\n        top: '-290.619px',\n        left: '-180.201px',\n        opacity: '0',\n        width: '600px',\n        height: '800px',\n        border: 'none',\n        maxWidth: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      summary: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"caption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488\\uC815\\uBCF4 \\uBAA9\\uB85D\"), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488 \\uC774\\uB984\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, productInfo.productBoardTitle)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488 \\uC18C\\uBD84\\uB958\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, productInfo.lowerCode)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"\\uBC30\\uC1A1\\uBE44\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, productInfo.productBoardDeliveryPrice))))), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleFormControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"\\uC635\\uC1581 \\uC120\\uD0DD\"), React.createElement(\"select\", {\n      name: \"option1\",\n      onChange: this._option1Change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"defaultValue\",\n      selected: \"selected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"\\uC635\\uC158\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"), this._option1Check(productList).map(productList => React.createElement(\"option\", {\n      value: productList.productOption1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, productList.productOption1)))), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleFormControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"\\uC635\\uC1582 \\uC120\\uD0DD\"), React.createElement(\"select\", {\n      name: \"option2\",\n      onChange: this._option2Change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"default\",\n      selected: \"selected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"\\uC635\\uC158\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"), this._option2Check(productList).map(productList => React.createElement(\"option\", {\n      value: productList.productCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, productList.productOption2)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \" \\uAC1C\\uC218\"), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      max: \"100\",\n      value: this.state.quantity,\n      step: \"1\",\n      onChange: this._quantityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \" \\uAC00\\uACA9\"), this.state.totalPrice)), React.createElement(\"div\", {\n      className: \"btn-prd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"btn-buy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"\\uAD6C\\uB9E4\")), React.createElement(\"a\", {\n      href: \"/cart\",\n      className: \"btn-buy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uB85C \\uC774\\uB3D9(\\uB9C1\\uD06C)\")), React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      name: \"submit\",\n      value: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8 \\uCD94\\uAC00\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }))))), React.createElement(ProductView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }));\n  }\n\n} //옵션 select 에서 class=\"form-control\" id=\"exampleFormControlSelect1\"\n// store에서 state를 복사해서 컨테이너의 props에 붙여넣기 \n\n\nfunction mapStateToProps(state) {\n  console.log('mapStateToProps ->>>>>>', state);\n  const product = state.product,\n        auth = state.auth;\n  const userDetails = auth.userDetails;\n  const productBoard = product.productBoard;\n  const productBoardDetail = product.productBoardDetail;\n  return {\n    productBoard,\n    userDetails,\n    productBoardDetail\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addCart: cartModel => dispatch(Actions.addCart(cartModel)),\n  loadProductDetails: productNum => dispatch(Actions.loadProductDetails(productNum))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","map":{"version":3,"sources":["C:\\SuperFarmClient\\src\\component\\board\\ProductDetail.js"],"names":["React","connect","withRouter","ProductView","Actions","thisTypeAnnotation","ProductDetail","Component","constructor","props","handleSubmit","e","productChoice","state","preventDefault","cartModel","userNum","userNumber","productBoardNum","productBoardTitle","cartProductName","cartProductOption1","cartProductOption2","cartProductPrice","cartProductCount","cartProductImg","addCart","console","log","_option2Change","event","tmpCode","target","value","productList","choiceProduct","filter","productCode","length","setState","tmpOption2","productOption2","totalPrice","productPrice","_quantityChange","quantity","price","calcPrice","userDetails","productBoardDetail","productInfo","tmpOption1","stock","_option1Change","bind","_option1Check","optionList","undefined","map","_option2Check","productOption1","_loadProductDetail","match","params","id","loadProductDetails","componentWillMount","productBoard","componentDidMount","shouldComponentUpdate","nextProps","nextState","JSON","stringify","render","position","overflow","top","left","opacity","width","height","border","maxWidth","lowerCode","productBoardDeliveryPrice","mapStateToProps","product","auth","mapDispatchToProps","dispatch","productNum"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAO,qBAAP;AACA,SAASC,kBAAT,QAAmC,cAAnC,C,CAIA;AACA;AACA;;AACA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAK;AACrB,UAAMA,KAAN;;AADgB,SAwBnBC,YAxBmB,GAwBHC,CAAD,IAAO;AAEnB,YAAOC,aAAa,GAAI,KAAKC,KAAL,CAAWD,aAAnC;AAEAD,MAAAA,CAAC,CAACG,cAAF;AACA,YAAMC,SAAS,GAAG;AAEfC,QAAAA,OAAO,EAAEJ,aAAa,CAACK,UAFR;AAGfC,QAAAA,eAAe,EAAEN,aAAa,CAACM,eAHhB;AAIfC,QAAAA,iBAAiB,EAACb,aAAa,CAACa,iBAJjB;AAKfC,QAAAA,eAAe,EAAER,aAAa,CAACQ,eALhB;AAMfC,QAAAA,kBAAkB,EAAET,aAAa,CAACS,kBANnB;AAOfC,QAAAA,kBAAkB,EAAEV,aAAa,CAACU,kBAPnB;AAQfC,QAAAA,gBAAgB,EAAEX,aAAa,CAACW,gBARjB;AASfC,QAAAA,gBAAgB,EAAEZ,aAAa,CAACY,gBATjB;AAUfC,QAAAA,cAAc,EAAEb,aAAa,CAACa;AAVf,OAAlB;AALmB,YAkBXC,OAlBW,GAkBC,KAAKjB,KAlBN,CAkBXiB,OAlBW;AAmBnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bb,SAA1B;AACAW,MAAAA,OAAO,CAACX,SAAD,CAAP;AACF,KA7CkB;;AAAA,SAsFnBc,cAtFmB,GAsFDC,KAAD,IAAW;AAEzB,UAAIC,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAvB;AACA,YAAMC,WAAW,GAAG,KAAKrB,KAAL,CAAWqB,WAA/B;AACA,YAAMC,aAAa,GAAGD,WAAW,CAACE,MAAZ,CAAmBF,WAAW,IAAIA,WAAW,CAACG,WAAZ,IAA2BN,OAA7D,CAAtB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYO,aAAZ,EAA2B,0BAA3B;;AACA,UAAIA,aAAa,CAACG,MAAd,KAAyB,CAA7B,EAAgC;AAC7B,aAAKC,QAAL,CAAc;AACX3B,UAAAA,aAAa,EAAEuB,aAAa,CAAC,CAAD,CADjB;AAEXK,UAAAA,UAAU,EAAEL,aAAa,CAAC,CAAD,CAAb,CAAiBM,cAFlB;AAGXC,UAAAA,UAAU,EAAEP,aAAa,CAAC,CAAD,CAAb,CAAiBQ;AAHlB,SAAd;AAKF;AACH,KApGkB;;AAAA,SAsGnBC,eAtGmB,GAsGAd,KAAD,IAAW;AAC1BH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKf,KAA/B,EAD0B,CAE1B;;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKf,KAA5B;AACA,UAAIgC,QAAQ,GAAG,CAAf;AACA,UAAIC,KAAK,GAAG,CAAZ;AACAD,MAAAA,QAAQ,GAAGf,KAAK,CAACE,MAAN,CAAaC,KAAxB;AACAa,MAAAA,KAAK,GAAG,KAAKjC,KAAL,CAAWD,aAAX,CAAyB+B,YAAjC;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACE,MAAN,CAAaC,KAAzB,EAAgC,QAAhC;AACA,UAAIc,SAAS,GAAGF,QAAQ,GAAGC,KAA3B;AACA,WAAKP,QAAL,CAAc;AACXM,QAAAA,QAAQ,EAAEA,QADC;AAEXH,QAAAA,UAAU,EAAEK;AAFD,OAAd,EAV0B,CAc1B;AACA;AACA;AAEF,KAxHkB;;AAAA,UAER/B,OAFQ,GAEI,KAAKP,KAAL,CAAWuC,WAFf,CAERhC,OAFQ;AAAA,UAGRiC,kBAHQ,GAGe,KAAKxC,KAHpB,CAGRwC,kBAHQ;AAAA,UAIRf,YAJQ,GAIQe,kBAJR,CAIRf,WAJQ;AAKhB,SAAKrB,KAAL,GAAa;AACVP,MAAAA,aAAa,EAAC2C,kBADJ;AAEVf,MAAAA,WAAW,EAAEA,YAFH;AAGVgB,MAAAA,WAAW,EAAE,EAHH;AAIVjC,MAAAA,UAAU,EAAED,OAJF;AAKV6B,MAAAA,QAAQ,EAAE,CALA;AAMVM,MAAAA,UAAU,EAAE,IANF;AAOVX,MAAAA,UAAU,EAAE,IAPF;AAQV5B,MAAAA,aAAa,EAAE,EARL;AASVwC,MAAAA,KAAK,EAAE,EATG;AAUVV,MAAAA,UAAU,EAAE;AAVF,KAAb,CALgB,CAmBhB;;AACA,SAAKW,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKzB,cAAL,GAAsB,KAAKA,cAAL,CAAoByB,IAApB,CAAyB,IAAzB,CAAtB;AACF;;AAyBDC,EAAAA,aAAa,CAACrB,WAAD,EAAc;AAExB,QAAIsB,UAAU,GAAG,EAAjB;AACA,SAAKjB,QAAL,CAAc;AACXC,MAAAA,UAAU,EAAE;AADD,KAAd;;AAIA,QAAIN,WAAW,KAAKuB,SAAhB,IAA6BvB,WAAW,KAAK,IAAjD,EAAuD;AACpDsB,MAAAA,UAAU,GAAGtB,WAAW,CAACwB,GAAZ,CAAgBxB,WAAW,IAAI;AACzC,eACGA,WADH;AAGF,OAJY,CAAb;AAKF;;AACDP,IAAAA,OAAO,CAACC,GAAR,CAAY4B,UAAZ,EAAwB,UAAxB;AACA,WAAOA,UAAP;AACF;;AACDH,EAAAA,cAAc,CAACvB,KAAD,EAAQ;AAEnBH,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACA,SAAKM,QAAL,CAAc;AACXY,MAAAA,UAAU,EAAErB,KAAK,CAACE,MAAN,CAAaC;AADd,KAAd;AAGF;;AAED0B,EAAAA,aAAa,CAACzB,WAAD,EAAc;AAExBP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKf,KAAL,CAAWsC,UAAvC;AACA,QAAIK,UAAU,GAAG,EAAjB;AAEA7B,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCM,WAAvC;;AACA,QAAIA,WAAW,KAAKuB,SAAhB,IAA6BvB,WAAW,KAAK,IAAjD,EAAuD;AACpDsB,MAAAA,UAAU,GAAGtB,WAAW,CAACE,MAAZ,CAAmBF,WAAW,IAAI,KAAKrB,KAAL,CAAWsC,UAAX,KAA0BjB,WAAW,CAAC0B,cAAxE,CAAb;AACA,aAAOJ,UAAP;AACF;;AACD,WAAOA,UAAP;AACF,GArFwC,CAuFzC;;;AAqCAK,EAAAA,kBAAkB,GAAG;AAElB,UAAM3C,eAAe,GAAG,KAAKT,KAAL,CAAWqD,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;AACArC,IAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ,EAA6B,oBAA7B;AAHkB,UAIV+C,kBAJU,GAIa,KAAKxD,KAJlB,CAIVwD,kBAJU;AAMlBA,IAAAA,kBAAkB,CAAC/C,eAAD,CAAlB;AAEF,GApIwC,CAqIzC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAgD,EAAAA,kBAAkB,GAAG;AAClBvC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKuC,YAAjB,EAA+B,aAA/B;;AACA,SAAKN,kBAAL,GAFkB,CAGlB;;AACF;;AAEDO,EAAAA,iBAAiB,GAAG;AACjBzC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACF;;AAEDyC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACzC5C,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAQ4C,IAAI,CAACC,SAAL,CAAeF,SAAf,KAA6BC,IAAI,CAACC,SAAL,CAAe,KAAK5D,KAApB,CAArC;AACF,GA7KwC,CA+KzC;;;AACA6D,EAAAA,MAAM,GAAG;AACN/C,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKnB,KAAnC;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,KAAKf,KAA5C;AACA,UAAOqC,WAAW,GAAI,KAAKrC,KAAL,CAAWP,aAAjC;AACA,UAAM4B,WAAW,GAAG,KAAKrB,KAAL,CAAWqB,WAA/B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BM,WAA1B;AACA,WAEG;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,KAAK,EAAE;AAAEyC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,GAAG,EAAC,uBAAT;AAAiC,MAAA,GAAG,EAAC,gCAArC;AAAsE,MAAA,SAAS,EAAC,gBAAhF;AAAiG,wBAAe,uBAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG;AAAK,MAAA,GAAG,EAAC,uBAAT;AAAiC,MAAA,SAAS,EAAC,SAA3C;AAAqD,MAAA,KAAK,EAAE;AAAED,QAAAA,QAAQ,EAAE,UAAZ;AAAwBE,QAAAA,GAAG,EAAE,YAA7B;AAA2CC,QAAAA,IAAI,EAAE,YAAjD;AAA+DC,QAAAA,OAAO,EAAE,GAAxE;AAA6EC,QAAAA,KAAK,EAAE,OAApF;AAA6FC,QAAAA,MAAM,EAAE,OAArG;AAA8GC,QAAAA,MAAM,EAAE,MAAtH;AAA8HC,QAAAA,QAAQ,EAAE;AAAxI,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADH,CAFH,EAUG;AAAM,MAAA,QAAQ,EAAE,KAAKzE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAO,MAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKwC,WAAW,CAAC/B,iBAAjB,CAFH,CADH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK+B,WAAW,CAACkC,SAAjB,CAFH,CALH,EAcG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKlC,WAAW,CAACmC,yBAAjB,CAFH,CAdH,CAFH,CAFH,CADH,EA0BG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAO,MAAA,GAAG,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADH,EAEG;AAAS,MAAA,IAAI,EAAC,SAAd;AAAwB,MAAA,QAAQ,EAAE,KAAKhC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA4B,MAAA,QAAQ,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADH,EAEI,KAAKE,aAAL,CAAmBrB,WAAnB,EAAgCwB,GAAhC,CAAqCxB,WAAD,IAClC;AAAQ,MAAA,KAAK,EAAEA,WAAW,CAAC0B,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI1B,WAAW,CAAC0B,cADhB,CADF,CAFJ,CAFH,CADH,EAYG;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAO,MAAA,GAAG,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADH,EAEG;AAAS,MAAA,IAAI,EAAC,SAAd;AAAwB,MAAA,QAAQ,EAAE,KAAK/B,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,QAAQ,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADH,EAGI,KAAK8B,aAAL,CAAmBzB,WAAnB,EAAgCwB,GAAhC,CAAqCxB,WAAD,IAClC;AAAQ,MAAA,KAAK,EAAEA,WAAW,CAACG,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIH,WAAW,CAACO,cADhB,CADF,CAHJ,CAFH,CAZH,EAuBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,EAEG;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,GAAG,EAAC,GAAzB;AAA6B,MAAA,GAAG,EAAC,KAAjC;AAAuC,MAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWgC,QAAzD;AACG,MAAA,IAAI,EAAC,GADR;AACY,MAAA,QAAQ,EAAE,KAAKD,eAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CAvBH,EA4BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,EAEI,KAAK/B,KAAL,CAAW6B,UAFf,CA5BH,CA1BH,EA2DG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,CADH,EAEG;AAAG,MAAA,IAAI,EAAC,OAAR;AAAgB,MAAA,SAAS,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADH,CAFH,EAKG;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,QAAxB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,MAAA,KAAK,EAAC,uCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,CA3DH,CAVH,CADH,CADH,EAiFG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjFH,CAFH;AAsFF;;AA5QwC,C,CA8Q5C;AAEA;;;AACA,SAAS4C,eAAT,CAAyBzE,KAAzB,EAAgC;AAC7Bc,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCf,KAAvC;AAD6B,QAErB0E,OAFqB,GAEH1E,KAFG,CAErB0E,OAFqB;AAAA,QAEZC,IAFY,GAEH3E,KAFG,CAEZ2E,IAFY;AAAA,QAGrBxC,WAHqB,GAGLwC,IAHK,CAGrBxC,WAHqB;AAAA,QAIrBmB,YAJqB,GAIJoB,OAJI,CAIrBpB,YAJqB;AAAA,QAKrBlB,kBALqB,GAKEsC,OALF,CAKrBtC,kBALqB;AAM7B,SAAO;AACJkB,IAAAA,YADI;AAEJnB,IAAAA,WAFI;AAGJC,IAAAA;AAHI,GAAP;AAKF;;AAGD,MAAMwC,kBAAkB,GAAGC,QAAQ,KAAK;AACrChE,EAAAA,OAAO,EAAGX,SAAD,IAAe2E,QAAQ,CAACtF,OAAO,CAACsB,OAAR,CAAgBX,SAAhB,CAAD,CADK;AAErCkD,EAAAA,kBAAkB,EAAG0B,UAAD,IAAgBD,QAAQ,CAACtF,OAAO,CAAC6D,kBAAR,CAA2B0B,UAA3B,CAAD;AAFP,CAAL,CAAnC;;AAOA,eAAe1F,OAAO,CAACqF,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnF,aAA7C,CAAf","sourcesContent":["import React from 'react';\r\n//import productDummy from './productDummy'\r\n// import PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProductView from './ProductView';\r\n//import { addCart } from '../actions/action';\r\nimport { Actions } from '../../actions';\r\nimport './ProductDetail.css';\r\nimport { thisTypeAnnotation } from '@babel/types';\r\n\r\n\r\n\r\n// 제품 상세 페이지\r\n// 옵션, 가격을 form에 담아서 submit -> 바로구매 or 장바구니\r\n// 테스트 \r\nclass ProductDetail extends React.Component {\r\n\r\n   constructor(props) {    // props 굳이 안써줘도 넘어 옴\r\n      super(props);\r\n      const { userNum } = this.props.userDetails;\r\n      const { productBoardDetail } = this.props;\r\n      const { productList } = productBoardDetail;\r\n      this.state = {\r\n         ProductDetail:productBoardDetail,\r\n         productList: productList,\r\n         productInfo: '',\r\n         userNumber: userNum,\r\n         quantity: 1,\r\n         tmpOption1: null,\r\n         tmpOption2: null,\r\n         productChoice: '',\r\n         stock: '',\r\n         totalPrice: 0\r\n      };\r\n\r\n \r\n      // this._renderProduct = this._renderProduct.bind(this);\r\n      this._option1Change = this._option1Change.bind(this);\r\n      this._option2Change = this._option2Change.bind(this);\r\n   }\r\n\r\n   handleSubmit = (e) => {\r\n\r\n      const  productChoice  = this.state.productChoice;\r\n\r\n      e.preventDefault();\r\n      const cartModel = {\r\n\r\n         userNum: productChoice.userNumber,\r\n         productBoardNum: productChoice.productBoardNum,\r\n         productBoardTitle:ProductDetail.productBoardTitle,\r\n         cartProductName: productChoice.cartProductName,\r\n         cartProductOption1: productChoice.cartProductOption1,\r\n         cartProductOption2: productChoice.cartProductOption2,\r\n         cartProductPrice: productChoice.cartProductPrice,\r\n         cartProductCount: productChoice.cartProductCount,\r\n         cartProductImg: productChoice.cartProductImg\r\n      };\r\n\r\n      const { addCart } = this.props;\r\n      console.log(\"장바구니 추가>>>\", cartModel)\r\n      addCart(cartModel);\r\n   }\r\n\r\n   _option1Check(productList) {\r\n\r\n      var optionList = [];\r\n      this.setState({\r\n         tmpOption2: null\r\n      })\r\n\r\n      if (productList !== undefined && productList !== null) {\r\n         optionList = productList.map(productList => {\r\n            return (\r\n               productList\r\n            );\r\n         })\r\n      }\r\n      console.log(optionList, 'ssssssss')\r\n      return optionList;\r\n   }\r\n   _option1Change(event) {\r\n\r\n      console.log('여기는 ', event.target.value)\r\n      this.setState({\r\n         tmpOption1: event.target.value\r\n      })\r\n   }\r\n\r\n   _option2Check(productList) {\r\n\r\n      console.log('option1Check', this.state.tmpOption1)\r\n      var optionList = [];\r\n\r\n      console.log('option1Check ----------', productList)\r\n      if (productList !== undefined && productList !== null) {\r\n         optionList = productList.filter(productList => this.state.tmpOption1 === productList.productOption1);\r\n         return optionList;\r\n      }\r\n      return optionList;\r\n   }\r\n\r\n   // 옵션2 선택시 변경\r\n   _option2Change = (event) => {\r\n\r\n      let tmpCode = ''\r\n      tmpCode = event.target.value;\r\n      const productList = this.state.productList;\r\n      const choiceProduct = productList.filter(productList => productList.productCode == tmpCode)\r\n      console.log(choiceProduct, 'ssssssssssssssssssssssss')\r\n      if (choiceProduct.length !== 0) {\r\n         this.setState({\r\n            productChoice: choiceProduct[0],\r\n            tmpOption2: choiceProduct[0].productOption2,\r\n            totalPrice: choiceProduct[0].productPrice\r\n         })\r\n      }\r\n   }\r\n\r\n   _quantityChange = (event) => {\r\n      console.log('수량 변경 전 확인', this.state)\r\n      // if (this.state.tmpOption1 !== null && this.state.tmpOption2 !== null) {\r\n      console.log(' 금액 확인 ', this.state)\r\n      let quantity = 0;\r\n      let price = 0;\r\n      quantity = event.target.value;\r\n      price = this.state.productChoice.productPrice;\r\n      console.log(event.target.value, ' 수량 확인')\r\n      var calcPrice = quantity * price\r\n      this.setState({\r\n         quantity: quantity,\r\n         totalPrice: calcPrice\r\n      })\r\n      // }else{\r\n      //    alert('옵션을 먼저 선택하세요')\r\n      // }\r\n\r\n   }\r\n\r\n   _loadProductDetail() {\r\n\r\n      const productBoardNum = this.props.match.params.id;\r\n      console.log(productBoardNum, ' productBoardNum!!')\r\n      const { loadProductDetails } = this.props;\r\n\r\n      loadProductDetails(productBoardNum);\r\n\r\n   }\r\n   // _renderProduct = () => {\r\n\r\n   //    const productId = this.props.match.params.id;\r\n   //    const products = this.props.productBoard;\r\n   //    console.log(\"products\", products)\r\n   //    var newProducts = [];\r\n   //    if (products !== undefined && products !== null) {\r\n   //       newProducts = products.filter((item) => (item.productBoardNum == productId));\r\n\r\n   //       console.log(\"newProduct[0] >>>>\", newProducts[0])\r\n\r\n   //       this.setState({\r\n   //          productInfo: newProducts[0],\r\n   //          productBoardNum: newProducts[0].productBoardNum,\r\n   //          cartProductName: newProducts[0].productList[0].productName,\r\n   //          cartProductPrice: newProducts[0].productList[0].productPrice,\r\n\r\n   //          cartProductCount: 1,   // 추후 변경 예정\r\n   //          cartProductImg: newProducts[0].productBoardThumbnail,\r\n   //          cartProductOption1: newProducts[0].productList[0].productOption1,\r\n   //          cartProductOption2: newProducts[0].productList[0].productOption2\r\n   //       });\r\n   //    }\r\n   //    return newProducts[0];\r\n   // }\r\n\r\n\r\n   componentWillMount() {\r\n      console.log(this.productBoard, ' will mount')\r\n      this._loadProductDetail();\r\n      //this._renderProduct();\r\n   }\r\n\r\n   componentDidMount() {\r\n      console.log('componentDidMount')\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState) {\r\n      console.log('shouldComponentUpdate')\r\n      return (JSON.stringify(nextState) != JSON.stringify(this.state));\r\n   }\r\n\r\n   // TODO : userDetails가 없을 경우 에러 처리해줘야함 \r\n   render() {\r\n      console.log('r e n d e r 시작', this.props)\r\n      console.log(' render state 확인!!!!!!!', this.state)\r\n      const  productInfo  = this.state.ProductDetail;\r\n      const productList = this.state.productList;\r\n      console.log('시작 이다!!!!!', productList)\r\n      return (\r\n\r\n         <div className=\"product-item\">\r\n            <div className=\"prod-info\">\r\n               <div className=\"prd-info\">\r\n                  {/* ------------------------------------------------------------------------------------------------ */}\r\n                  <div className=\"col-md-6 col-sm-6\">\r\n                     <div className=\"product-main-image\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n                        <img src=\"../../images/rice.jpg\" alt=\"Cool green dress with red bell\" className=\"img-responsive\" data-bigimgsrc=\"../../images/rice.jpg\" />\r\n                        <img src=\"../../images/rice.jpg\" className=\"zoomImg\" style={{ position: 'absolute', top: '-290.619px', left: '-180.201px', opacity: '0', width: '600px', height: '800px', border: 'none', maxWidth: 'none' }} />\r\n                     </div>\r\n                  </div>\r\n                  {/* ------------------------------------------------------------------------------------------------ */}\r\n\r\n                  <form onSubmit={this.handleSubmit}>\r\n                     <div className=\"col-md-6 col-sm-6\">\r\n\r\n                        <table summary=\"\">\r\n                           <caption>상품정보 목록</caption>\r\n                           <tbody>\r\n                              <tr>\r\n                                 <th scope=\"row\">상품 이름</th>\r\n                                 <td>{productInfo.productBoardTitle}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                 <th scope=\"row\">상품 소분류</th>\r\n                                 <td>{productInfo.lowerCode}</td>\r\n                              </tr>\r\n                              {/* {/* <tr>\r\n                                 <th scope=\"row\">상품 가격(옵션에 따라 달라질 예정)</th>\r\n                                 {/* <td>{productList.productTaxprice}</td> */}\r\n                              {/*</tr> */}\r\n\r\n                              <tr>\r\n                                 <th scope=\"row\">배송비</th>\r\n                                 <td>{productInfo.productBoardDeliveryPrice}</td>\r\n                              </tr>\r\n                           </tbody>\r\n                        </table>\r\n                     </div>\r\n                     <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                           <label for=\"exampleFormControlSelect1\">옵션1 선택</label>\r\n                           < select name=\"option1\" onChange={this._option1Change}>\r\n                              <option value='defaultValue'selected=\"selected\">옵션을 선택하세요</option>\r\n                              {this._option1Check(productList).map((productList) => (\r\n                                 <option value={productList.productOption1} >\r\n                                    {productList.productOption1}</option>\r\n                              ))}\r\n                           </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-6\">\r\n                           <label for=\"exampleFormControlSelect1\">옵션2 선택</label>\r\n                           < select name=\"option2\" onChange={this._option2Change}>\r\n                              <option value=\"default\" selected=\"selected\">\r\n                                 옵션을 선택하세요</option>\r\n                              {this._option2Check(productList).map((productList) => (\r\n                                 <option value={productList.productCode} >\r\n                                    {productList.productOption2}</option>\r\n                              ))}\r\n                           </select>\r\n                        </div>\r\n                        <div>\r\n                           <label > 개수</label>\r\n                           <input type=\"number\" min=\"1\" max=\"100\" value={this.state.quantity}\r\n                              step=\"1\" onChange={this._quantityChange}></input>\r\n                        </div>\r\n                        <div>\r\n                           <label> 가격</label>\r\n                           {this.state.totalPrice}\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"btn-prd\">\r\n                        <p><a href=\"#\" className=\"btn-buy\">구매</a></p>\r\n                        <a href=\"/cart\" className=\"btn-buy\">\r\n                           <p>장바구니로 이동(링크)</p>\r\n                        </a>\r\n                        <input type=\"submit\" id=\"submit\" name=\"submit\" value=\"장바구니 추가\" />\r\n                     </div>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n            <ProductView />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n//옵션 select 에서 class=\"form-control\" id=\"exampleFormControlSelect1\"\r\n\r\n// store에서 state를 복사해서 컨테이너의 props에 붙여넣기 \r\nfunction mapStateToProps(state) {\r\n   console.log('mapStateToProps ->>>>>>', state)\r\n   const { product, auth } = state;\r\n   const { userDetails } = auth;\r\n   const { productBoard } = product\r\n   const { productBoardDetail } = product;\r\n   return {\r\n      productBoard,\r\n      userDetails,\r\n      productBoardDetail\r\n   };\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   addCart: (cartModel) => dispatch(Actions.addCart(cartModel)),\r\n   loadProductDetails: (productNum) => dispatch(Actions.loadProductDetails(productNum))\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);\r\n\r\n"]},"metadata":{},"sourceType":"module"}