{"ast":null,"code":"class StateLoader {\n  loadState() {\n    try {\n      console.log(localStorage.getItem);\n      let state = localStorage.getItem(\"http://localhost:8080/state\");\n      console.log(' loadState 실행 ', state);\n\n      if (state !== undefined && state !== null) {\n        return JSON.parse(state);\n      }\n    } catch (error) {\n      // 여기에 storage Error 메세지 넣든지 \n      console.log('error storage 불러오기 에러 입니다.', error);\n    }\n\n    return this.initialState();\n  }\n\n  saveState(state) {\n    try {\n      console.log(' saveState 실행 ', state);\n      let json = JSON.stringify(state);\n      localStorage.setItem(\"http://localhost:8080/state\", json);\n    } catch (error) {\n      console.log('error storage 저장 에러 입니다.', error);\n    }\n  } // 여기 auth에 장바구니, 구매한 목록 추가 \n  // product에 카테고리 추가 (upper: [], lower: [])\n\n\n  initialState() {\n    return {\n      // auth: {\n      //     retryCount: 0,\n      //     token: null,\n      //     userDetails: {},\n      //     signupModel: null\n      // },\n      // product: {\n      //     items: [],\n      //     cart: []\n      // },\n      // // 각 페이지 마다 questionBoard들, 현재의 페이지 저장\n      // questionBoard: {\n      //     page:1,\n      //     questionBoard:[]\n      // },\n      //     productBoard: [],\n      //     category: []\n      auth: {\n        retryCount: 0,\n        token: null,\n        userDetails: null,\n        signupModel: {}\n      },\n      product: {\n        productBoard: [],\n        category: [],\n        productBoardDetail: {}\n      },\n      cart: {\n        cartlist: []\n      },\n      board: {\n        reviewBoard: [],\n        qnaBoard: []\n      },\n      userEdit: {\n        userDetails: []\n      }\n    };\n  }\n\n}\n\nexport default StateLoader;","map":{"version":3,"sources":["C:\\superfarmclient\\SuperFarmClientTest4\\SuperFarmClient\\src\\util\\StateLoader.js"],"names":["StateLoader","loadState","console","log","localStorage","getItem","state","undefined","JSON","parse","error","initialState","saveState","json","stringify","setItem","auth","retryCount","token","userDetails","signupModel","product","productBoard","category","productBoardDetail","cart","cartlist","board","reviewBoard","qnaBoard","userEdit"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;AAEdC,EAAAA,SAAS,GAAG;AACR,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAzB;AACA,UAAIC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,6BAArB,CAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,KAA9B;;AACA,UAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;AACvC,eAAOE,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAP;AACH;AACJ,KAPD,CAOE,OAAOI,KAAP,EAAc;AACZ;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CO,KAA1C;AACH;;AACD,WAAO,KAAKC,YAAL,EAAP;AACH;;AAEDC,EAAAA,SAAS,CAACN,KAAD,EAAQ;AACb,QAAI;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,KAA9B;AACA,UAAIO,IAAI,GAAGL,IAAI,CAACM,SAAL,CAAeR,KAAf,CAAX;AACAF,MAAAA,YAAY,CAACW,OAAb,CAAqB,6BAArB,EAAoDF,IAApD;AACH,KAJD,CAIE,OAAOH,KAAP,EAAc;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCO,KAAxC;AACH;AACJ,GAzBa,CA2Bd;AACA;;;AACAC,EAAAA,YAAY,GAAG;AAEX,WAAO;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACAK,MAAAA,IAAI,EAAE;AACFC,QAAAA,UAAU,EAAE,CADV;AAEFC,QAAAA,KAAK,EAAE,IAFL;AAGFC,QAAAA,WAAW,EAAE,IAHX;AAIFC,QAAAA,WAAW,EAAE;AAJX,OAnBH;AAyBHC,MAAAA,OAAO,EAAE;AACLC,QAAAA,YAAY,EAAE,EADT;AAELC,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,kBAAkB,EAAC;AAHd,OAzBN;AA+BHC,MAAAA,IAAI,EAAG;AACHC,QAAAA,QAAQ,EAAE;AADP,OA/BJ;AAkCHC,MAAAA,KAAK,EAAG;AACJC,QAAAA,WAAW,EAAC,EADR;AAEJC,QAAAA,QAAQ,EAAC;AAFL,OAlCL;AAsCHC,MAAAA,QAAQ,EAAE;AACNX,QAAAA,WAAW,EAAC;AADN;AAtCP,KAAP;AAiDC;;AAhFS;;AAmFlB,eAAenB,WAAf","sourcesContent":["class StateLoader {\r\n\r\n    loadState() {\r\n        try {\r\n            console.log(localStorage.getItem)\r\n            let state = localStorage.getItem(\"http://localhost:8080/state\");\r\n            console.log(' loadState 실행 ', state)\r\n            if (state !== undefined && state !== null) {\r\n                return JSON.parse(state);\r\n            }\r\n        } catch (error) {\r\n            // 여기에 storage Error 메세지 넣든지 \r\n            console.log('error storage 불러오기 에러 입니다.', error)\r\n        }\r\n        return this.initialState();\r\n    }\r\n\r\n    saveState(state) {\r\n        try {\r\n            console.log(' saveState 실행 ', state)\r\n            let json = JSON.stringify(state);\r\n            localStorage.setItem(\"http://localhost:8080/state\", json);\r\n        } catch (error) {\r\n            console.log('error storage 저장 에러 입니다.', error)\r\n        }\r\n    }\r\n\r\n    // 여기 auth에 장바구니, 구매한 목록 추가 \r\n    // product에 카테고리 추가 (upper: [], lower: [])\r\n    initialState() {\r\n        \r\n        return {\r\n            // auth: {\r\n            //     retryCount: 0,\r\n            //     token: null,\r\n            //     userDetails: {},\r\n            //     signupModel: null\r\n            // },\r\n            // product: {\r\n            //     items: [],\r\n            //     cart: []\r\n            // },\r\n            // // 각 페이지 마다 questionBoard들, 현재의 페이지 저장\r\n            // questionBoard: {\r\n            //     page:1,\r\n            //     questionBoard:[]\r\n            // },\r\n            \r\n            //     productBoard: [],\r\n            //     category: []\r\n            auth: {\r\n                retryCount: 0,\r\n                token: null,\r\n                userDetails: null,\r\n                signupModel: {}\r\n            },\r\n            product: {\r\n                productBoard: [],\r\n                category: [],\r\n                productBoardDetail:{} \r\n             \r\n            },\r\n            cart : {\r\n                cartlist: [],\r\n            },\r\n            board : {\r\n                reviewBoard:[],\r\n                qnaBoard:[],\r\n            },\r\n            userEdit: {\r\n                userDetails:[]\r\n            }\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            \r\n        };\r\n}\r\n\r\nexport default StateLoader;\r\n"]},"metadata":{},"sourceType":"module"}