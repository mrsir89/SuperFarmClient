{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\SuperFarmClientTemp\\\\SuperFarmClient\\\\src\\\\component\\\\login\\\\Login.js\";\nimport React from 'react';\nimport { Actions } from '../../actions/index';\nimport { ActionTypes } from '../../contants';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nconst loginAsync = (customerId, password) => dispatch => {\n  console.log('loginAsynce 시작 ', customerId, password);\n  return dispatch(Actions.login(customerId, password)).then(response => {\n    if (response.type === ActionTypes.LOGIN_SUCCESS) {\n      return dispatch(Actions.getUserMe());\n    } else {\n      console.log('로그인 실패 ', response);\n      return Promise.reject(response);\n    }\n  });\n}; // .then(response => {\n//   if (response.type === ActionTypes.GET_USERME_SUCCESS) {\n//     console.log(\"userme 성공 >>>>>>>>>>>>\");\n//     return <Redirect to=\"/\" />\n//   } else {\n//     return Promise.reject(response);\n//   }\n// })\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerId: '',\n      password: ''\n    };\n    this._onchange = this._onchange.bind(this);\n    this.routeChange = this.routeChange.bind(this);\n  } // Change endpoint after Login (with some error)\n\n\n  routeChange() {\n    let path = '/';\n    this.props.history.push(path);\n  }\n\n  _onchange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  onSubmit(event) {\n    event.preventDefault(); // const loginInfo ={...this.state}\n    // console.log(loginInfo,'testLogin onSubmin')\n\n    const login = this.props.login;\n    let customerId = this.state.customerId;\n    let password = this.state.password;\n    console.log('customerId : ', customerId);\n    console.log('password  : ', password);\n    login(customerId, password);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: 'white',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-15 com-sm-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-form-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-15 col-sm-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"LoginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(\"form\", {\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"customerId\",\n      value: this.state.userId,\n      onChange: this._onchange,\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this._onchange,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"onSubmit\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Log In\")), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/page-forgotton-password.html\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Forgot Password?\"))))))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  login: (customerId, password) => dispatch(loginAsync(customerId, password))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));","map":{"version":3,"sources":["D:\\Project\\SuperFarmClientTemp\\SuperFarmClient\\src\\component\\login\\Login.js"],"names":["React","Actions","ActionTypes","connect","withRouter","Redirect","loginAsync","customerId","password","dispatch","console","log","login","then","response","type","LOGIN_SUCCESS","getUserMe","Promise","reject","Login","Component","constructor","props","state","_onchange","bind","routeChange","path","history","push","event","target","value","name","setState","onSubmit","preventDefault","render","backgroundColor","display","justifyContent","e","userId","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Actions } from '../../actions/index';\r\nimport { ActionTypes } from '../../contants';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst loginAsync = (customerId, password) => (dispatch) => {\r\n  console.log('loginAsynce 시작 ', customerId, password)\r\n  return dispatch(Actions.login(customerId, password))\r\n    .then(response => {\r\n      if (response.type === ActionTypes.LOGIN_SUCCESS) {\r\n        return dispatch(Actions.getUserMe());\r\n      } else {\r\n        console.log('로그인 실패 ', response)\r\n        return Promise.reject(response);\r\n      }\r\n    });\r\n}\r\n// .then(response => {\r\n//   if (response.type === ActionTypes.GET_USERME_SUCCESS) {\r\n//     console.log(\"userme 성공 >>>>>>>>>>>>\");\r\n//     return <Redirect to=\"/\" />\r\n//   } else {\r\n//     return Promise.reject(response);\r\n//   }\r\n// })\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      customerId: '',\r\n      password: ''\r\n    }\r\n    this._onchange = this._onchange.bind(this);\r\n    this.routeChange = this.routeChange.bind(this);\r\n  }\r\n\r\n\r\n\r\n\r\n  // Change endpoint after Login (with some error)\r\n  routeChange() {\r\n    let path = '/';\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  _onchange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    console.log(this.state)\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    // const loginInfo ={...this.state}\r\n    // console.log(loginInfo,'testLogin onSubmin')\r\n    const { login } = this.props\r\n    let customerId = this.state.customerId\r\n    let password = this.state.password\r\n    console.log('customerId : ', customerId)\r\n    console.log('password  : ', password)\r\n    login(customerId, password);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n      <div className=\"container\" style={{ backgroundColor: 'white', display: 'flex', justifyContent: 'center' }}>\r\n      <div className=\"col-md-15 com-sm-15\">\r\n      <div className=\"content-form-page\">\r\n      <div className=\"row\">\r\n      <div className=\"col-md-15 col-sm-15\">\r\n\r\n      <div className=\"Login\">\r\n        <div className=\"LoginForm\">\r\n          <div className=\"top\">\r\n            Log in\r\n              </div>\r\n          <form onSubmit={e => this.onSubmit(e)}>\r\n            <input type=\"text\" name=\"customerId\" value={this.state.userId} onChange={this._onchange} placeholder=\"Username\" />\r\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this._onchange} placeholder=\"Password\" />\r\n            {/* <input type=\"submit\" name=\"submit\" value=\"Log In\"/> */}\r\n            <input type=\"onSubmit\" onSubmit={this.onSubmit}>Log In</input>\r\n          </form>\r\n          <div className=\"bottom\">\r\n            <a href=\"/page-forgotton-password.html\">Forgot Password?</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (customerId, password) => dispatch(loginAsync(customerId, password))\r\n});\r\n\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Login));"]},"metadata":{},"sourceType":"module"}