{"ast":null,"code":"var _jsxFileName = \"C:\\\\SuperFarmClient\\\\src\\\\component\\\\board\\\\ProductList.js\";\nimport React from 'react';\nimport ProductItem from './ProductItem';\nimport { Link } from 'react-router-dom';\nimport { Actions } from '../../actions/index';\nimport { connect } from 'react-redux'; // 제품 전체 리스트 페이지 \n\nclass ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._renderAllProducts = () => {\n      const productBoard = this.props.productBoard;\n      var productItems = [];\n      console.log(productBoard, ' _renderAllProduct');\n\n      if (productBoard !== undefined && productBoard !== null && productBoard.length !== 0) {\n        productItems = productBoard.map(item => {\n          return React.createElement(Link, {\n            to: \"/product/\".concat(item.productBoardNum),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(ProductItem, {\n            key: item.productBoardNum,\n            item: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"\\uCC3E\\uC73C\\uC2DC\\uB294 \\uBB3C\\uD488\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\") // 여기에 물품이 없을 경우 페이지 만들기 \n        // 찾으시는 물품이 없습니다가 잘 나오게 \n        ;\n      }\n\n      return productItems;\n    };\n\n    this.state = {\n      productBoard: []\n    };\n  }\n\n  componentWillMount() {\n    const loadProductList = this.props.loadProductList; //loadProductList();\n\n    const lowerId = this.props.match.params.id;\n    console.log(\"lowerId >>>>>>>>>>>\", lowerId);\n    loadProductList('lower', lowerId);\n  }\n\n  componentDidMount() {\n    const loadProductList = this.props.loadProductList; //loadProductList();\n\n    const lowerId = this.props.match.params.id;\n    console.log(\"lowerId >>>>>>>>>>>\", lowerId);\n    loadProductList('lower', lowerId);\n  }\n\n  // _renderAllproducts end\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: 'white',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-9 col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this._renderAllProducts())));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const product = state.product;\n  const productBoard = product.productBoard;\n  return {\n    productBoard\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  loadProductList: (type, id) => dispatch(Actions.loadProductList(type, id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["C:\\SuperFarmClient\\src\\component\\board\\ProductList.js"],"names":["React","ProductItem","Link","Actions","connect","ProductList","Component","constructor","props","_renderAllProducts","productBoard","productItems","console","log","undefined","length","map","item","productBoardNum","state","componentWillMount","loadProductList","lowerId","match","params","id","componentDidMount","render","backgroundColor","display","justifyContent","mapStateToProps","product","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ProductItem from './ProductItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { Actions } from '../../actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n// 제품 전체 리스트 페이지 \r\nclass ProductList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productBoard: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { loadProductList } = this.props;\r\n    //loadProductList();\r\n    const lowerId = this.props.match.params.id;\r\n    console.log(\"lowerId >>>>>>>>>>>\", lowerId);\r\n    loadProductList('lower', lowerId);\r\n\r\n  }\r\n  componentDidMount(){\r\n    const { loadProductList } = this.props;\r\n    //loadProductList();\r\n    const lowerId = this.props.match.params.id;\r\n    console.log(\"lowerId >>>>>>>>>>>\", lowerId);\r\n    loadProductList('lower', lowerId);\r\n\r\n  }\r\n\r\n  _renderAllProducts = () => {\r\n    const { productBoard } = this.props;\r\n    var productItems = [];\r\n    console.log(productBoard , ' _renderAllProduct')\r\n    if (productBoard !== undefined && productBoard !== null && productBoard.length !== 0) {\r\n      productItems = productBoard.map(item => {\r\n        return <Link to={`/product/${item.productBoardNum}`}>\r\n          <ProductItem key={item.productBoardNum} item={item} />\r\n        </Link>\r\n      })\r\n    }else{\r\n      return(\r\n        <div>\r\n          찾으시는 물품이 없습니다.\r\n        </div>\r\n        // 여기에 물품이 없을 경우 페이지 만들기 \r\n        // 찾으시는 물품이 없습니다가 잘 나오게 \r\n        \r\n\r\n      )\r\n    }\r\n    return productItems\r\n\r\n  }// _renderAllproducts end\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"container\" style={{ backgroundColor: 'white', display: 'flex', justifyContent: 'center' }}>\r\n          <div className=\"col-md-9 col-sm-7\">\r\n            {this._renderAllProducts()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { product } = state;\r\n  const { productBoard } = product;\r\n  return {\r\n    productBoard\r\n  };\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadProductList: (type, id) => dispatch(Actions.loadProductList(type, id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n"]},"metadata":{},"sourceType":"module"}