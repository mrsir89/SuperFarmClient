{"ast":null,"code":"import _objectSpread from \"C:\\\\SuperFarmClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ActionTypes } from '../contants';\nconst initialStateBoard = {\n  qnaBoard: [],\n  reviewBoard: [],\n  noticeBoard: [],\n  frequentlyBoard: []\n};\n\nconst boardReducer = (state = initialStateBoard, action) => {\n  const qnaBoard = state.qnaBoard,\n        reviewBoard = state.reviewBoard,\n        noticeBoard = state.noticeBoard,\n        frequentlyBoard = state.frequentlyBoard;\n  const payload = action.payload;\n\n  switch (action.type) {\n    //////////////////////////////////////////////////////////\n    ///////////    noticeBoard\n    case ActionTypes.LOAD_NOTICEBOARD_SUCCESS:\n      console.log('ActionTypes.LOAD_NOTICEBOARD_SUCCESS');\n\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        return _objectSpread({}, state, {\n          noticeBoard: data\n        });\n      } else return state;\n\n    case ActionTypes.LOAD_FREQUENTLYASKEDBOARD_SUCCESS:\n      console.log('ActionTypes.LOAD_FREQUENTLYASKEDBOARD_SUCCESS');\n\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        return _objectSpread({}, state, {\n          frequentlyBoard: data\n        });\n      } else return state;\n\n    case ActionTypes.LOAD_QNABOARDLIST_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log(data, 'ActionTypes.LOAD_QNABOARDLIST_SUCCESS');\n        return _objectSpread({}, state, {\n          qnaBoard: data\n        });\n      } else return state;\n\n    case ActionTypes.WRITE_QNABOARD_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log(data, 'ActionTypes.WRITE_QNABOARD_SUCCESS');\n        return _objectSpread({}, state, {\n          qnaBoard: data\n        });\n      } else return state;\n\n    case ActionTypes.EDIT_QNABOARD_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log(data, 'ActionTypes.EDIT_QNABOARD_SUCCESS');\n        return _objectSpread({}, state, {\n          qnaBoard: data\n        });\n      } else return state;\n\n    case ActionTypes.DELETE_QNABOARD_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log(data, 'ActionTypes.DELETE_QNABOARD_SUCCESS');\n        return _objectSpread({}, state, {\n          qnaBoard: data\n        });\n      } else return state;\n\n    case ActionTypes.WRITE_QNABOARDANSWER_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log(data, 'ActionTypes.WRITE_QNABOARDANSWER_SUCCESS');\n        return _objectSpread({}, state, {\n          qnaBoard: data\n        });\n      } else return state;\n\n    case ActionTypes.DELETE_QNABOARDANSWER_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log(data, 'ActionTypes.DELETE_QNABOARDANSWER_SUCCESS');\n        return _objectSpread({}, state, {\n          qnaBoard: data\n        });\n      } else return state;\n\n    ////////////////////////////////////////////////\n    ////////// ReviewBoard\n\n    case ActionTypes.ADD_REVIEW_SUCCESS:\n      console.log(\"addreview 성공!!!!!\");\n\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log('Actiontypes.ADD_REVIEW_SUCCESS', data);\n        return _objectSpread({}, state, {\n          reviewBoard: data\n        });\n      } else return state;\n\n    case ActionTypes.REMOVE_REVIEW_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log('ActionTypes.REMOVE_REVIEW_SUCCESS', data);\n        return _objectSpread({}, state);\n      }\n\n      return state;\n\n    case ActionTypes.LOAD_REVIEWS_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log('ActionTypes.LOAD_REVIEWS_SUCCESS', data);\n\n        if (data !== undefined && data !== null) {\n          return _objectSpread({}, state, {\n            reviewBoard: data\n          });\n        }\n      }\n\n      return state;\n\n    case ActionTypes.UPLOADFILEREVIEW_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n        console.log('ActionTypes.UPLOADFILEREVIEW_SUCCESS', data);\n\n        if (data !== undefined && data !== null) {\n          return _objectSpread({}, state, {\n            reviewBoard: data\n          });\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;","map":{"version":3,"sources":["C:\\SuperFarmClient\\src\\reducers\\board.reducer.js"],"names":["ActionTypes","initialStateBoard","qnaBoard","reviewBoard","noticeBoard","frequentlyBoard","boardReducer","state","action","payload","type","LOAD_NOTICEBOARD_SUCCESS","console","log","undefined","data","LOAD_FREQUENTLYASKEDBOARD_SUCCESS","LOAD_QNABOARDLIST_SUCCESS","WRITE_QNABOARD_SUCCESS","EDIT_QNABOARD_SUCCESS","DELETE_QNABOARD_SUCCESS","WRITE_QNABOARDANSWER_SUCCESS","DELETE_QNABOARDANSWER_SUCCESS","ADD_REVIEW_SUCCESS","REMOVE_REVIEW_SUCCESS","LOAD_REVIEWS_SUCCESS","UPLOADFILEREVIEW_SUCCESS"],"mappings":"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","sourcesContent":["import { ActionTypes } from '../contants';\r\n\r\nconst initialStateBoard = {\r\n    qnaBoard: [],\r\n    reviewBoard: [],\r\n    noticeBoard:[],\r\n    frequentlyBoard:[]\r\n};\r\n\r\n\r\nconst boardReducer = (state = initialStateBoard, action) => {\r\n    const { qnaBoard, reviewBoard, noticeBoard,frequentlyBoard } = state;\r\n    const { payload } = action;\r\n\r\n    switch (action.type) {\r\n        //////////////////////////////////////////////////////////\r\n        ///////////    noticeBoard\r\n\r\n        case ActionTypes.LOAD_NOTICEBOARD_SUCCESS:\r\n        \r\n        console.log('ActionTypes.LOAD_NOTICEBOARD_SUCCESS')\r\n        if(payload !== undefined && payload !== null){\r\n            const { data } = payload\r\n            return({\r\n                ...state,\r\n                noticeBoard:data\r\n            })\r\n            \r\n        }\r\n        else\r\n            return state;\r\n        \r\n        case ActionTypes.LOAD_FREQUENTLYASKEDBOARD_SUCCESS:\r\n        \r\n            console.log('ActionTypes.LOAD_FREQUENTLYASKEDBOARD_SUCCESS')\r\n            if(payload !== undefined && payload !== null){\r\n                const { data } = payload\r\n                return({\r\n                    ...state,\r\n                    frequentlyBoard:data\r\n                })\r\n                    \r\n                }\r\n            else\r\n                return state;\r\n\r\n        case ActionTypes.LOAD_QNABOARDLIST_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n\r\n                const { data } = payload\r\n                console.log(data, 'ActionTypes.LOAD_QNABOARDLIST_SUCCESS')\r\n                return {\r\n                    ...state,\r\n                    qnaBoard: data\r\n                }\r\n            }\r\n            else\r\n                return state;\r\n\r\n        case ActionTypes.WRITE_QNABOARD_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload\r\n                console.log(data, 'ActionTypes.WRITE_QNABOARD_SUCCESS')\r\n                return {\r\n                    ...state,\r\n                    qnaBoard:data\r\n                }\r\n            }\r\n            else\r\n                return state;\r\n\r\n        case ActionTypes.EDIT_QNABOARD_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload\r\n                console.log(data, 'ActionTypes.EDIT_QNABOARD_SUCCESS')\r\n                return {\r\n                    ...state,\r\n                    qnaBoard:data\r\n                }\r\n            }else\r\n                return state;\r\n\r\n        case ActionTypes.DELETE_QNABOARD_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload\r\n                console.log(data, 'ActionTypes.DELETE_QNABOARD_SUCCESS')\r\n                return{\r\n                    ...state,\r\n                    qnaBoard:data\r\n                }\r\n            }else\r\n                return state\r\n\r\n        case ActionTypes.WRITE_QNABOARDANSWER_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload\r\n                console.log(data, 'ActionTypes.WRITE_QNABOARDANSWER_SUCCESS')\r\n                return{\r\n                    ...state,\r\n                    qnaBoard:data\r\n                }\r\n            }else\r\n                return state\r\n\r\n        case ActionTypes.DELETE_QNABOARDANSWER_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload\r\n                console.log(data, 'ActionTypes.DELETE_QNABOARDANSWER_SUCCESS')\r\n                return{\r\n                    ...state,\r\n                    qnaBoard:data\r\n                }\r\n            }else\r\n                return state;\r\n\r\n        ////////////////////////////////////////////////\r\n        ////////// ReviewBoard\r\n\r\n        case ActionTypes.ADD_REVIEW_SUCCESS:\r\n            console.log(\"addreview 성공!!!!!\")\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload;\r\n                console.log('Actiontypes.ADD_REVIEW_SUCCESS',data)\r\n                return{\r\n                    ...state,\r\n                    reviewBoard:data\r\n                }\r\n            }else\r\n                return state;\r\n\r\n        case ActionTypes.REMOVE_REVIEW_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload;\r\n                console.log('ActionTypes.REMOVE_REVIEW_SUCCESS',data)\r\n                return {\r\n                    ...state,\r\n                }\r\n            }\r\n\r\n            return state\r\n\r\n        case ActionTypes.LOAD_REVIEWS_SUCCESS:\r\n\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload;\r\n                console.log('ActionTypes.LOAD_REVIEWS_SUCCESS',data)\r\n                if (data !== undefined && data !== null) {\r\n                    return {\r\n                        ...state,\r\n                        reviewBoard: data,\r\n                    };\r\n                }\r\n            }\r\n            return state\r\n\r\n        case ActionTypes.UPLOADFILEREVIEW_SUCCESS:\r\n            if(payload !== undefined && payload !== null){\r\n                const{ data } =payload;\r\n                console.log('ActionTypes.UPLOADFILEREVIEW_SUCCESS',data);\r\n                if( data !== undefined && data !== null){\r\n                    return{\r\n                        ...state,\r\n                        reviewBoard: data,\r\n                    };\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default boardReducer;"]},"metadata":{},"sourceType":"module"}