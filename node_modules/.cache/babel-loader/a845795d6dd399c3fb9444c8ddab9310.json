{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\SuperFarmClient\\\\SuperFarmClient\\\\src\\\\component\\\\board\\\\UserEdit.js\";\nimport React from 'react';\nimport ProductItem from './ProductItem';\nimport { Actions } from '../../actions/index';\nimport { ActionTypes } from '../../contants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux'; // class userEdit extends React.Component{\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             userdetails: []\n//         }\n//     }\n//     render(){\n//         const { userdetails } = this.props;\n//         console.log('현재의 state >>>>', this.state)\n//         console.log(\"현재의 props\", this.props);\n//         return(\n//             <div>\n//                 {userdetails.map((userdetail) =>(\n//                     <div className=\"row\">\n//                         <div>{userdetail.userId}</div>\n//                         <div>{userdetail.userRegday}</div>\n//                     </div>\n//                 ))}\n//             </div>\n//         );\n//     }\n// }\n// function mapStateToProps(state) {\n//     const { auth } = state;\n//     const { userdetails } = auth;\n//     return {\n//         userdetails\n//     };\n// }//mapStateToProps\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         getUserMe: bindActionCreators(Actions.getUserMe, dispatch)\n//     }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(userEdit);\n\nconst checkAsync = (customerId, password) => dispatch => {};\n\nclass userCheck extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerId: '',\n      password: ''\n    };\n  }\n\n  onSubmit() {\n    const userCheck = this.props.userCheck;\n    let customerId = this.state.customerId;\n    let password = this.state.password;\n    userCheck(customerId, password);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"userCheck\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"userCheckForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\uC0AC\\uC6A9\\uC790 \\uD655\\uC778\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"customerId\",\n      value: this.state.userId,\n      placeholder: \"\\uC544\\uC774\\uB514\\uC785\\uB825\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uC785\\uB825\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"\\uD655\\uC778\",\n      value: \"userCheck\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  userCheck: (customerId, password) => dispatch(checkAsync(customerId, password))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));","map":{"version":3,"sources":["D:\\Project\\SuperFarmClient\\SuperFarmClient\\src\\component\\board\\UserEdit.js"],"names":["React","ProductItem","Actions","ActionTypes","connect","withRouter","PropTypes","bindActionCreators","checkAsync","customerId","password","dispatch","userCheck","Component","constructor","props","state","onSubmit","render","userId","mapDispatchToProps","Login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA2BC,QAAD,IAAc,CAE1D,CAFD;;AAIA,MAAMC,SAAN,SAAwBZ,KAAK,CAACa,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTP,MAAAA,UAAU,EAAC,EADF;AAETC,MAAAA,QAAQ,EAAC;AAFA,KAAb;AAIH;;AAEDO,EAAAA,QAAQ,GAAE;AAAA,UACEL,SADF,GACgB,KAAKG,KADrB,CACEH,SADF;AAEN,QAAIH,UAAU,GAAG,KAAKO,KAAL,CAAWP,UAA5B;AACA,QAAIC,QAAQ,GAAG,KAAKM,KAAL,CAAWN,QAA1B;AACAE,IAAAA,SAAS,CAACH,UAAD,EAAaC,QAAb,CAAT;AACH;;AAEDQ,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,EAII;AAAM,MAAA,QAAQ,EAAE,KAAKD,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,YAAxB;AAAqC,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWG,MAAvD;AAA+D,MAAA,WAAW,EAAC,gCAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAE,UAA7B;AAAwC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWN,QAA1D;AAAoE,MAAA,WAAW,EAAC,sCAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,cAA1B;AAA+B,MAAA,KAAK,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAJJ,CADJ;AAYH;;AA7BmC;;AAgCxC,MAAMU,kBAAkB,GAAIT,QAAD,KAAe;AACtCC,EAAAA,SAAS,EAAE,CAACH,UAAD,EAAaC,QAAb,KAA0BC,QAAQ,CAACH,UAAU,CAACC,UAAD,EAAaC,QAAb,CAAX;AADP,CAAf,CAA3B;;AAIA,eAAeL,UAAU,CAACD,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCC,KAAlC,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport ProductItem from './ProductItem';\r\nimport { Actions } from '../../actions/index';\r\nimport {ActionTypes} from '../../contants';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// class userEdit extends React.Component{\r\n\r\n//     constructor(props){\r\n//         super(props)\r\n//         this.state = {\r\n//             userdetails: []\r\n//         }\r\n//     }\r\n\r\n\r\n//     render(){\r\n//         const { userdetails } = this.props;\r\n//         console.log('현재의 state >>>>', this.state)\r\n//         console.log(\"현재의 props\", this.props);\r\n//         return(\r\n//             <div>\r\n//                 {userdetails.map((userdetail) =>(\r\n//                     <div className=\"row\">\r\n//                         <div>{userdetail.userId}</div>\r\n//                         <div>{userdetail.userRegday}</div>\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n// }\r\n\r\n// function mapStateToProps(state) {\r\n//     const { auth } = state;\r\n//     const { userdetails } = auth;\r\n//     return {\r\n//         userdetails\r\n//     };\r\n// }//mapStateToProps\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//     return {\r\n//         getUserMe: bindActionCreators(Actions.getUserMe, dispatch)\r\n//     }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(userEdit);\r\n\r\nconst checkAsync = (customerId, password) => (dispatch) => {\r\n\r\n}\r\n\r\nclass userCheck extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            customerId:'',\r\n            password:'',\r\n        }\r\n    }\r\n\r\n    onSubmit(){\r\n        const { userCheck } = this.props\r\n        let customerId = this.state.customerId\r\n        let password = this.state.password\r\n        userCheck(customerId, password);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"userCheck\">\r\n                <div className=\"userCheckForm\">\r\n                    사용자 확인\r\n                </div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" name=\"customerId\" value={this.state.userId} placeholder=\"아이디입력\"/>\r\n                    <input type=\"password\" name =\"password\" value={this.state.password} placeholder=\"비밀번호입력\"/> \r\n                    <input type=\"submit\" name=\"확인\" value=\"userCheck\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    userCheck: (customerId, password) => dispatch(checkAsync(customerId, password))\r\n});\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Login));"]},"metadata":{},"sourceType":"module"}