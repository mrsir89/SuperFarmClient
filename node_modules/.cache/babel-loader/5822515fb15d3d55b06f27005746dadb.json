{"ast":null,"code":"import _defineProperty from \"D:\\\\Project\\\\SuperFarmClientTemp\\\\SuperFarmClient\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ActionTypes } from '../contants';\nconst initialStateCart = {\n  cartlist: []\n};\n\nconst cartReducer = (state = initialStateCart, action) => {\n  const cartlist = state.cartlist;\n  const payload = action.payload;\n\n  switch (action.type) {\n    // user의 장바구니 불러오기 \n    case ActionTypes.GET_CART_SUCCESS:\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n\n        if (data !== undefined && data !== null) {\n          return _objectSpread({}, state, {\n            cartlist: data\n          });\n        }\n      }\n\n      return state;\n    // userID, product -> 장바구니에 추가 (DB저장 )\n\n    case ActionTypes.ADD_CART_SUCCESS:\n      console.log(\"addcart 성공!\");\n\n      if (payload !== undefined && payload !== null) {\n        const data = payload.data;\n\n        if (data !== undefined && data !== null) {\n          return _objectSpread({}, state, {\n            cartlist: [...cartlist, data]\n          });\n        }\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:\\Project\\SuperFarmClientTemp\\SuperFarmClient\\src\\reducers\\cart.reducer.js"],"names":["ActionTypes","initialStateCart","cartlist","cartReducer","state","action","payload","type","GET_CART_SUCCESS","undefined","data","ADD_CART_SUCCESS","console","log"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAGA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AADW,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,gBAAT,EAA2BI,MAA3B,KAAsC;AAAA,QAC9CH,QAD8C,GACjCE,KADiC,CAC9CF,QAD8C;AAAA,QAE9CI,OAF8C,GAElCD,MAFkC,CAE9CC,OAF8C;;AAItD,UAAQD,MAAM,CAACE,IAAf;AACI;AACA,SAAKP,WAAW,CAACQ,gBAAjB;AACI,UAAIF,OAAO,KAAKG,SAAZ,IAAyBH,OAAO,KAAK,IAAzC,EAA+C;AAAA,cACnCI,IADmC,GAC1BJ,OAD0B,CACnCI,IADmC;;AAE3C,YAAIA,IAAI,KAAKD,SAAT,IAAsBC,IAAI,KAAK,IAAnC,EAAyC;AACrC,mCACON,KADP;AAEIF,YAAAA,QAAQ,EAAEQ;AAFd;AAIH;AACJ;;AACD,aAAON,KAAP;AAEJ;;AACA,SAAKJ,WAAW,CAACW,gBAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,UAAIP,OAAO,KAAKG,SAAZ,IAAyBH,OAAO,KAAK,IAAzC,EAA+C;AAAA,cACnCI,IADmC,GAC1BJ,OAD0B,CACnCI,IADmC;;AAE3C,YAAIA,IAAI,KAAKD,SAAT,IAAsBC,IAAI,KAAK,IAAnC,EAAyC;AACrC,mCACON,KADP;AAEIF,YAAAA,QAAQ,EAAE,CACN,GAAGA,QADG,EAENQ,IAFM;AAFd;AAOH;AACJ;;AACD,aAAON,KAAP;;AAEJ;AACI,aAAOA,KAAP;AAhCR;AAmCH,CAvCD;;AA2CA,eAAeD,WAAf","sourcesContent":["import { ActionTypes } from '../contants';\r\n\r\n\r\nconst initialStateCart = {\r\n    cartlist: []\r\n};\r\n\r\nconst cartReducer = (state = initialStateCart, action) => {\r\n    const { cartlist } = state;\r\n    const { payload } = action;\r\n\r\n    switch (action.type) {\r\n        // user의 장바구니 불러오기 \r\n        case ActionTypes.GET_CART_SUCCESS:\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload;\r\n                if (data !== undefined && data !== null) {\r\n                    return {\r\n                        ...state,\r\n                        cartlist: data\r\n                    };\r\n                }\r\n            }\r\n            return state;\r\n\r\n        // userID, product -> 장바구니에 추가 (DB저장 )\r\n        case ActionTypes.ADD_CART_SUCCESS:\r\n            console.log(\"addcart 성공!\")\r\n            if (payload !== undefined && payload !== null) {\r\n                const { data } = payload;\r\n                if (data !== undefined && data !== null) {\r\n                    return {\r\n                        ...state,\r\n                        cartlist: [\r\n                            ...cartlist,\r\n                            data\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}