{"ast":null,"code":"var _jsxFileName = \"C:\\\\superfarmclient\\\\SuperFarmClient\\\\src\\\\component\\\\signup\\\\Signup.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Actions } from '../../actions/index';\nimport { connect } from 'react-redux';\nimport { ActionTypes } from '../../contants';\nimport './Signup.css'; // Store가 가진 state를 어떻게 props에 엮을 지 정한다.\n//   (이 동작을 정의하는 함수는 mapStateToProps라고 불립니다)\n// Reducer에 action을 알리는 함수 dispatch를 어떻게 props에 엮을 지 정한다. \n//   (이 동작을 정의하는 함수는 mapDispatchToProps라고 불립니다)\n// 위에 두가지가 적용된 props를 받을 Component를 정한다\n// Store와 Reducer를 연결시킬 수 있도록 만들어진 Component가 반환값이 된다\n\nconst signupAsync = signupModel => dispatch => {\n  return dispatch(Actions.getClientToken()).then(response => {\n    if (response.type === ActionTypes.GET_TOKEN_SUCCESS) {\n      console.log('dispatch signupAsync ActionTypes.GET_TOKEN_SUCCESS ');\n      return dispatch(Actions.signup(signupModel));\n    } else {\n      return Promise.reject(response);\n    }\n  });\n};\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: {\n        value: ''\n      },\n      password: {\n        value: ''\n      },\n      passwordCheck: {\n        value: ''\n      },\n      name: {\n        value: ''\n      },\n      birthday: {\n        value: ''\n      },\n      // gender:{ value:'' },\n      email: {\n        value: ''\n      },\n      address: {\n        value: ''\n      },\n      phone: {\n        value: ''\n      },\n      singupCheck: {\n        idCheck: false,\n        passwordCheck: false,\n        emailCheck: false\n      },\n      signupCheckMessage: {\n        idMessage: '아이디 중복체크를 해주세요',\n        passwordMes: '패스워드를 입력해주세요',\n        emailMessage: '이메일 중복 체크를 해주세요'\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this._passwordCheck = this._passwordCheck.bind(this);\n  }\n\n  componentWillMount() {\n    console.log('willMount 실행');\n  }\n\n  componentDidMount() {\n    console.log('DidMount 실행');\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.handleRadio = this.handleRa;\n    console.log(target, '     :target');\n    console.log(value, '    :value');\n    console.log(name, '   : name');\n    this.setState({\n      [name]: {\n        value: value\n      }\n    });\n    console.log(this.state);\n\n    this._passwordCheck();\n  }\n\n  handleRadio(event) {\n    let obj = {};\n    obj[event.target.value] = event.target.checked;\n    this.setState({\n      gender: {\n        value: event.target.value\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log('submit 실행 합니다.');\n    const signupModel = {\n      id: this.state.id.value,\n      name: this.state.name.value,\n      password: this.state.password.value,\n      birthday: this.state.birthday.value,\n      // gender : this.state.gender.value,\n      signupContact: {\n        phone: this.state.phone.value,\n        address: this.state.address.value,\n        email: this.state.email.value\n      }\n    };\n    const signup = this.props.signup;\n    signup(signupModel);\n  }\n\n  _passwordCheck() {\n    //  console.log({getState},'get State 확인~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')\n    let password1 = this.state.password.value;\n    let password2 = this.state.passwordCheck.value;\n    console.log('password1 = :', password1, '   password2 =  :', password2);\n\n    if (password1 === password2) {\n      this.setState({\n        signupCheckMessage: {\n          passwordMes: '패스워드가 일치 합니다.'\n        },\n        singupCheck: {\n          passwordCheck: true\n        }\n      });\n    } else {\n      this.setState({\n        signupCheckMessage: {\n          passwordMes: '패스워드가 일치 하지 않습니다'\n        },\n        singupCheck: {\n          passwordCheck: false\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SignupForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \" ID \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"id\",\n      value: this.state.id.value,\n      onChange: this.handleInputChange,\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"\\uC544\\uC774\\uB514\\uC911\\uBCF5\\uCCB4\\uD06C\",\n      onClick: this._idCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.signupCheckMessage.idMessage), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Password \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handleInputChange,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Password\\uD655\\uC778 \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"passwordCheck\",\n      onChange: this.handleInputChange,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uD655\\uC778\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.signupCheckMessage.passwordMes), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \" \\uC774\\uB984 \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name.value,\n      onChange: this.handleInputChange,\n      placeholder: \"\\uC774\\uB984\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \" email \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.email.value,\n      onChange: this.handleInputChange,\n      placeholder: \"eamil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"eamil \\uC911\\uBCF5\\uCCB4\\uD06C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \" \\uC0DD\\uC77C \", React.createElement(\"input\", {\n      type: \"Date\",\n      name: \"birthday\",\n      value: this.state.birthday.value,\n      onChange: this.handleInputChange,\n      placeholder: \"birthday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"\\uC8FC\\uC18C \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      value: this.state.address.value,\n      onChange: this.handleInputChange,\n      placeholder: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \" \\uC5F0\\uB77D\\uCC98 \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      value: this.state.phone.value,\n      onChange: this.handleInputChange,\n      placeholder: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      name: \"submit\",\n      value: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Already have account?\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signup: signupModel => dispatch(signupAsync(signupModel))\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["C:\\superfarmclient\\SuperFarmClient\\src\\component\\signup\\Signup.js"],"names":["React","withRouter","Actions","connect","ActionTypes","signupAsync","signupModel","dispatch","getClientToken","then","response","type","GET_TOKEN_SUCCESS","console","log","signup","Promise","reject","Signup","Component","constructor","props","state","id","value","password","passwordCheck","name","birthday","email","address","phone","singupCheck","idCheck","emailCheck","signupCheckMessage","idMessage","passwordMes","emailMessage","handleInputChange","bind","handleSubmit","_passwordCheck","componentWillMount","componentDidMount","event","target","handleRadio","handleRa","setState","obj","checked","gender","e","preventDefault","signupContact","password1","password2","render","_idCheck","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Actions } from '../../actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { ActionTypes } from '../../contants';\r\nimport './Signup.css';\r\n// Store가 가진 state를 어떻게 props에 엮을 지 정한다.\r\n//   (이 동작을 정의하는 함수는 mapStateToProps라고 불립니다)\r\n// Reducer에 action을 알리는 함수 dispatch를 어떻게 props에 엮을 지 정한다. \r\n//   (이 동작을 정의하는 함수는 mapDispatchToProps라고 불립니다)\r\n// 위에 두가지가 적용된 props를 받을 Component를 정한다\r\n// Store와 Reducer를 연결시킬 수 있도록 만들어진 Component가 반환값이 된다\r\n\r\n\r\nconst signupAsync = (signupModel) => dispatch => {\r\n  return dispatch(Actions.getClientToken())\r\n    .then(response => {\r\n      if (response.type === ActionTypes.GET_TOKEN_SUCCESS) {\r\n        console.log('dispatch signupAsync ActionTypes.GET_TOKEN_SUCCESS ')\r\n        return dispatch(Actions.signup(signupModel))\r\n      } else {\r\n        return Promise.reject(response);\r\n      }\r\n    });\r\n};\r\n\r\n\r\nclass Signup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: { value: '' },\r\n      password: { value: '' },\r\n      passwordCheck: { value: '' },\r\n      name: { value: '' },\r\n      birthday: { value: '' },\r\n      // gender:{ value:'' },\r\n      email: { value: '' },\r\n      address: { value: '' },\r\n      phone: { value: '' },\r\n      singupCheck: {\r\n        idCheck: false,\r\n        passwordCheck: false,\r\n        emailCheck: false\r\n      },\r\n      signupCheckMessage: {\r\n        idMessage: '아이디 중복체크를 해주세요',\r\n        passwordMes: '패스워드를 입력해주세요',\r\n        emailMessage: '이메일 중복 체크를 해주세요'\r\n      }\r\n\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this._passwordCheck = this._passwordCheck.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log('willMount 실행')\r\n\r\n  }\r\n  componentDidMount() {\r\n    console.log('DidMount 실행')\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.handleRadio = this.handleRa\r\n\r\n    console.log(target, '     :target')\r\n    console.log(value, '    :value')\r\n    console.log(name, '   : name')\r\n    this.setState({\r\n      [name]: {\r\n        value: value\r\n      }\r\n    });\r\n    console.log(this.state)\r\n    this._passwordCheck()\r\n  }\r\n\r\n  handleRadio(event) {\r\n    let obj = {}\r\n    obj[event.target.value] = event.target.checked\r\n    this.setState({\r\n      gender: {\r\n        value: event.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    console.log('submit 실행 합니다.')\r\n    const signupModel = {\r\n      id: this.state.id.value,\r\n      name: this.state.name.value,\r\n      password: this.state.password.value,\r\n      birthday: this.state.birthday.value,\r\n      // gender : this.state.gender.value,\r\n      signupContact: {\r\n        phone: this.state.phone.value,\r\n        address: this.state.address.value,\r\n        email: this.state.email.value\r\n      }\r\n    }\r\n    const { signup } = this.props;\r\n    signup(signupModel);\r\n  }\r\n\r\n\r\n  _passwordCheck() {\r\n    //  console.log({getState},'get State 확인~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')\r\n    let password1 = this.state.password.value;\r\n    let password2 = this.state.passwordCheck.value;\r\n    console.log('password1 = :', password1, '   password2 =  :', password2)\r\n    if (password1 === password2) {\r\n      this.setState({\r\n        signupCheckMessage: {\r\n          passwordMes: '패스워드가 일치 합니다.'\r\n        },\r\n        singupCheck: {\r\n          passwordCheck: true\r\n        }\r\n      })\r\n    } else {\r\n      this.setState({\r\n        signupCheckMessage: {\r\n          passwordMes: '패스워드가 일치 하지 않습니다'\r\n        },\r\n        singupCheck: {\r\n          passwordCheck: false\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"Signup\">\r\n        <div className=\"SignupForm\">\r\n          <div className=\"top\">\r\n            회원가입\r\n        </div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <li> ID <input type=\"text\" name=\"id\"\r\n              value={this.state.id.value}\r\n              onChange={this.handleInputChange} placeholder=\"아이디\" />\r\n              <input type=\"button\" value=\"아이디중복체크\" onClick={this._idCheck}></input></li>\r\n            <li>{this.state.signupCheckMessage.idMessage}</li>\r\n\r\n            <li>Password <input type=\"password\" name=\"password\"\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"비밀번호\" /> </li>\r\n\r\n            <li>Password확인 <input type=\"password\" name=\"passwordCheck\"\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"비밀번호확인\" /> </li>\r\n            <li>{this.state.signupCheckMessage.passwordMes}</li>\r\n\r\n            <li> 이름 <input type=\"text\" name=\"name\"\r\n              value={this.state.name.value} onChange={this.handleInputChange}\r\n              placeholder=\"이름\" /> </li>\r\n\r\n            <li> email <input type=\"text\" name=\"email\"\r\n              value={this.state.email.value} onChange={this.handleInputChange}\r\n              placeholder=\"eamil\" /><input type=\"button\" value=\"eamil 중복체크\"></input> </li>\r\n\r\n            <li> 생일 <input type=\"Date\" name=\"birthday\"\r\n              value={this.state.birthday.value} onChange={this.handleInputChange}\r\n              placeholder=\"birthday\" /> </li>\r\n\r\n            {/* <li> 남 <input type=\"radio\" name=\"gender\"\r\n          value='남' onChange={this.handleRadio}\r\n          placeholder=\"gender\" /> \r\n          \r\n          여 <input type=\"radio\"name=\"gender\" \r\n          value='여' onChange={this.handleRadio}\r\n          placeholder=\"gender\" /> </li> */}\r\n\r\n            <li>주소 <input type=\"text\" name=\"address\"\r\n              value={this.state.address.value} onChange={this.handleInputChange}\r\n              placeholder=\"address\" /> </li>\r\n\r\n            <li> 연락처 <input type=\"text\" name=\"phone\"\r\n              value={this.state.phone.value} onChange={this.handleInputChange}\r\n              placeholder=\"phone\" />  </li>\r\n            <input type=\"submit\" id=\"submit\" name=\"submit\" value=\"회원가입\" />\r\n          </form>\r\n\r\n          <div className=\"footer\">\r\n            <a href=\"/login\">Already have account?</a>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signup: (signupModel) => dispatch(signupAsync(signupModel))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup);"]},"metadata":{},"sourceType":"module"}