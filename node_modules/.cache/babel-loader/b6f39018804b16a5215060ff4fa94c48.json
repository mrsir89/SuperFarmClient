{"ast":null,"code":"var _jsxFileName = \"C:\\\\superfarmclient\\\\SuperFarmClientTest4\\\\SuperFarmClient\\\\src\\\\component\\\\signup\\\\Signup.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Actions } from '../../actions/index';\nimport { connect } from 'react-redux';\nimport { ActionTypes } from '../../contants';\nimport './Signup.css';\nimport { async } from 'q'; // Store가 가진 state를 어떻게 props에 엮을 지 정한다.\n//   (이 동작을 정의하는 함수는 mapStateToProps라고 불립니다)\n// Reducer에 action을 알리는 함수 dispatch를 어떻게 props에 엮을 지 정한다. \n//   (이 동작을 정의하는 함수는 mapDispatchToProps라고 불립니다)\n// 위에 두가지가 적용된 props를 받을 Component를 정한다\n// Store와 Reducer를 연결시킬 수 있도록 만들어진 Component가 반환값이 된다.\n\nconst onChangeRoute = ({\n  props\n}) => {\n  console.log(props, \"tesdfsefefsaef\");\n  let path = '/';\n  props.history.push(path);\n};\n\nconst signupAsync = (signupCustomer, history) => dispatch => {\n  return dispatch(Actions.getClientToken()).then(response => {\n    if (response.type === ActionTypes.GET_TOKEN_SUCCESS) {\n      console.log('dispatch signupAsync ActionTypes.GET_TOKEN_SUCCESS ');\n      return dispatch(Actions.signup(signupCustomer, history)).then(response => {\n        history.push(\"/\");\n      });\n    } else {\n      return Promise.reject(response);\n    }\n  }).catch(error => {\n    alert('서버와의 통신중 오류가 생겼습니다. 다시 시도해 주세요');\n    return history.push(\"/login\");\n  });\n};\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._idCheckChange = event => {\n      console.log('아이디 바뀜', event.target);\n      let id = '';\n      id = event.target.value;\n      id.trim();\n      const idCheck = this.props.idCheck;\n      console.log(id);\n\n      if (id.length > 3) {\n        console.log(id.length, ' 3자리 넘어서 실행 된다.');\n        idCheck(id).then(response => {\n          console.log(response, '  idCheck 확인~~~~~~~~ ');\n\n          if (response.type === ActionTypes.IDCHECK_SUCCESS) {\n            this.setState({\n              id: id,\n              idCheck: true,\n              idCheckStatus: '사용가능한 아이디 입니다.'\n            });\n            return;\n          } else if (response.type === ActionTypes.IDCHECK_FAIL) {\n            this.setState({\n              id: {\n                value: ''\n              },\n              idCheck: false,\n              idCheckStatus: '사용 불가능한 아이디 입니다.'\n            });\n          }\n        }).catch(error => {\n          console.log(error, ' error 확인 ');\n          this.setState({\n            id: {\n              value: ''\n            },\n            idCheck: false,\n            idCheckStatus: '사용 불가능한 아이디 입니다.'\n          });\n        });\n      } else {\n        this.setState({\n          idCheckStatus: '입력하신 아이디가 짧습니다.',\n          idCheck: false\n        });\n      }\n\n      console.log('Id change 확인중 ', this.state);\n    };\n\n    this._passwordOrigin = event => {\n      var password = event.target.value;\n      password.trim();\n      const asynAction = this.props.asynAction;\n      asynAction().then(response => {\n        this.setState({\n          passwordOrigin: password\n        });\n\n        if (this.state.passwordOrigin.length > 3) {\n          if (this.state.passwordOrigin === this.state.passwordCheck) {\n            this.setState({\n              passwordComent: '비밀번호가 일치 합니다.',\n              passwordCheck: true\n            });\n            console.log('password State', this.state);\n          } else {\n            this.setState({\n              passwordComent: '비밀번호가 일치하지 않습니다.',\n              passwordCheck: true\n            });\n          }\n        } else {\n          this.setState({\n            passwordComent: '비밀번호가 짧습니다.',\n            passwordCheck: true\n          });\n        }\n      });\n      console.log('state 확인~!@!!!!!!!!!!!!!!!!!!!!!', this.state);\n    };\n\n    this._passwordCheck = event => {\n      console.log(event.target);\n      const asynAction = this.props.asynAction;\n      var password = event.target.value;\n      password.trim();\n      console.log(this.props, 'zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz');\n      console.log(event.target.value, 'check target');\n      asynAction().then(response => {\n        console.log(response);\n        this.setState({\n          passwordCheck: password\n        });\n\n        if (this.state.passwordOrigin === this.state.passwordCheck) {\n          this.setState({\n            passwordComent: '비밀번호가 일치 합니다.',\n            passwordCheck: true\n          });\n          console.log('password State', this.state);\n        } else {\n          this.setState({\n            passwordComent: '비밀번호가 일치하지 않습니다.',\n            passwordCheck: true\n          });\n        }\n      });\n      console.log('state 확인~!@!!!!!!!!!!!!!!!!!!!!!', this.state);\n    };\n\n    this._emailCheck = event => {\n      var email = event.target.value;\n      email.trim();\n      const emailCheck = this.props.emailCheck;\n      console.log('email 체크 합니다용~~~', this.props);\n      emailCheck(email).then(response => {\n        if (response.type === ActionTypes.EMAILCHECK_SUCCESS) {\n          this.setState({\n            email: email,\n            emailCheck: true,\n            emailComent: '사용 가능 합니다.'\n          });\n        } else {\n          this.setState({\n            email: '',\n            emailCheck: false,\n            emailComent: '사용 불가능한 email입니다.'\n          });\n        }\n      }).catch(error => {\n        console.log('error', error);\n        this.setState({\n          emailCheck: false,\n          emailComent: '사용 불가능한 email입니다.'\n        });\n      });\n      console.log(email, ' email 확인!!!!!!');\n    };\n\n    this.state = {\n      id: '',\n      passwordOrigin: '',\n      passwordCheck: '',\n      passwordComent: '비밀번호를 입력해 주세요',\n      name: '',\n      birthday: '',\n      gender: '',\n      email: '',\n      address: '',\n      phone: '',\n      emailComent: 'email을 입력하세요',\n      idCheck: false,\n      passwordCheck: false,\n      emailCheck: false\n    };\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._signupSubmit = this._signupSubmit.bind(this);\n    this._idCheckChange = this._idCheckChange.bind(this);\n    this._passwordCheck = this._passwordCheck.bind(this);\n    this._passwordOrigin = this._passwordOrigin.bind(this);\n    this._emailCheck = this._emailCheck.bind(this);\n    this.routeChange = this.routeChange.bind(this);\n  } // Change endpoint after Login (with some error)\n\n\n  routeChange() {\n    let path = '/';\n    this.props.history.push(path);\n  }\n\n  componentWillMount() {\n    console.log('willMount 실행');\n  }\n\n  componentDidMount() {\n    console.log('DidMount 실행');\n  }\n\n  shouldComponentUpdate(nextState) {\n    return JSON.stringify(nextState) != JSON.stringify(this.state);\n  }\n\n  _handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    value.trim();\n    console.log(target, '     :target');\n    console.log(value, '    :value');\n    console.log(name, '   : name');\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  } // 아이디 중복 체크 API 호출로 실시간 체크\n\n\n  componentDidCatch(err, errorInfo) {\n    console.log(\"componentDidCatch\");\n    console.error(err);\n    console.error(errorInfo);\n    this.setState(() => ({\n      err,\n      errorInfo\n    }));\n  } // handleRadio(event) {\n  //   let obj = {}\n  //   obj[event.target.value] = event.target.checked\n  //   this.setState({\n  //     gender: {\n  //       value: event.target.value\n  //     }\n  //   })\n  // }\n\n\n  _signupSubmit(e) {\n    e.preventDefault();\n    console.log('submit 실행 합니다.');\n    let checkpwd = this.state.idCheck;\n    let checkId = this.state.passwordCheck;\n    let checkemail = this.state.emailCheck;\n    console.log('sumbit의 state.', this.state);\n\n    if (checkpwd !== false && checkId !== false && checkemail !== false) {\n      if (this.state.userId !== null && this.state.userId !== '' && this.state.name !== '' && this.state.birthday !== '' && this.state.address !== '' && this.state.phone !== '') {\n        const signupCustomer = {\n          userId: this.state.id,\n          userName: this.state.name,\n          userPassword: this.state.passwordOrigin,\n          userEmail: this.state.email,\n          customerBirth: this.state.birthday,\n          customerGender: this.state.gender,\n          customerPhone: this.state.phone,\n          customerAddr: this.state.address\n        };\n        const signup = this.props.signup;\n        const history = this.props.history;\n        signup(signupCustomer, history);\n      } else {\n        alert('누락된 곳이 있습니다.');\n      }\n    } else {\n      alert(' 입력하지 않은 곳이 있습니다.');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SignupForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(\"form\", {\n      onSubmit: this._signupSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \" ID \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"id\",\n      onChange: this._idCheckChange,\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), this.state.idCheckStatus), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Password \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: this._passwordOrigin,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Password\\uD655\\uC778 \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"passwordCheck\",\n      onChange: this._passwordCheck,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uD655\\uC778\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, this.state.passwordComent), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \" \\uC774\\uB984 \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this._handleInputChange,\n      placeholder: \"\\uC774\\uB984\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), \" 1\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \" email \", React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: this._emailCheck,\n      placeholder: \"eamil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), this.state.emailComent), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \" \\uC0DD\\uC77C \", React.createElement(\"input\", {\n      type: \"Date\",\n      name: \"birthday\",\n      value: this.state.birthday.value,\n      onChange: this._handleInputChange,\n      placeholder: \"birthday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"\\uC8FC\\uC18C \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      value: this.state.address.value,\n      onChange: this._handleInputChange,\n      placeholder: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \" \\uC5F0\\uB77D\\uCC98 \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      value: this.state.phone.value,\n      onChange: this._handleInputChange,\n      placeholder: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      name: \"submit\",\n      value: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Already have account?\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => (console.log('mapDispatchToProps', dispatch), {\n  signup: (signupCustomer, history) => dispatch(signupAsync(signupCustomer, history)),\n  idCheck: id => dispatch(Actions.idCheck(id)),\n  emailCheck: email => dispatch(Actions.emailCheck(email)),\n  asynAction: () => dispatch(Actions.asynAction())\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["C:\\superfarmclient\\SuperFarmClientTest4\\SuperFarmClient\\src\\component\\signup\\Signup.js"],"names":["React","withRouter","Actions","connect","ActionTypes","async","onChangeRoute","props","console","log","path","history","push","signupAsync","signupCustomer","dispatch","getClientToken","then","response","type","GET_TOKEN_SUCCESS","signup","Promise","reject","catch","error","alert","Signup","Component","constructor","_idCheckChange","event","target","id","value","trim","idCheck","length","IDCHECK_SUCCESS","setState","idCheckStatus","IDCHECK_FAIL","state","_passwordOrigin","password","asynAction","passwordOrigin","passwordCheck","passwordComent","_passwordCheck","_emailCheck","email","emailCheck","EMAILCHECK_SUCCESS","emailComent","name","birthday","gender","address","phone","_handleInputChange","bind","_signupSubmit","routeChange","componentWillMount","componentDidMount","shouldComponentUpdate","nextState","JSON","stringify","componentDidCatch","err","errorInfo","e","preventDefault","checkpwd","checkId","checkemail","userId","userName","userPassword","userEmail","customerBirth","customerGender","customerPhone","customerAddr","render","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Actions } from '../../actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { ActionTypes } from '../../contants';\r\nimport './Signup.css';\r\nimport { async } from 'q';\r\n// Store가 가진 state를 어떻게 props에 엮을 지 정한다.\r\n//   (이 동작을 정의하는 함수는 mapStateToProps라고 불립니다)\r\n// Reducer에 action을 알리는 함수 dispatch를 어떻게 props에 엮을 지 정한다. \r\n//   (이 동작을 정의하는 함수는 mapDispatchToProps라고 불립니다)\r\n// 위에 두가지가 적용된 props를 받을 Component를 정한다\r\n// Store와 Reducer를 연결시킬 수 있도록 만들어진 Component가 반환값이 된다.\r\n\r\nconst onChangeRoute = ({ props }) => {\r\n  console.log(props, \"tesdfsefefsaef\");\r\n  let path = '/';\r\n  props.history.push(path);\r\n}\r\n\r\n\r\nconst signupAsync = (signupCustomer,history) => dispatch => {\r\n  return dispatch(Actions.getClientToken())\r\n    .then(response => {\r\n      if (response.type === ActionTypes.GET_TOKEN_SUCCESS) {\r\n        console.log('dispatch signupAsync ActionTypes.GET_TOKEN_SUCCESS ')\r\n        return dispatch(Actions.signup(signupCustomer,history)).then(response=>{\r\n          \r\n          history.push(\"/\")\r\n        })\r\n      } else {\r\n        return Promise.reject(response);\r\n      }\r\n    }).catch(error=>{\r\n      alert('서버와의 통신중 오류가 생겼습니다. 다시 시도해 주세요')\r\n      return history.push(\"/login\")\r\n    });\r\n};\r\n\r\n\r\nclass Signup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      passwordOrigin: '',\r\n      passwordCheck: '',\r\n      passwordComent: '비밀번호를 입력해 주세요',\r\n      name: '',\r\n      birthday:'' ,\r\n      gender:'' ,\r\n      email:'',\r\n      address:'' ,\r\n      phone:'' ,\r\n      emailComent: 'email을 입력하세요',\r\n      idCheck: false,\r\n      passwordCheck: false,\r\n      emailCheck: false\r\n\r\n    };\r\n    this._handleInputChange = this._handleInputChange.bind(this);\r\n    this._signupSubmit = this._signupSubmit.bind(this);\r\n    this._idCheckChange = this._idCheckChange.bind(this);\r\n    this._passwordCheck = this._passwordCheck.bind(this);\r\n    this._passwordOrigin = this._passwordOrigin.bind(this);\r\n    this._emailCheck = this._emailCheck.bind(this);\r\n    this.routeChange = this.routeChange.bind(this);\r\n  }\r\n\r\n\r\n    // Change endpoint after Login (with some error)\r\n    routeChange() {\r\n      let path = '/';\r\n      this.props.history.push(path);\r\n    }\r\n  \r\n\r\n\r\n\r\n  componentWillMount() {\r\n    console.log('willMount 실행')\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('DidMount 실행')\r\n  }\r\n\r\n  shouldComponentUpdate(nextState) {\r\n    return (JSON.stringify(nextState) != JSON.stringify(this.state));\r\n  }\r\n\r\n  _handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    value.trim()\r\n    console.log(target, '     :target')\r\n    console.log(value, '    :value')\r\n    console.log(name, '   : name')\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    console.log(this.state)\r\n  }\r\n\r\n  // 아이디 중복 체크 API 호출로 실시간 체크\r\n  _idCheckChange = (event) => {\r\n    console.log('아이디 바뀜', event.target)\r\n    let id = ''\r\n    id = event.target.value;\r\n    id.trim();\r\n    const { idCheck } = this.props;\r\n    console.log(id)\r\n    if (id.length > 3) {\r\n      console.log(id.length, ' 3자리 넘어서 실행 된다.')\r\n      idCheck(id).then(response => {\r\n        console.log(response, '  idCheck 확인~~~~~~~~ ')\r\n        if (response.type === ActionTypes.IDCHECK_SUCCESS) {\r\n          this.setState({\r\n            id: id,\r\n            idCheck: true,\r\n            idCheckStatus: '사용가능한 아이디 입니다.'\r\n          })\r\n          return\r\n        } else if (response.type === ActionTypes.IDCHECK_FAIL) {\r\n          this.setState({\r\n            id: {\r\n              value: ''\r\n            },\r\n            idCheck: false,\r\n            idCheckStatus: '사용 불가능한 아이디 입니다.'\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        console.log(error, ' error 확인 ')\r\n        this.setState({\r\n          id: {\r\n            value: ''\r\n          },\r\n          idCheck: false,\r\n          idCheckStatus: '사용 불가능한 아이디 입니다.'\r\n        })\r\n      })\r\n    } else {\r\n      this.setState({\r\n        idCheckStatus: '입력하신 아이디가 짧습니다.',\r\n        idCheck: false\r\n      })\r\n    }\r\n    console.log('Id change 확인중 ', this.state)\r\n  }\r\n\r\n  // 비밀번호 체크\r\n  _passwordOrigin = (event) => {\r\n    var password = event.target.value\r\n    password.trim()\r\n    const { asynAction } = this.props;\r\n\r\n    asynAction().then(response => {\r\n      this.setState({\r\n        passwordOrigin: password\r\n      })\r\n      if ((this.state.passwordOrigin).length > 3) {\r\n        if (this.state.passwordOrigin === this.state.passwordCheck) {\r\n          this.setState({\r\n            passwordComent: '비밀번호가 일치 합니다.',\r\n            passwordCheck: true\r\n          })\r\n          console.log('password State', this.state)\r\n        } else {\r\n          this.setState({\r\n            passwordComent: '비밀번호가 일치하지 않습니다.',\r\n            passwordCheck: true\r\n          })\r\n        }\r\n      } else {\r\n        this.setState({\r\n          passwordComent: '비밀번호가 짧습니다.',\r\n          passwordCheck: true\r\n        })\r\n      }\r\n    })\r\n    console.log('state 확인~!@!!!!!!!!!!!!!!!!!!!!!', this.state)\r\n  }\r\n  _passwordCheck = (event) => {\r\n\r\n    console.log(event.target)\r\n    const { asynAction } = this.props;\r\n    var password = event.target.value\r\n    password.trim()\r\n    console.log(this.props, 'zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz')\r\n    console.log(event.target.value, 'check target')\r\n\r\n    asynAction().then((response) => {\r\n      console.log(response)\r\n      this.setState({\r\n        passwordCheck: password\r\n      })\r\n      if (this.state.passwordOrigin === this.state.passwordCheck) {\r\n        this.setState({\r\n          passwordComent: '비밀번호가 일치 합니다.',\r\n          passwordCheck: true\r\n        })\r\n        console.log('password State', this.state)\r\n      } else {\r\n        this.setState({\r\n          passwordComent: '비밀번호가 일치하지 않습니다.',\r\n          passwordCheck: true\r\n        })\r\n      }\r\n    })\r\n    console.log('state 확인~!@!!!!!!!!!!!!!!!!!!!!!', this.state)\r\n  }\r\n\r\n  _emailCheck = (event) => {\r\n    var email = event.target.value;\r\n    email.trim();\r\n    const { emailCheck } = this.props;\r\n    console.log('email 체크 합니다용~~~', this.props)\r\n    emailCheck(email).then(response => {\r\n      if (response.type === ActionTypes.EMAILCHECK_SUCCESS) {\r\n        this.setState({\r\n          email: email,\r\n          emailCheck: true,\r\n          emailComent: '사용 가능 합니다.'\r\n        })\r\n      } else {\r\n        this.setState({\r\n          email:'',\r\n          emailCheck: false,\r\n          emailComent: '사용 불가능한 email입니다.'\r\n        })\r\n      }\r\n    }).catch(error => {\r\n      console.log('error', error)\r\n      this.setState({\r\n        emailCheck: false,\r\n        emailComent: '사용 불가능한 email입니다.'\r\n      });\r\n    })\r\n\r\n    console.log(email, ' email 확인!!!!!!')\r\n  }\r\n\r\n\r\n  componentDidCatch(err, errorInfo) {\r\n    console.log(\"componentDidCatch\");\r\n    console.error(err);\r\n    console.error(errorInfo);\r\n    this.setState(() => ({ err, errorInfo }));\r\n  }\r\n\r\n\r\n  // handleRadio(event) {\r\n  //   let obj = {}\r\n  //   obj[event.target.value] = event.target.checked\r\n  //   this.setState({\r\n  //     gender: {\r\n  //       value: event.target.value\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  _signupSubmit(e) {\r\n    e.preventDefault();\r\n    console.log('submit 실행 합니다.')\r\n    let checkpwd = this.state.idCheck;\r\n    let checkId = this.state.passwordCheck;\r\n    let checkemail = this.state.emailCheck;\r\n    console.log('sumbit의 state.',this.state)\r\n    if (checkpwd !== false && checkId !== false && checkemail !== false) {\r\n      if (this.state.userId !== null && this.state.userId !==''\r\n          &&this.state.name !=='' && this.state.birthday !=='' \r\n          &&this.state.address !=='' && this.state.phone !=='') {\r\n\r\n        const signupCustomer = {\r\n          userId: this.state.id,\r\n          userName: this.state.name,\r\n          userPassword: this.state.passwordOrigin,\r\n          userEmail: this.state.email,\r\n          customerBirth: this.state.birthday,\r\n          customerGender: this.state.gender,\r\n          customerPhone: this.state.phone,\r\n          customerAddr: this.state.address\r\n        }\r\n        const { signup } = this.props;\r\n        const { history }= this.props;\r\n        signup(signupCustomer,history);\r\n\r\n      \r\n      }else{\r\n        alert('누락된 곳이 있습니다.')\r\n      }\r\n    }else {\r\n      alert(' 입력하지 않은 곳이 있습니다.')\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"Signup\">\r\n        <div className=\"SignupForm\">\r\n          <div className=\"top\">\r\n            회원가입\r\n        </div>\r\n          <form onSubmit={this._signupSubmit}>\r\n\r\n            <li> ID <input type=\"text\" name=\"id\"\r\n              onChange={this._idCheckChange} placeholder=\"아이디\" />\r\n              {this.state.idCheckStatus}{/** 여기는 아이디 중복 체크 결과가 나옴 */}\r\n            </li>\r\n\r\n            <li>Password <input type=\"password\" name=\"password\"\r\n              onChange={this._passwordOrigin}\r\n              placeholder=\"비밀번호\" /> </li>\r\n\r\n            <li>Password확인 <input type=\"password\" name=\"passwordCheck\"\r\n              onChange={this._passwordCheck} \r\n              placeholder=\"비밀번호확인\" /> </li>\r\n\r\n            <li>{this.state.passwordComent}</li>\r\n\r\n            <li> 이름 <input type=\"text\" name=\"name\"\r\n              value={this.state.name} onChange={this._handleInputChange}\r\n              placeholder=\"이름\" /> 1</li>\r\n\r\n            <li> email <input type=\"email\" name=\"email\"\r\n              onChange={this._emailCheck}\r\n              placeholder=\"eamil\" />{this.state.emailComent}</li>\r\n\r\n            <li> 생일 <input type=\"Date\" name=\"birthday\"\r\n              value={this.state.birthday.value} onChange={this._handleInputChange}\r\n              placeholder=\"birthday\" /> </li>\r\n\r\n            {/* <li> 남 <input type=\"radio\" name=\"gender\"\r\n                value='남' onChange={this.handleRadio}\r\n                placeholder=\"gender\" /> \r\n                여 <input type=\"radio\"name=\"gender\" \r\n                value='여' onChange={this.handleRadio}\r\n                placeholder=\"gender\" /> </li> */}\r\n\r\n            <li>주소 <input type=\"text\" name=\"address\"\r\n              value={this.state.address.value} onChange={this._handleInputChange}\r\n              placeholder=\"address\" /> </li>\r\n\r\n            <li> 연락처 <input type=\"text\" name=\"phone\"\r\n              value={this.state.phone.value} onChange={this._handleInputChange}\r\n              placeholder=\"phone\" />  </li>\r\n            {/* <input type=\"submit\" id=\"submit\" name=\"submit\" value=\"회원가입\" /> */}\r\n            <input type=\"submit\" id=\"submit\" name=\"submit\" value=\"회원가입\"/>\r\n          </form>\r\n\r\n          <div className=\"footer\">\r\n            <a href=\"/login\">Already have account?</a>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (console.log('mapDispatchToProps', dispatch), {\r\n\r\n  signup: (signupCustomer,history) => dispatch(signupAsync(signupCustomer,history)),\r\n  idCheck: (id) => dispatch(Actions.idCheck(id)),\r\n  emailCheck: (email) => dispatch(Actions.emailCheck(email)),\r\n  asynAction: () => dispatch(Actions.asynAction())\r\n\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup);"]},"metadata":{},"sourceType":"module"}