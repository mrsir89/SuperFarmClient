{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\SuperFarmClient\\\\SuperFarmClient\\\\src\\\\App.js\";\n// ver4  8/11 Ref\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport signup from './component/signup/Signup';\nimport login from './component/login/Login';\nimport { Actions } from './actions';\nimport './App.css';\nimport Cart from './component/board/Cart';\nimport ProductDetail from './component/board/ProductDetail';\nimport ProductList from './component/board/ProductList';\nimport UserEdit from './component/board/UserEdit';\nimport QuestionBoard from './component/board/QuestionBoard'; // REACT는 라이브러리, View를 Rendering 하는 것이 주 기능이며 나머지 기타 기능들(router, ajax등등)은 서드파티 라이브러리를 추가적으로 사용해야 한다.\n// React랑 React+Redux의 결정적 차이\n// React는 React 컴포넌트 자신이 개별적으로 상태관리를 한다.\n// React+Redux는 상태관리를 하는 전용 장소(store)에서 상태를 관리하고,\n// React 컴포넌트는 그걸 보여주기만 하는 용도로 쓰인다.\n\n/*\r\n * App Stateless Component\r\n * \r\n * @param history\r\n * @param location\r\n * @param match\r\n */\n\n/*\r\n  Login signup / getuserMe 완료\r\n*/\n/////////////////////////// stateFul\n\nclass App extends React.Component {\n  render() {\n    // 화면에 html 뷰를 생성.\n    return (// return으로 받는 값들은 나중에 html코드로 바뀐다.  JSX에 변수 넣을 때 반드시 {}\n      React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: ProductList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/signup\",\n        component: signup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        component: login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/cart\",\n        component: Cart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/product/:id\",\n        component: ProductDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/useredit\",\n        Component: UserEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nexport default App; /////////////////////////// stateFul\n// 고민.  어떤것으로 할지???\n// const App = ({ history, location, match }) => {\n//   //0810 productList, productDetail, cart Route 추가 \n//   return (\n//     <div className=\"container\">\n//       <Switch>\n//         <Route exact path=\"/\" component={ProductList} />\n//         <Route path=\"/signup\" component={signup} />\n//         <Route path=\"/login\" component={login} />\n//         <Route path=\"/qnaboard\" component={qnaboard} />\n//         <Route path=\"/cart\" component={Cart} />\n//         <Route path=\"/product/:id\" component={ProductDetail} />\n//       </Switch>\n//     </div>\n//   );\n// }\n// const mapStateToProps = (state) => ({\n//   auth: state.auth\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   logout: () => dispatch(Actions.logout())\n// });\n// export default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["D:\\Project\\SuperFarmClient\\SuperFarmClient\\src\\App.js"],"names":["React","connect","Switch","Route","withRouter","signup","login","Actions","Cart","ProductDetail","ProductList","UserEdit","QuestionBoard","App","Component","render"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AAOA;;;AAIA;;AACA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AAAE;AACT,WAAS;AACP;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEL,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEL,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,cAAZ;AAA2B,QAAA,SAAS,EAAEC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEE,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AADF;AAYD;;AAd+B;;AAgBlC,eAAeE,GAAf,C,CACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// ver4  8/11 Ref\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport signup from './component/signup/Signup';\r\nimport login from './component/login/Login';\r\nimport { Actions } from './actions';\r\nimport './App.css';\r\nimport Cart from './component/board/Cart';\r\nimport ProductDetail from './component/board/ProductDetail';\r\nimport ProductList from './component/board/ProductList';\r\nimport UserEdit from './component/board/UserEdit';\r\nimport QuestionBoard from './component/board/QuestionBoard';\r\n\r\n// REACT는 라이브러리, View를 Rendering 하는 것이 주 기능이며 나머지 기타 기능들(router, ajax등등)은 서드파티 라이브러리를 추가적으로 사용해야 한다.\r\n// React랑 React+Redux의 결정적 차이\r\n// React는 React 컴포넌트 자신이 개별적으로 상태관리를 한다.\r\n// React+Redux는 상태관리를 하는 전용 장소(store)에서 상태를 관리하고,\r\n// React 컴포넌트는 그걸 보여주기만 하는 용도로 쓰인다.\r\n\r\n/*\r\n * App Stateless Component\r\n * \r\n * @param history\r\n * @param location\r\n * @param match\r\n */\r\n/*\r\n  Login signup / getuserMe 완료\r\n*/\r\n\r\n/////////////////////////// stateFul\r\nclass App extends React.Component {\r\n  render() { // 화면에 html 뷰를 생성.\r\n    return ( // return으로 받는 값들은 나중에 html코드로 바뀐다.  JSX에 변수 넣을 때 반드시 {}\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ProductList} />\r\n          <Route path=\"/signup\" component={signup} />\r\n          <Route path=\"/login\" component={login} />\r\n          <Route path=\"/cart\" component={Cart} />\r\n          <Route path=\"/product/:id\" component={ProductDetail} />\r\n          <Route path=\"/useredit\" Component={UserEdit}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n/////////////////////////// stateFul\r\n\r\n\r\n\r\n\r\n// 고민.  어떤것으로 할지???\r\n// const App = ({ history, location, match }) => {\r\n//   //0810 productList, productDetail, cart Route 추가 \r\n//   return (\r\n//     <div className=\"container\">\r\n//       <Switch>\r\n//         <Route exact path=\"/\" component={ProductList} />\r\n//         <Route path=\"/signup\" component={signup} />\r\n//         <Route path=\"/login\" component={login} />\r\n//         <Route path=\"/qnaboard\" component={qnaboard} />\r\n//         <Route path=\"/cart\" component={Cart} />\r\n//         <Route path=\"/product/:id\" component={ProductDetail} />\r\n//       </Switch>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   auth: state.auth\r\n// });\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   logout: () => dispatch(Actions.logout())\r\n// });\r\n\r\n// export default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n"]},"metadata":{},"sourceType":"module"}