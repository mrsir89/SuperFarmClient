{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\SuperFarmClientTemp\\\\SuperFarmClient\\\\src\\\\component\\\\board\\\\ProductDetail.js\";\nimport React from 'react'; //import productDummy from './productDummy'\n// import PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ProductView from './ProductView'; //import { addCart } from '../actions/action';\n\nimport { Link } from 'react-router-dom';\nimport { Actions } from '../../actions/index'; // 제품 상세 페이지\n// 옵션, 가격을 form에 담아서 submit -> 바로구매 or 장바구니\n// 테스트 \n\nclass ProductDetail extends React.Component {\n  constructor(props) {\n    // props 굳이 안써줘도 넘어 옴\n    super(props);\n\n    this._renderProduct = () => {\n      const productId = this.props.match.params.id;\n      const products = this.props.productBoard;\n      console.log(\"products\", products);\n      var newProducts = [];\n\n      if (products !== undefined && products !== null) {\n        newProducts = products.filter(item => item.productBoardNum == productId);\n      }\n\n      console.log(\"newProduct[0] >>>>\", newProducts[0]);\n      this.setState({\n        productInfo: newProducts[0],\n        productBoardNum: newProducts[0].productBoardNum,\n        cartProductName: newProducts[0].productList[0].productName,\n        cartProductPrice: newProducts[0].productList[0].productPrice,\n        cartProductCount: 1,\n        // 추후 변경 예정\n        cartProductImg: newProducts[0].productBoardThumbnail,\n        cartProductOption1: newProducts[0].productList[0].productOption1,\n        cartProductOption2: newProducts[0].productList[0].productOption2\n      });\n      return newProducts[0];\n    };\n\n    this._selectOption1 = productList => {\n      var optionList = [];\n\n      if (productList !== undefined && productList !== null) {\n        optionList = productList.map(item => {\n          return React.createElement(\"option\", {\n            value: item.productOption1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, item.productOption1);\n        });\n      }\n\n      return optionList;\n    };\n\n    this._selectOption2 = productList => {\n      var optionList = [];\n\n      if (productList !== undefined && productList !== null) {\n        optionList = productList.map(item => {\n          return React.createElement(\"option\", {\n            value: item.productOption2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, item.productOption2);\n        });\n      }\n\n      return optionList;\n    };\n\n    const userNum = this.props.userDetails.userNum;\n    const productBoard = this.props.productBoard;\n    this.state = {\n      productInfo: '',\n      userNumber: \"\".concat(userNum),\n      productBoardNum: '',\n      cartProductName: '',\n      cartProductOption1: '',\n      cartProductOption2: '',\n      cartProductPrice: '',\n      cartProductCount: '',\n      cartProductImg: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this._renderProduct = this._renderProduct.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const cartModel = {\n      userNum: this.state.userNumber,\n      productBoardNum: this.state.productBoardNum,\n      cartProductName: this.state.cartProductName,\n      cartProductOption1: this.state.cartProductOption1,\n      cartProductOption2: this.state.cartProductOption2,\n      cartProductPrice: this.state.cartProductPrice,\n      cartProductCount: this.state.cartProductCount,\n      cartProductImg: this.state.cartProductImg\n    };\n    const addCart = this.props.addCart;\n    console.log(\"장바구니 추가>>>\", cartModel);\n    addCart(cartModel);\n  }\n\n  handleInputChange(event) {\n    console.log(\"handler가 실행이 됨 \");\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n    console.log(\"value?? >>\", value);\n    console.log(\"name?? >>\", name);\n    console.log(\"target?? >>\", target);\n  } // 해당 productBoard 번호에 맞는 product Detail정보를 필터를 이용해서 꺼냄 \n  // setState\n  // productBoardNum : {value: newProducts[0].productBoardNum},\n  //       cartProductName : {value:newProducts[0].product.productName},\n  //       cartProductPrice : {value:newProducts[0].product.productPrice},\n  //       cartProductCount : {value:1},\n  //       cartProductImg : {value:newProducts[0].productBoardThumbnail},\n\n\n  componentWillMount() {\n    this._renderProduct();\n  }\n\n  // TODO : userDetails가 없을 경우 에러 처리해줘야함 \n  render() {\n    const productInfo = this.state.productInfo;\n    const productList = productInfo.productList;\n    console.log(\"this.state >>>\", this.state);\n    console.log(\"is State setted? >>\", this.state);\n    return React.createElement(\"div\", {\n      className: \"product-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prod-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prd-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"prd-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      summary: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"caption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488\\uC815\\uBCF4 \\uBAA9\\uB85D\"), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488 \\uC774\\uB984\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, productInfo.productBoardTitle)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488 \\uC18C\\uBD84\\uB958\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, productInfo.lowerCode)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488 \\uAC00\\uACA9(\\uC635\\uC158\\uC5D0 \\uB530\\uB77C \\uB2EC\\uB77C\\uC9C8 \\uC608\\uC815)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, productList.productTaxprice)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"\\uAC1C\\uC218\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"1 (\\uCD94\\uD6C4 \\uBCC0\\uACBD \\uC608\\uC815)\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"\\uBC30\\uC1A1\\uBE44\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, productInfo.productBoardDeliveryPrice))))), React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleFormControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"\\uC635\\uC1581 \\uC120\\uD0DD\"), React.createElement(\"select\", {\n      value: this.state.cartProductOption1,\n      onChange: this.handleInputChange,\n      name: \"cartProductOption1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this._selectOption1(productList))), React.createElement(\"div\", {\n      class: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleFormControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"\\uC635\\uC1582 \\uC120\\uD0DD\"), React.createElement(\"select\", {\n      value: this.state.cartProductOption2,\n      onChange: this.handleInputChange,\n      name: \"cartProductOption2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this._selectOption2(productList)))), React.createElement(\"div\", {\n      className: \"btn-prd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"btn-buy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"\\uAD6C\\uB9E4\")), React.createElement(\"a\", {\n      href: \"/cart\",\n      className: \"btn-buy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uB85C \\uC774\\uB3D9(\\uB9C1\\uD06C)\")), React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      name: \"submit\",\n      value: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8 \\uCD94\\uAC00\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))))), React.createElement(ProductView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }));\n  }\n\n} //옵션 select 에서 class=\"form-control\" id=\"exampleFormControlSelect1\"\n// store에서 state를 복사해서 컨테이너의 props에 붙여넣기 \n\n\nfunction mapStateToProps(state) {\n  const product = state.product,\n        auth = state.auth;\n  const userDetails = auth.userDetails;\n  const productBoard = product.productBoard;\n  return {\n    productBoard,\n    userDetails\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addCart: cartModel => dispatch(Actions.addCart(cartModel))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","map":{"version":3,"sources":["D:\\Project\\SuperFarmClientTemp\\SuperFarmClient\\src\\component\\board\\ProductDetail.js"],"names":["React","connect","withRouter","ProductView","Link","Actions","ProductDetail","Component","constructor","props","_renderProduct","productId","match","params","id","products","productBoard","console","log","newProducts","undefined","filter","item","productBoardNum","setState","productInfo","cartProductName","productList","productName","cartProductPrice","productPrice","cartProductCount","cartProductImg","productBoardThumbnail","cartProductOption1","productOption1","cartProductOption2","productOption2","_selectOption1","optionList","map","_selectOption2","userNum","userDetails","state","userNumber","handleInputChange","bind","handleSubmit","e","preventDefault","cartModel","addCart","event","target","value","name","componentWillMount","render","productBoardTitle","lowerCode","productTaxprice","productBoardDeliveryPrice","mapStateToProps","product","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import productDummy from './productDummy'\r\n// import PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProductView from './ProductView';\r\n//import { addCart } from '../actions/action';\r\nimport { Link } from 'react-router-dom';\r\nimport { Actions } from '../../actions/index';\r\n\r\n\r\n// 제품 상세 페이지\r\n// 옵션, 가격을 form에 담아서 submit -> 바로구매 or 장바구니\r\n// 테스트 \r\nclass ProductDetail extends React.Component {\r\n   constructor(props) {    // props 굳이 안써줘도 넘어 옴\r\n      super(props);\r\n      const { userNum } = this.props.userDetails;\r\n      const { productBoard } = this.props;\r\n\r\n      this.state = {\r\n         productInfo: '',\r\n         userNumber: `${userNum}`,\r\n         productBoardNum: '',\r\n         cartProductName: '',\r\n         cartProductOption1:'',\r\n         cartProductOption2: '',\r\n         cartProductPrice: '',\r\n         cartProductCount: '',\r\n         cartProductImg: '',\r\n      };\r\n\r\n      this.handleInputChange = this.handleInputChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this._renderProduct= this._renderProduct.bind(this);\r\n   }\r\n\r\n   handleSubmit(e) {\r\n      e.preventDefault();\r\n      const cartModel = {\r\n\r\n         userNum: this.state.userNumber,\r\n         productBoardNum: this.state.productBoardNum,\r\n         cartProductName: this.state.cartProductName,\r\n         cartProductOption1: this.state.cartProductOption1,\r\n         cartProductOption2: this.state.cartProductOption2,\r\n         cartProductPrice: this.state.cartProductPrice,\r\n         cartProductCount: this.state.cartProductCount,\r\n         cartProductImg: this.state.cartProductImg\r\n      };\r\n\r\n      const { addCart } = this.props;\r\n      console.log(\"장바구니 추가>>>\", cartModel)\r\n      addCart(cartModel);\r\n   }\r\n\r\n   handleInputChange(event) {\r\n      console.log(\"handler가 실행이 됨 \")\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n\r\n\r\n      this.setState({\r\n         [name]: value\r\n      });\r\n\r\n      console.log(\"value?? >>\", value);\r\n      console.log(\"name?? >>\", name);\r\n      console.log(\"target?? >>\", target);\r\n   }\r\n\r\n   // 해당 productBoard 번호에 맞는 product Detail정보를 필터를 이용해서 꺼냄 \r\n   // setState\r\n   // productBoardNum : {value: newProducts[0].productBoardNum},\r\n   //       cartProductName : {value:newProducts[0].product.productName},\r\n   //       cartProductPrice : {value:newProducts[0].product.productPrice},\r\n   //       cartProductCount : {value:1},\r\n   //       cartProductImg : {value:newProducts[0].productBoardThumbnail},\r\n\r\n   _renderProduct = () => {\r\n\r\n      const productId = this.props.match.params.id;\r\n      const products = this.props.productBoard;\r\n      console.log(\"products\", products)\r\n      var newProducts = [];\r\n      if (products !== undefined && products !== null) {\r\n         newProducts = products.filter((item) => (item.productBoardNum == productId));\r\n      }\r\n      console.log(\"newProduct[0] >>>>\", newProducts[0])\r\n\r\n      this.setState({\r\n         productInfo: newProducts[0],\r\n         productBoardNum: newProducts[0].productBoardNum,\r\n         cartProductName: newProducts[0].productList[0].productName,\r\n         cartProductPrice: newProducts[0].productList[0].productPrice,\r\n         cartProductCount: 1,   // 추후 변경 예정\r\n         cartProductImg: newProducts[0].productBoardThumbnail,\r\n         cartProductOption1: newProducts[0].productList[0].productOption1,\r\n         cartProductOption2: newProducts[0].productList[0].productOption2\r\n      });\r\n\r\n      return newProducts[0];\r\n   }\r\n\r\n   componentWillMount() {\r\n      this._renderProduct();\r\n   }\r\n\r\n\r\n   _selectOption1 = (productList) => {\r\n      var optionList = [];\r\n      if (productList !== undefined && productList !== null) {\r\n         optionList = productList.map(item => {\r\n            return (\r\n               <option value={item.productOption1}>{item.productOption1}</option>\r\n            );\r\n         })\r\n      }\r\n      return optionList;\r\n   }\r\n\r\n   _selectOption2 = (productList) => {\r\n      var optionList = [];\r\n      if (productList !== undefined && productList !== null) {\r\n         optionList = productList.map(item => {\r\n            return (\r\n               <option value={item.productOption2}>{item.productOption2}</option>\r\n            );\r\n         })\r\n      }\r\n      return optionList;\r\n   }\r\n\r\n\r\n   // TODO : userDetails가 없을 경우 에러 처리해줘야함 \r\n   render() {\r\n      const { productInfo } = this.state;\r\n      const { productList } = productInfo;\r\n      console.log(\"this.state >>>\", this.state);\r\n      \r\n      console.log (\"is State setted? >>\", this.state)\r\n      return (\r\n         <div className=\"product-item\">\r\n            <div className=\"prod-info\">\r\n               <div className=\"prd-info\">\r\n\r\n                  <form onSubmit={this.handleSubmit}>\r\n                     <div class=\"prd-table\">\r\n                        <table summary=\"\">\r\n                           <caption>상품정보 목록</caption>\r\n                           <tbody>\r\n                              <tr>\r\n                                 <th scope=\"row\">상품 이름</th>\r\n                                 <td>{productInfo.productBoardTitle}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                 <th scope=\"row\">상품 소분류</th>\r\n                                 <td>{productInfo.lowerCode}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                 <th scope=\"row\">상품 가격(옵션에 따라 달라질 예정)</th>\r\n                                 <td>{productList.productTaxprice}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                 <th scope=\"row\">개수</th>\r\n                                 <td>1 (추후 변경 예정)</td>\r\n                              </tr>\r\n                              <tr>\r\n                                 <th scope=\"row\">배송비</th>\r\n                                 <td>{productInfo.productBoardDeliveryPrice}</td>\r\n                              </tr>\r\n                           </tbody>\r\n                        </table>\r\n                     </div>\r\n\r\n                     <div class=\"form-row\">\r\n\r\n                        <div class=\"form-group col-md-6\">\r\n                           <label for=\"exampleFormControlSelect1\">옵션1 선택</label>\r\n                           <select value={this.state.cartProductOption1} onChange={this.handleInputChange} name=\"cartProductOption1\" >\r\n                              {this._selectOption1(productList)}\r\n                           </select>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-6\">\r\n                           <label for=\"exampleFormControlSelect1\">옵션2 선택</label>\r\n                           <select value={this.state.cartProductOption2} onChange={this.handleInputChange} name=\"cartProductOption2\"  >\r\n                              {this._selectOption2(productList)}\r\n                           </select>\r\n                        </div>\r\n\r\n\r\n                     </div>\r\n\r\n\r\n                     <div className=\"btn-prd\">\r\n                        <p><a href=\"#\" className=\"btn-buy\">구매</a></p>\r\n                        <a href=\"/cart\" className=\"btn-buy\">\r\n                           <p>장바구니로 이동(링크)</p>\r\n                        </a>\r\n                        <input type=\"submit\" id=\"submit\" name=\"submit\" value=\"장바구니 추가\" />\r\n                     </div>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n            <ProductView />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n//옵션 select 에서 class=\"form-control\" id=\"exampleFormControlSelect1\"\r\n\r\n// store에서 state를 복사해서 컨테이너의 props에 붙여넣기 \r\nfunction mapStateToProps(state) {\r\n   const { product, auth } = state;\r\n   const { userDetails } = auth;\r\n   const { productBoard } = product\r\n   return {\r\n      productBoard,\r\n      userDetails\r\n   };\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   addCart: (cartModel) => dispatch(Actions.addCart(cartModel))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);\r\n\r\n"]},"metadata":{},"sourceType":"module"}