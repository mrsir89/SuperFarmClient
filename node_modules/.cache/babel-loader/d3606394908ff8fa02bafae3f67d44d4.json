{"ast":null,"code":"var _jsxFileName = \"C:\\\\superfarmclient\\\\SuperFarmClientTest4\\\\SuperFarmClient\\\\src\\\\component\\\\board\\\\ProductDetail.js\";\nimport React from 'react'; //import productDummy from './productDummy'\n// import PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ProductView from './ProductView'; //import { addCart } from '../actions/action';\n\nimport { Actions } from '../../actions';\nimport { ActionTypes } from '../../contants'; // import './ProductDetail.css';\n// import { thisTypeAnnotation } from '@babel/types';\n// 제품 상세 페이지\n// 옵션, 가격을 form에 담아서 submit -> 바로구매 or 장바구니\n// 테스트 \n\nclass ProductDetail extends React.Component {\n  constructor(props) {\n    // props 굳이 안써줘도 넘어 옴\n    super(props);\n\n    this.handleSubmit = e => {\n      //const  productChoice  = this.state.productChoice;\n      const _this$state = this.state,\n            productChoice = _this$state.productChoice,\n            userNumber = _this$state.userNumber,\n            ProductDetail = _this$state.ProductDetail,\n            quantity = _this$state.quantity;\n      e.preventDefault();\n      console.log(\"productChoice >>>>>>\", productChoice);\n      const cartModel = {\n        userNum: userNumber,\n        productBoardNum: productChoice.productBoardNum,\n        productBoardTitle: ProductDetail.productBoardTitle,\n        cartProductName: productChoice.productName,\n        cartProductOption1: productChoice.productOption1,\n        cartProductOption2: productChoice.productOption2,\n        cartProductPrice: productChoice.productPrice,\n        cartProductCount: Number.parseInt(quantity),\n        cartProductImg: ProductDetail.productBoardCommon,\n        productCode: productChoice.productCode\n      };\n      const addCart = this.props.addCart;\n      console.log(\"장바구니 추가>>>\", cartModel);\n      addCart(cartModel).then(response => {\n        if (response.type === ActionTypes.ADD_CART_SUCCESS) {\n          return alert(\"해당 상품이 장바구니에 추가되었습니다.\");\n        } else if (response.type === ActionTypes.ADD_CART_FAIL) {\n          return alert(\"옵션을 선택해주세요.\");\n        }\n      }); //\n    };\n\n    this._option2Change = (event, productListFromProps) => {\n      let tmpCode = '';\n      tmpCode = event.target.value;\n      const productList = productListFromProps;\n      console.log(\"option2 [[productList]]\", productList);\n      const choiceProduct = productList.filter(productList => productList.productCode == tmpCode);\n      console.log(choiceProduct, 'ssssssssssssssssssssssss');\n\n      if (choiceProduct.length !== 0) {\n        this.setState({\n          productChoice: choiceProduct[0],\n          tmpOption2: choiceProduct[0].productOption2,\n          totalPrice: choiceProduct[0].productPrice\n        });\n      }\n    };\n\n    this._quantityChange = event => {\n      console.log('수량 변경 전 확인', this.state); // if (this.state.tmpOption1 !== null && this.state.tmpOption2 !== null) {\n\n      console.log(' 금액 확인 ', this.state);\n      let quantity = 0;\n      let price = 0;\n      quantity = event.target.value;\n      price = this.state.productChoice.productPrice;\n      console.log(event.target.value, ' 수량 확인');\n      var calcPrice = quantity * price;\n      this.setState({\n        quantity: quantity,\n        totalPrice: calcPrice\n      }); // }else{\n      //    alert('옵션을 먼저 선택하세요')\n      // }\n    };\n\n    const userNum = this.props.userDetails.userNum;\n    const productBoardDetail = this.props.productBoardDetail;\n    const _productList = productBoardDetail.productList;\n    this.state = {\n      ProductDetail: productBoardDetail,\n      productList: _productList,\n      // productInfo: '',\n      userNumber: userNum,\n      quantity: 1,\n      tmpOption1: null,\n      tmpOption2: null,\n      productChoice: '',\n      stock: '',\n      totalPrice: 0\n    }; //this._renderProduct = this._renderProduct.bind(this);\n    // this._renderProduct = this._renderProduct.bind(this);\n\n    this._option1Change = this._option1Change.bind(this);\n    this._option2Change = this._option2Change.bind(this);\n  } // 장바구니 추가 -> action으로 갈 cartModel \n\n\n  _option1Check(productList) {\n    var optionList = [];\n    this.setState({\n      tmpOption2: null\n    });\n\n    if (productList !== undefined && productList !== null) {\n      optionList = productList.map(productList => {\n        return productList;\n      });\n    }\n\n    console.log(optionList, 'ssssssss');\n    return optionList;\n  }\n\n  _option1Change(event) {\n    console.log('여기는 ', event.target.value);\n    this.setState({\n      tmpOption1: event.target.value\n    });\n  }\n\n  _option2Check(productList) {\n    console.log('option1Check', this.state.tmpOption1);\n    var optionList = [];\n    console.log('option1Check ----------', productList);\n\n    if (productList !== undefined && productList !== null) {\n      optionList = productList.filter(productList => this.state.tmpOption1 === productList.productOption1);\n      return optionList;\n    }\n\n    return optionList;\n  } // 옵션2 선택시 변경\n\n\n  _loadProductDetail() {\n    const productBoardNum = this.props.match.params.id;\n    console.log(productBoardNum, ' productBoardNum!!');\n    const loadProductDetails = this.props.loadProductDetails;\n    loadProductDetails(productBoardNum);\n  } // 컴포넌트가 props를 새로 받았을 때 실행된다. \n\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"componentWillReceiveProps 실행됨  >> rerender\");\n    this.setState({\n      ProductDetail: nextProps.productBoardDetail,\n      productList: ProductDetail.productList\n    });\n  }\n\n  componentWillMount() {\n    console.log(this.productBoard, ' will mount');\n\n    this._loadProductDetail(); //this._renderProduct();\n\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate');\n    return JSON.stringify(nextState) != JSON.stringify(this.state);\n  } // TODO : userDetails가 없을 경우 에러 처리해줘야함 \n\n\n  render() {\n    console.log('r e n d e r 시작', this.props);\n    console.log(' render state 확인!!!!!!!', this.state); // const productInfo = this.props.ProductDetail;\n    // const productList = this.props.productList;\n    // console.log('시작 이다!!!!!', productList)\n\n    const productBoardDetail = this.props.productBoardDetail;\n    const productList = productBoardDetail.productList;\n    console.log(\"product Board Detail >>\", productBoardDetail);\n    console.log(\"productList >>\", productList);\n    const productBoardTitle = productBoardDetail.productBoardTitle,\n          lowerCode = productBoardDetail.lowerCode,\n          productBoardDeliveryPrice = productBoardDetail.productBoardDeliveryPrice;\n    return React.createElement(\"div\", {\n      className: \"product-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prod-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prd-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-main-image\",\n      style: {\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../../images/rice.jpg\",\n      alt: \"Cool green dress with red bell\",\n      className: \"img-responsive\",\n      \"data-bigimgsrc\": \"../../images/rice.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: \"../../images/rice.jpg\",\n      className: \"zoomImg\",\n      style: {\n        position: 'absolute',\n        top: '-290.619px',\n        left: '-180.201px',\n        opacity: '0',\n        width: '600px',\n        height: '800px',\n        border: 'none',\n        maxWidth: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      summary: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"caption\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488\\uC815\\uBCF4 \\uBAA9\\uB85D\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488 \\uC774\\uB984\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, productBoardTitle)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"\\uC0C1\\uD488 \\uC18C\\uBD84\\uB958\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, lowerCode)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"\\uBC30\\uC1A1\\uBE44\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, productBoardDeliveryPrice)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \" \\uC635\\uC1581 \\uC120\\uD0DD\"), \" \\xA0\", React.createElement(\"select\", {\n      name: \"option1\",\n      onChange: this._option1Change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"defaultValue\",\n      selected: \"selected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"\\uC635\\uC158\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"), this._option1Check(productList).map(productList => React.createElement(\"option\", {\n      value: productList.productOption1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, productList.productOption1)))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \" \\uC635\\uC1582 \\uC120\\uD0DD\"), \" \\xA0\", React.createElement(\"select\", {\n      name: \"option2\",\n      onChange: e => this._option2Change(e, productList),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"default\",\n      selected: \"selected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"\\uC635\\uC158\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"), this._option2Check(productList).map(productList => React.createElement(\"option\", {\n      value: productList.productCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, productList.productOption2))))))), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \" \\uAC1C\\uC218\"), \" \\xA0\", React.createElement(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      max: \"100\",\n      value: this.state.quantity,\n      step: \"1\",\n      onChange: this._quantityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \" \\uAC00\\uACA9\"), \" \\xA0\", this.state.totalPrice)), React.createElement(\"div\", {\n      className: \"btn-prd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"btn-buy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"\\uAD6C\\uB9E4\"))), React.createElement(\"a\", {\n      href: \"/cart\",\n      className: \"btn-buy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uB85C \\uC774\\uB3D9(\\uB9C1\\uD06C)\")), React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      name: \"submit\",\n      value: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8 \\uCD94\\uAC00\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }))))), React.createElement(ProductView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }));\n  }\n\n} //옵션 select 에서 class=\"form-control\" id=\"exampleFormControlSelect1\"\n// store에서 state를 복사해서 컨테이너의 props에 붙여넣기 \n\n\nfunction mapStateToProps(state) {\n  console.log('mapStateToProps ->>>>>>', state);\n  const product = state.product,\n        auth = state.auth;\n  const userDetails = auth.userDetails;\n  const productBoard = product.productBoard;\n  const productBoardDetail = product.productBoardDetail;\n  return {\n    productBoard,\n    userDetails,\n    productBoardDetail\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addCart: cartModel => dispatch(Actions.addCart(cartModel)),\n  loadProductDetails: productNum => dispatch(Actions.loadProductDetails(productNum))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","map":{"version":3,"sources":["C:\\superfarmclient\\SuperFarmClientTest4\\SuperFarmClient\\src\\component\\board\\ProductDetail.js"],"names":["React","connect","withRouter","ProductView","Actions","ActionTypes","ProductDetail","Component","constructor","props","handleSubmit","e","state","productChoice","userNumber","quantity","preventDefault","console","log","cartModel","userNum","productBoardNum","productBoardTitle","cartProductName","productName","cartProductOption1","productOption1","cartProductOption2","productOption2","cartProductPrice","productPrice","cartProductCount","Number","parseInt","cartProductImg","productBoardCommon","productCode","addCart","then","response","type","ADD_CART_SUCCESS","alert","ADD_CART_FAIL","_option2Change","event","productListFromProps","tmpCode","target","value","productList","choiceProduct","filter","length","setState","tmpOption2","totalPrice","_quantityChange","price","calcPrice","userDetails","productBoardDetail","tmpOption1","stock","_option1Change","bind","_option1Check","optionList","undefined","map","_option2Check","_loadProductDetail","match","params","id","loadProductDetails","componentWillReceiveProps","nextProps","componentWillMount","productBoard","componentDidMount","shouldComponentUpdate","nextState","JSON","stringify","render","lowerCode","productBoardDeliveryPrice","position","overflow","top","left","opacity","width","height","border","maxWidth","mapStateToProps","product","auth","mapDispatchToProps","dispatch","productNum"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CACA;AACA;AAIA;AACA;AACA;;AACA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAK;AACrB,UAAMA,KAAN;;AADgB,SA0BnBC,YA1BmB,GA0BHC,CAAD,IAAO;AACnB;AADmB,0BAE4C,KAAKC,KAFjD;AAAA,YAEXC,aAFW,eAEXA,aAFW;AAAA,YAEIC,UAFJ,eAEIA,UAFJ;AAAA,YAEgBR,aAFhB,eAEgBA,aAFhB;AAAA,YAE+BS,QAF/B,eAE+BA,QAF/B;AAGnBJ,MAAAA,CAAC,CAACK,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,aAApC;AACA,YAAMM,SAAS,GAAG;AACfC,QAAAA,OAAO,EAAEN,UADM;AAEfO,QAAAA,eAAe,EAAER,aAAa,CAACQ,eAFhB;AAGfC,QAAAA,iBAAiB,EAAEhB,aAAa,CAACgB,iBAHlB;AAIfC,QAAAA,eAAe,EAAEV,aAAa,CAACW,WAJhB;AAKfC,QAAAA,kBAAkB,EAAEZ,aAAa,CAACa,cALnB;AAMfC,QAAAA,kBAAkB,EAAEd,aAAa,CAACe,cANnB;AAOfC,QAAAA,gBAAgB,EAAEhB,aAAa,CAACiB,YAPjB;AAQfC,QAAAA,gBAAgB,EAAEC,MAAM,CAACC,QAAP,CAAgBlB,QAAhB,CARH;AASfmB,QAAAA,cAAc,EAAE5B,aAAa,CAAC6B,kBATf;AAUfC,QAAAA,WAAW,EAAEvB,aAAa,CAACuB;AAVZ,OAAlB;AALmB,YAkBXC,OAlBW,GAkBC,KAAK5B,KAlBN,CAkBX4B,OAlBW;AAmBnBpB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,SAA1B;AACAkB,MAAAA,OAAO,CAAClB,SAAD,CAAP,CACCmB,IADD,CACMC,QAAQ,IAAI;AACf,YAAGA,QAAQ,CAACC,IAAT,KAAkBnC,WAAW,CAACoC,gBAAjC,EAAkD;AAC/C,iBAAOC,KAAK,CAAC,uBAAD,CAAZ;AACF,SAFD,MAEO,IAAGH,QAAQ,CAACC,IAAT,KAAkBnC,WAAW,CAACsC,aAAjC,EAA+C;AACnD,iBAAOD,KAAK,CAAC,aAAD,CAAZ;AACF;AACH,OAPD,EApBmB,CA8BlB;AACH,KAzDkB;;AAAA,SAkGnBE,cAlGmB,GAkGF,CAACC,KAAD,EAAQC,oBAAR,KAAiC;AAE/C,UAAIC,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAvB;AACA,YAAMC,WAAW,GAAGJ,oBAApB;AACA7B,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCgC,WAAvC;AACA,YAAMC,aAAa,GAAGD,WAAW,CAACE,MAAZ,CAAmBF,WAAW,IAAIA,WAAW,CAACd,WAAZ,IAA2BW,OAA7D,CAAtB;AACA9B,MAAAA,OAAO,CAACC,GAAR,CAAYiC,aAAZ,EAA2B,0BAA3B;;AACA,UAAIA,aAAa,CAACE,MAAd,KAAyB,CAA7B,EAAgC;AAC7B,aAAKC,QAAL,CAAc;AACXzC,UAAAA,aAAa,EAAEsC,aAAa,CAAC,CAAD,CADjB;AAEXI,UAAAA,UAAU,EAAEJ,aAAa,CAAC,CAAD,CAAb,CAAiBvB,cAFlB;AAGX4B,UAAAA,UAAU,EAAEL,aAAa,CAAC,CAAD,CAAb,CAAiBrB;AAHlB,SAAd;AAKF;AACH,KAjHkB;;AAAA,SAmHnB2B,eAnHmB,GAmHAZ,KAAD,IAAW;AAC1B5B,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKN,KAA/B,EAD0B,CAE1B;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKN,KAA5B;AACA,UAAIG,QAAQ,GAAG,CAAf;AACA,UAAI2C,KAAK,GAAG,CAAZ;AACA3C,MAAAA,QAAQ,GAAG8B,KAAK,CAACG,MAAN,CAAaC,KAAxB;AACAS,MAAAA,KAAK,GAAG,KAAK9C,KAAL,CAAWC,aAAX,CAAyBiB,YAAjC;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY2B,KAAK,CAACG,MAAN,CAAaC,KAAzB,EAAgC,QAAhC;AACA,UAAIU,SAAS,GAAG5C,QAAQ,GAAG2C,KAA3B;AACA,WAAKJ,QAAL,CAAc;AACXvC,QAAAA,QAAQ,EAAEA,QADC;AAEXyC,QAAAA,UAAU,EAAEG;AAFD,OAAd,EAV0B,CAc1B;AACA;AACA;AAEF,KArIkB;;AAAA,UAERvC,OAFQ,GAEI,KAAKX,KAAL,CAAWmD,WAFf,CAERxC,OAFQ;AAAA,UAGRyC,kBAHQ,GAGe,KAAKpD,KAHpB,CAGRoD,kBAHQ;AAAA,UAIRX,YAJQ,GAIQW,kBAJR,CAIRX,WAJQ;AAKhB,SAAKtC,KAAL,GAAa;AACVN,MAAAA,aAAa,EAAEuD,kBADL;AAEVX,MAAAA,WAAW,EAAEA,YAFH;AAGV;AACApC,MAAAA,UAAU,EAAEM,OAJF;AAKVL,MAAAA,QAAQ,EAAE,CALA;AAMV+C,MAAAA,UAAU,EAAE,IANF;AAOVP,MAAAA,UAAU,EAAE,IAPF;AAQV1C,MAAAA,aAAa,EAAE,EARL;AASVkD,MAAAA,KAAK,EAAE,EATG;AAUVP,MAAAA,UAAU,EAAE;AAVF,KAAb,CALgB,CAmBhB;AACA;;AACA,SAAKQ,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKrB,cAAL,GAAsB,KAAKA,cAAL,CAAoBqB,IAApB,CAAyB,IAAzB,CAAtB;AACF,GAzBwC,CA2BzC;;;AAkCAC,EAAAA,aAAa,CAAChB,WAAD,EAAc;AAExB,QAAIiB,UAAU,GAAG,EAAjB;AACA,SAAKb,QAAL,CAAc;AACXC,MAAAA,UAAU,EAAE;AADD,KAAd;;AAIA,QAAIL,WAAW,KAAKkB,SAAhB,IAA6BlB,WAAW,KAAK,IAAjD,EAAuD;AACpDiB,MAAAA,UAAU,GAAGjB,WAAW,CAACmB,GAAZ,CAAgBnB,WAAW,IAAI;AACzC,eACGA,WADH;AAGF,OAJY,CAAb;AAKF;;AACDjC,IAAAA,OAAO,CAACC,GAAR,CAAYiD,UAAZ,EAAwB,UAAxB;AACA,WAAOA,UAAP;AACF;;AACDH,EAAAA,cAAc,CAACnB,KAAD,EAAQ;AAEnB5B,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB2B,KAAK,CAACG,MAAN,CAAaC,KAAjC;AACA,SAAKK,QAAL,CAAc;AACXQ,MAAAA,UAAU,EAAEjB,KAAK,CAACG,MAAN,CAAaC;AADd,KAAd;AAGF;;AAEDqB,EAAAA,aAAa,CAACpB,WAAD,EAAc;AAExBjC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKN,KAAL,CAAWkD,UAAvC;AACA,QAAIK,UAAU,GAAG,EAAjB;AAEAlD,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCgC,WAAvC;;AACA,QAAIA,WAAW,KAAKkB,SAAhB,IAA6BlB,WAAW,KAAK,IAAjD,EAAuD;AACpDiB,MAAAA,UAAU,GAAGjB,WAAW,CAACE,MAAZ,CAAmBF,WAAW,IAAI,KAAKtC,KAAL,CAAWkD,UAAX,KAA0BZ,WAAW,CAACxB,cAAxE,CAAb;AACA,aAAOyC,UAAP;AACF;;AACD,WAAOA,UAAP;AACF,GAjGwC,CAmGzC;;;AAsCAI,EAAAA,kBAAkB,GAAG;AAElB,UAAMlD,eAAe,GAAG,KAAKZ,KAAL,CAAW+D,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;AACAzD,IAAAA,OAAO,CAACC,GAAR,CAAYG,eAAZ,EAA6B,oBAA7B;AAHkB,UAIVsD,kBAJU,GAIa,KAAKlE,KAJlB,CAIVkE,kBAJU;AAMlBA,IAAAA,kBAAkB,CAACtD,eAAD,CAAlB;AAEF,GAjJwC,CAmJzC;;;AACAuD,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AACjC5D,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACA,SAAKoC,QAAL,CAAc;AACXhD,MAAAA,aAAa,EAAGuE,SAAS,CAAChB,kBADf;AAEXX,MAAAA,WAAW,EAAG5C,aAAa,CAAC4C;AAFjB,KAAd;AAKH;;AAEA4B,EAAAA,kBAAkB,GAAG;AAClB7D,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK6D,YAAjB,EAA+B,aAA/B;;AACA,SAAKR,kBAAL,GAFkB,CAGlB;;AACF;;AAEDS,EAAAA,iBAAiB,GAAG;AACjB/D,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACF;;AAED+D,EAAAA,qBAAqB,CAACJ,SAAD,EAAYK,SAAZ,EAAuB;AACzCjE,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAQiE,IAAI,CAACC,SAAL,CAAeF,SAAf,KAA6BC,IAAI,CAACC,SAAL,CAAe,KAAKxE,KAApB,CAArC;AACF,GA1KwC,CA4KzC;;;AACAyE,EAAAA,MAAM,GAAG;AACNpE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKT,KAAnC;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,KAAKN,KAA5C,EAFM,CAGN;AACA;AACA;;AALM,UAOEiD,kBAPF,GAOyB,KAAKpD,KAP9B,CAOEoD,kBAPF;AAAA,UAQEX,WARF,GAQkBW,kBARlB,CAQEX,WARF;AASNjC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC2C,kBAAvC;AACA5C,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BgC,WAA9B;AAVM,UAWC5B,iBAXD,GAW4DuC,kBAX5D,CAWCvC,iBAXD;AAAA,UAWoBgE,SAXpB,GAW4DzB,kBAX5D,CAWoByB,SAXpB;AAAA,UAW+BC,yBAX/B,GAW4D1B,kBAX5D,CAW+B0B,yBAX/B;AAcN,WAEG;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,GAAG,EAAC,uBAAT;AAAiC,MAAA,GAAG,EAAC,gCAArC;AAAsE,MAAA,SAAS,EAAC,gBAAhF;AAAiG,wBAAe,uBAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG;AAAK,MAAA,GAAG,EAAC,uBAAT;AAAiC,MAAA,SAAS,EAAC,SAA3C;AAAqD,MAAA,KAAK,EAAE;AAAED,QAAAA,QAAQ,EAAE,UAAZ;AAAwBE,QAAAA,GAAG,EAAE,YAA7B;AAA2CC,QAAAA,IAAI,EAAE,YAAjD;AAA+DC,QAAAA,OAAO,EAAE,GAAxE;AAA6EC,QAAAA,KAAK,EAAE,OAApF;AAA6FC,QAAAA,MAAM,EAAE,OAArG;AAA8GC,QAAAA,MAAM,EAAE,MAAtH;AAA8HC,QAAAA,QAAQ,EAAE;AAAxI,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADH,CAFH,EAUG;AAAM,MAAA,QAAQ,EAAE,KAAKtF,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAO,MAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAT,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKY,iBAAL,CAFH,CADH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKgE,SAAL,CAFH,CALH,EAcG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,yBAAL,CAFH,CAdH,EAmBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,KAAK,EAAE,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADH,WAEH;AAAS,MAAA,IAAI,EAAC,SAAd;AAAwB,MAAA,QAAQ,EAAE,KAAKvB,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,QAAQ,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADH,EAEI,KAAKE,aAAL,CAAmBhB,WAAnB,EAAgCmB,GAAhC,CAAqCnB,WAAD,IAClC;AAAQ,MAAA,KAAK,EAAEA,WAAW,CAACxB,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIwB,WAAW,CAACxB,cADhB,CADF,CAFJ,CAFG,CAnBH,EA8BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,KAAK,EAAE,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADH,WAEG;AAAS,MAAA,IAAI,EAAC,SAAd;AAAwB,MAAA,QAAQ,EAAEf,CAAC,IAAI,KAAKiC,cAAL,CAAoBjC,CAApB,EAAsBuC,WAAtB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,QAAQ,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADG,EAGF,KAAKoB,aAAL,CAAmBpB,WAAnB,EAAgCmB,GAAhC,CAAqCnB,WAAD,IAClC;AAAQ,MAAA,KAAK,EAAEA,WAAW,CAACd,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIc,WAAW,CAACtB,cADhB,CADF,CAHE,CAFH,CA9BH,CAFH,CAFH,CADH,EAiDG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,WAEG;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,GAAG,EAAC,GAAzB;AAA6B,MAAA,GAAG,EAAC,KAAjC;AAAuC,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWG,QAAzD;AACG,MAAA,IAAI,EAAC,GADR;AACY,MAAA,QAAQ,EAAE,KAAK0C,eAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CAdH,EAmBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,WAEI,KAAK7C,KAAL,CAAW4C,UAFf,CAnBH,CAjDH,EAyEG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR,CAAH,CADH,EAEG;AAAG,MAAA,IAAI,EAAC,OAAR;AAAgB,MAAA,SAAS,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADH,CAFH,EAKG;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,QAAxB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,MAAA,KAAK,EAAC,uCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,CAzEH,CAVH,CADH,CADH,EA+FG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/FH,CAFH;AAoGF;;AA/RwC,C,CAiS5C;AAEA;;;AACA,SAASyC,eAAT,CAAyBrF,KAAzB,EAAgC;AAC7BK,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCN,KAAvC;AAD6B,QAErBsF,OAFqB,GAEHtF,KAFG,CAErBsF,OAFqB;AAAA,QAEZC,IAFY,GAEHvF,KAFG,CAEZuF,IAFY;AAAA,QAGrBvC,WAHqB,GAGLuC,IAHK,CAGrBvC,WAHqB;AAAA,QAIrBmB,YAJqB,GAIJmB,OAJI,CAIrBnB,YAJqB;AAAA,QAKrBlB,kBALqB,GAKEqC,OALF,CAKrBrC,kBALqB;AAM7B,SAAO;AACJkB,IAAAA,YADI;AAEJnB,IAAAA,WAFI;AAGJC,IAAAA;AAHI,GAAP;AAKF;;AAGD,MAAMuC,kBAAkB,GAAGC,QAAQ,KAAK;AACrChE,EAAAA,OAAO,EAAGlB,SAAD,IAAekF,QAAQ,CAACjG,OAAO,CAACiC,OAAR,CAAgBlB,SAAhB,CAAD,CADK;AAErCwD,EAAAA,kBAAkB,EAAG2B,UAAD,IAAgBD,QAAQ,CAACjG,OAAO,CAACuE,kBAAR,CAA2B2B,UAA3B,CAAD;AAFP,CAAL,CAAnC;;AAOA,eAAerG,OAAO,CAACgG,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9F,aAA7C,CAAf","sourcesContent":["import React from 'react';\r\n//import productDummy from './productDummy'\r\n// import PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProductView from './ProductView';\r\n//import { addCart } from '../actions/action';\r\nimport { Actions } from '../../actions';\r\nimport { ActionTypes } from '../../contants';\r\n// import './ProductDetail.css';\r\n// import { thisTypeAnnotation } from '@babel/types';\r\n\r\n\r\n\r\n// 제품 상세 페이지\r\n// 옵션, 가격을 form에 담아서 submit -> 바로구매 or 장바구니\r\n// 테스트 \r\nclass ProductDetail extends React.Component {\r\n\r\n   constructor(props) {    // props 굳이 안써줘도 넘어 옴\r\n      super(props);\r\n      const { userNum } = this.props.userDetails;\r\n      const { productBoardDetail } = this.props;\r\n      const { productList } = productBoardDetail;\r\n      this.state = {\r\n         ProductDetail: productBoardDetail,\r\n         productList: productList,\r\n         // productInfo: '',\r\n         userNumber: userNum,\r\n         quantity: 1,\r\n         tmpOption1: null,\r\n         tmpOption2: null,\r\n         productChoice: '',\r\n         stock: '',\r\n         totalPrice: 0\r\n      };\r\n\r\n\r\n      //this._renderProduct = this._renderProduct.bind(this);\r\n      // this._renderProduct = this._renderProduct.bind(this);\r\n      this._option1Change = this._option1Change.bind(this);\r\n      this._option2Change = this._option2Change.bind(this);\r\n   }\r\n\r\n   // 장바구니 추가 -> action으로 갈 cartModel \r\n   handleSubmit = (e) => {\r\n      //const  productChoice  = this.state.productChoice;\r\n      const { productChoice, userNumber, ProductDetail, quantity } = this.state\r\n      e.preventDefault();\r\n      console.log(\"productChoice >>>>>>\", productChoice)\r\n      const cartModel = {\r\n         userNum: userNumber,\r\n         productBoardNum: productChoice.productBoardNum,\r\n         productBoardTitle: ProductDetail.productBoardTitle,\r\n         cartProductName: productChoice.productName,\r\n         cartProductOption1: productChoice.productOption1,\r\n         cartProductOption2: productChoice.productOption2,\r\n         cartProductPrice: productChoice.productPrice,\r\n         cartProductCount: Number.parseInt(quantity),\r\n         cartProductImg: ProductDetail.productBoardCommon,\r\n         productCode: productChoice.productCode\r\n      };\r\n\r\n      const { addCart } = this.props;\r\n      console.log(\"장바구니 추가>>>\", cartModel)\r\n      addCart(cartModel)\r\n      .then(response => {\r\n         if(response.type === ActionTypes.ADD_CART_SUCCESS){\r\n            return alert(\"해당 상품이 장바구니에 추가되었습니다.\")\r\n         } else if(response.type === ActionTypes.ADD_CART_FAIL){\r\n            return alert(\"옵션을 선택해주세요.\")\r\n         }\r\n      }\r\n         \r\n         \r\n      )//\r\n   }\r\n\r\n   _option1Check(productList) {\r\n\r\n      var optionList = [];\r\n      this.setState({\r\n         tmpOption2: null\r\n      })\r\n\r\n      if (productList !== undefined && productList !== null) {\r\n         optionList = productList.map(productList => {\r\n            return (\r\n               productList\r\n            );\r\n         })\r\n      }\r\n      console.log(optionList, 'ssssssss')\r\n      return optionList;\r\n   }\r\n   _option1Change(event) {\r\n\r\n      console.log('여기는 ', event.target.value)\r\n      this.setState({\r\n         tmpOption1: event.target.value\r\n      })\r\n   }\r\n\r\n   _option2Check(productList) {\r\n\r\n      console.log('option1Check', this.state.tmpOption1)\r\n      var optionList = [];\r\n\r\n      console.log('option1Check ----------', productList)\r\n      if (productList !== undefined && productList !== null) {\r\n         optionList = productList.filter(productList => this.state.tmpOption1 === productList.productOption1);\r\n         return optionList;\r\n      }\r\n      return optionList;\r\n   }\r\n\r\n   // 옵션2 선택시 변경\r\n   _option2Change = (event, productListFromProps) => {\r\n\r\n      let tmpCode = ''\r\n      tmpCode = event.target.value;\r\n      const productList = productListFromProps;\r\n      console.log(\"option2 [[productList]]\", productList)\r\n      const choiceProduct = productList.filter(productList => productList.productCode == tmpCode)\r\n      console.log(choiceProduct, 'ssssssssssssssssssssssss')\r\n      if (choiceProduct.length !== 0) {\r\n         this.setState({\r\n            productChoice: choiceProduct[0],\r\n            tmpOption2: choiceProduct[0].productOption2,\r\n            totalPrice: choiceProduct[0].productPrice\r\n         })\r\n      }\r\n   }\r\n\r\n   _quantityChange = (event) => {\r\n      console.log('수량 변경 전 확인', this.state)\r\n      // if (this.state.tmpOption1 !== null && this.state.tmpOption2 !== null) {\r\n      console.log(' 금액 확인 ', this.state)\r\n      let quantity = 0;\r\n      let price = 0;\r\n      quantity = event.target.value;\r\n      price = this.state.productChoice.productPrice;\r\n      console.log(event.target.value, ' 수량 확인')\r\n      var calcPrice = quantity * price\r\n      this.setState({\r\n         quantity: quantity,\r\n         totalPrice: calcPrice\r\n      })\r\n      // }else{\r\n      //    alert('옵션을 먼저 선택하세요')\r\n      // }\r\n\r\n   }\r\n\r\n   _loadProductDetail() {\r\n\r\n      const productBoardNum = this.props.match.params.id;\r\n      console.log(productBoardNum, ' productBoardNum!!')\r\n      const { loadProductDetails } = this.props;\r\n\r\n      loadProductDetails(productBoardNum);\r\n\r\n   }\r\n\r\n   // 컴포넌트가 props를 새로 받았을 때 실행된다. \r\n   componentWillReceiveProps(nextProps){\r\n      console.log(\"componentWillReceiveProps 실행됨  >> rerender\")\r\n      this.setState({\r\n         ProductDetail : nextProps.productBoardDetail,\r\n         productList : ProductDetail.productList\r\n\r\n      })\r\n  }\r\n\r\n   componentWillMount() {\r\n      console.log(this.productBoard, ' will mount')\r\n      this._loadProductDetail();\r\n      //this._renderProduct();\r\n   }\r\n\r\n   componentDidMount() {\r\n      console.log('componentDidMount')\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState) {\r\n      console.log('shouldComponentUpdate')\r\n      return (JSON.stringify(nextState) != JSON.stringify(this.state));\r\n   }\r\n\r\n   // TODO : userDetails가 없을 경우 에러 처리해줘야함 \r\n   render() {\r\n      console.log('r e n d e r 시작', this.props)\r\n      console.log(' render state 확인!!!!!!!', this.state)\r\n      // const productInfo = this.props.ProductDetail;\r\n      // const productList = this.props.productList;\r\n      // console.log('시작 이다!!!!!', productList)\r\n\r\n      const { productBoardDetail } = this.props;\r\n      const { productList } = productBoardDetail;\r\n      console.log(\"product Board Detail >>\", productBoardDetail)\r\n      console.log(\"productList >>\", productList)\r\n      const {productBoardTitle, lowerCode, productBoardDeliveryPrice} = productBoardDetail;\r\n\r\n\r\n      return (\r\n\r\n         <div className=\"product-item\">\r\n            <div className=\"prod-info\">\r\n               <div className=\"prd-info\">\r\n                  {/* ------------------------------------------------------------------------------------------------ */}\r\n                  <div className=\"col-md-6 col-sm-6\">\r\n                     <div className=\"product-main-image\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n                        <img src=\"../../images/rice.jpg\" alt=\"Cool green dress with red bell\" className=\"img-responsive\" data-bigimgsrc=\"../../images/rice.jpg\" />\r\n                        <img src=\"../../images/rice.jpg\" className=\"zoomImg\" style={{ position: 'absolute', top: '-290.619px', left: '-180.201px', opacity: '0', width: '600px', height: '800px', border: 'none', maxWidth: 'none' }} />\r\n                     </div>\r\n                  </div>\r\n                  {/* ------------------------------------------------------------------------------------------------ */}\r\n\r\n                  <form onSubmit={this.handleSubmit}>\r\n                     <div className=\"col-md-6 col-sm-6\">\r\n\r\n                        <table summary=\"\">\r\n                           <caption><strong>상품정보 목록</strong></caption>\r\n                           <tbody>\r\n                              <tr>\r\n                                 <th scope=\"row\">상품 이름</th>\r\n                                 <td>{productBoardTitle}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                 <th scope=\"row\">상품 소분류</th>\r\n                                 <td>{lowerCode}</td>\r\n                              </tr>\r\n                              {/* {/* <tr>\r\n                                 <th scope=\"row\">상품 가격(옵션에 따라 달라질 예정)</th>\r\n                                 {/* <td>{productList.productTaxprice}</td> */}\r\n                              {/*</tr> */}\r\n\r\n                              <tr>\r\n                                 <th scope=\"row\">배송비</th>\r\n                                 <td>{productBoardDeliveryPrice}</td>\r\n                              </tr>\r\n\r\n                              <tr> \r\n                                 <th scope =\"row\"> 옵션1 선택</th> &nbsp;\r\n                           < select name=\"option1\" onChange={this._option1Change}>\r\n                              <option value='defaultValue' selected=\"selected\">옵션을 선택하세요</option>\r\n                              {this._option1Check(productList).map((productList) => (\r\n                                 <option value={productList.productOption1} >\r\n                                    {productList.productOption1}</option>\r\n                              ))}\r\n                               </select>\r\n                              </tr>\r\n\r\n                              <tr> \r\n                                 <th scope =\"row\"> 옵션2 선택</th> &nbsp;\r\n                                 < select name=\"option2\" onChange={e => this._option2Change(e,productList)}>\r\n                              <option value=\"default\" selected=\"selected\">\r\n                                 옵션을 선택하세요</option>\r\n                              {this._option2Check(productList).map((productList) => (\r\n                                 <option value={productList.productCode} >\r\n                                    {productList.productOption2}</option>\r\n                              ))}\r\n                                 </select>\r\n                              </tr>\r\n                           </tbody>\r\n                        </table>\r\n                     </div>\r\n                     <div className=\"form-row\">\r\n                        {/* <div className=\"form-group col-md-6\">\r\n                           <label for=\"exampleFormControlSelect1\">옵션1 선택</label> &nbsp;\r\n                           < select name=\"option1\" onChange={this._option1Change}>\r\n                              <option value='defaultValue' selected=\"selected\">옵션을 선택하세요</option>\r\n                              {this._option1Check(productList).map((productList) => (\r\n                                 <option value={productList.productOption1} >\r\n                                    {productList.productOption1}</option>\r\n                              ))}\r\n                           </select>\r\n                        </div> */}\r\n\r\n                        \r\n\r\n                        <div>\r\n                           <label > 개수</label> &nbsp;\r\n                           <input type=\"number\" min=\"1\" max=\"100\" value={this.state.quantity}\r\n                              step=\"1\" onChange={this._quantityChange}></input>\r\n                        </div>\r\n                        <div>\r\n                           <label> 가격</label> &nbsp;\r\n                           {this.state.totalPrice}\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"btn-prd\">\r\n                        <p><button><a href=\"#\" className=\"btn-buy\">구매</a></button></p>\r\n                        <a href=\"/cart\" className=\"btn-buy\">\r\n                           <p>장바구니로 이동(링크)</p>\r\n                        </a>\r\n                        <input type=\"submit\" id=\"submit\" name=\"submit\" value=\"장바구니 추가\" />\r\n                     </div>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n            <ProductView />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n//옵션 select 에서 class=\"form-control\" id=\"exampleFormControlSelect1\"\r\n\r\n// store에서 state를 복사해서 컨테이너의 props에 붙여넣기 \r\nfunction mapStateToProps(state) {\r\n   console.log('mapStateToProps ->>>>>>', state)\r\n   const { product, auth } = state;\r\n   const { userDetails } = auth;\r\n   const { productBoard } = product\r\n   const { productBoardDetail } = product;\r\n   return {\r\n      productBoard,\r\n      userDetails,\r\n      productBoardDetail\r\n   };\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   addCart: (cartModel) => dispatch(Actions.addCart(cartModel)),\r\n   loadProductDetails: (productNum) => dispatch(Actions.loadProductDetails(productNum))\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);\r\n\r\n"]},"metadata":{},"sourceType":"module"}