{"ast":null,"code":"class StateLoader {\n  loadState() {\n    try {\n      let state = localStorage.getItem(\"http://localhost:8080/state\");\n\n      if (state !== undefined && state !== null) {\n        return JSON.parse(state);\n      }\n    } catch (error) {\n      // 여기에 storage Error 메세지 넣든지 \n      console.log('error storage 불러오기 에러 입니다.', error);\n    }\n\n    return this.initialState();\n  }\n\n  saveState(state) {\n    try {\n      let json = JSON.stringify(state);\n      localStorage.setItem(\"http://localhost:8080/state\", json);\n    } catch (error) {\n      console.log('error storage 저장 에러 입니다.', error);\n    }\n  }\n\n  initialState() {\n    return {\n      auth: {\n        retryCount: 0,\n        token: null,\n        userDetails: null,\n        signupModel: null\n      },\n      product: {\n        items: [],\n        cart: []\n      },\n      // 각 페이지 마다 questionBoard들, 현재의 페이지 저장\n      questionBoard: {\n        page: 1,\n        questionBoard: []\n      },\n      userEdit: {\n        user: [],\n        customer: []\n      }\n    };\n  }\n\n}\n\nexport default StateLoader;","map":{"version":3,"sources":["D:\\Project\\SuperFarmClient\\SuperFarmClient\\src\\util\\StateLoader.js"],"names":["StateLoader","loadState","state","localStorage","getItem","undefined","JSON","parse","error","console","log","initialState","saveState","json","stringify","setItem","auth","retryCount","token","userDetails","signupModel","product","items","cart","questionBoard","page","userEdit","user","customer"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;AAEdC,EAAAA,SAAS,GAAG;AACR,QAAI;AACA,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,6BAArB,CAAZ;;AACA,UAAIF,KAAK,KAAKG,SAAV,IAAuBH,KAAK,KAAK,IAArC,EAA2C;AACvC,eAAOI,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAP;AACH;AACJ,KALD,CAKE,OAAOM,KAAP,EAAc;AACZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,KAA1C;AACH;;AACD,WAAO,KAAKG,YAAL,EAAP;AACH;;AAEDC,EAAAA,SAAS,CAACV,KAAD,EAAQ;AACb,QAAI;AACA,UAAIW,IAAI,GAAGP,IAAI,CAACQ,SAAL,CAAeZ,KAAf,CAAX;AACAC,MAAAA,YAAY,CAACY,OAAb,CAAqB,6BAArB,EAAoDF,IAApD;AACH,KAHD,CAGE,OAAOL,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAxC;AACH;AACJ;;AAEDG,EAAAA,YAAY,GAAG;AACX,WAAO;AACHK,MAAAA,IAAI,EAAE;AACFC,QAAAA,UAAU,EAAE,CADV;AAEFC,QAAAA,KAAK,EAAE,IAFL;AAGFC,QAAAA,WAAW,EAAE,IAHX;AAIFC,QAAAA,WAAW,EAAE;AAJX,OADH;AAOHC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,IAAI,EAAE;AAFD,OAPN;AAWH;AACAC,MAAAA,aAAa,EAAE;AACXC,QAAAA,IAAI,EAAC,CADM;AAEXD,QAAAA,aAAa,EAAC;AAFH,OAZZ;AAgBHE,MAAAA,QAAQ,EAAE;AACNC,QAAAA,IAAI,EAAC,EADC;AAENC,QAAAA,QAAQ,EAAC;AAFH;AAhBP,KAAP;AAqBH;;AA9Ca;;AAiDlB,eAAe5B,WAAf","sourcesContent":["class StateLoader {\r\n\r\n    loadState() {\r\n        try {\r\n            let state = localStorage.getItem(\"http://localhost:8080/state\");\r\n            if (state !== undefined && state !== null) {\r\n                return JSON.parse(state);\r\n            }\r\n        } catch (error) {\r\n            // 여기에 storage Error 메세지 넣든지 \r\n            console.log('error storage 불러오기 에러 입니다.', error)\r\n        }\r\n        return this.initialState();\r\n    }\r\n\r\n    saveState(state) {\r\n        try {\r\n            let json = JSON.stringify(state);\r\n            localStorage.setItem(\"http://localhost:8080/state\", json);\r\n        } catch (error) {\r\n            console.log('error storage 저장 에러 입니다.', error)\r\n        }\r\n    }\r\n\r\n    initialState() {\r\n        return {\r\n            auth: {\r\n                retryCount: 0,\r\n                token: null,\r\n                userDetails: null,\r\n                signupModel: null\r\n            },\r\n            product: {\r\n                items: [],\r\n                cart: []\r\n            },\r\n            // 각 페이지 마다 questionBoard들, 현재의 페이지 저장\r\n            questionBoard: {\r\n                page:1,\r\n                questionBoard:[]\r\n            },\r\n            userEdit: {\r\n                user:[],\r\n                customer:[]\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport default StateLoader;"]},"metadata":{},"sourceType":"module"}